STATUS: CLEANER DOES NOT FIX
MODIFIED: N/A
MODIFIED FILE: N/A
CLEANER: com.alibaba.wasp.client.TestFClientLoadBalance.testNextWithWrongSession
CLEANER FILE: /home/alex/Repositories/wasp/src/test/java/com/alibaba/wasp/client/TestFClientLoadBalance.java
POLLUTER: com.alibaba.wasp.client.TestAdmin.testCloseEntityGroupWhenEncodedEntityGroupNameIsNotGiven
POLLUTER FILE: /home/alex/Repositories/wasp/src/test/java/com/alibaba/wasp/client/TestAdmin.java
ORIGINAL CLEANER SIZE: 6
NEW CLEANER SIZE: 6
ELAPSED TIME: 0.0
==========================
@@ -0,0 +0,38 @@
+ {
+     {
+         try {
+             TEST_UTIL.getConfiguration().setBoolean("wasp.online.schema.update.enable", true);
+             TEST_UTIL.getConfiguration().setInt("wasp.fserver.msginterval", 100);
+             TEST_UTIL.getConfiguration().setInt("wasp.client.pause", 250);
+             TEST_UTIL.getConfiguration().setInt("wasp.client.retries.number", 6);
+             TEST_UTIL.getConfiguration().setBoolean("wasp.master.enabletable.roundrobin", true);
+             TEST_UTIL.getConfiguration().setBoolean("wasp.ipc.server.blacklist.enable", true);
+             TEST_UTIL.startMiniCluster(3);
+             TEST_UTIL.createTable(TABLE);
+             TEST_UTIL.getWaspAdmin().disableTable(TABLE);
+             client = new FClient(TEST_UTIL.getConfiguration());
+             client.execute("create index test_index on " + TABLE_NAME + "(column3);");
+             TEST_UTIL.getWaspAdmin().waitTableNotLocked(TABLE);
+             TEST_UTIL.getWaspAdmin().enableTable(TABLE);
+         } catch (Throwable ex) {
+         } finally {
+         }
+     }
+     {
+     }
+     try {
+         sessionId = "testSessionId";
+         client.next(sessionId);
+     } catch (Throwable ex) {
+     } finally {
+     }
+     {
+     }
+     {
+         try {
+             TEST_UTIL.shutdownMiniCluster();
+         } catch (Throwable ex) {
+         } finally {
+         }
+     }
+ }
