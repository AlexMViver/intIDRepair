STATUS: CLEANER DOES NOT FIX
MODIFIED: N/A
MODIFIED FILE: N/A
CLEANER: com.alibaba.wasp.TestStartingCluster.testStartAndShutdownCluster
CLEANER FILE: /home/alex/Repositories/wasp/src/test/java/com/alibaba/wasp/TestStartingCluster.java
POLLUTER: com.alibaba.wasp.client.TestAdmin.testTableExist
POLLUTER FILE: /home/alex/Repositories/wasp/src/test/java/com/alibaba/wasp/client/TestAdmin.java
ORIGINAL CLEANER SIZE: 16
NEW CLEANER SIZE: 16
ELAPSED TIME: 0.0
==========================
@@ -0,0 +0,36 @@
+ {
+     {
+     }
+     {
+     }
+     WaspTestingUtility waspTestingUtility = new WaspTestingUtility();
+     waspTestingUtility.getConfiguration().setClass(FConstants.REDO_IMPL, MemRedoLog.class, Redo.class);
+     try {
+         waspTestingUtility.startMiniCluster(1);
+         byte[] tableName = Bytes.toBytes("testStartAndShutdownCluster");
+         waspTestingUtility.createTable(tableName);
+         waspTestingUtility.waitTableEnabled(tableName, 60 * 1000);
+         waspTestingUtility.getWaspCluster().getEntityGroups(tableName);
+     } catch (Throwable t) {
+         LOG.warn("Failed starting mini cluster", t);
+         fail("Failed starting cluster");
+     } finally {
+         waspTestingUtility.shutdownMiniCluster();
+     }
+     try {
+         waspTestingUtility.startMiniCluster(1);
+         byte[] tableName = Bytes.toBytes("testStartAndShutdownCluster");
+         waspTestingUtility.createTable(tableName);
+         waspTestingUtility.waitTableEnabled(tableName, 60 * 1000);
+         waspTestingUtility.getWaspCluster().getEntityGroups(tableName);
+     } catch (Throwable t) {
+         LOG.warn("Failed starting mini cluster", t);
+         fail("Failed starting cluster");
+     } finally {
+         waspTestingUtility.shutdownMiniCluster();
+     }
+     {
+     }
+     {
+     }
+ }
