STATUS: CLEANER DOES NOT FIX
MODIFIED: N/A
MODIFIED FILE: N/A
CLEANER: com.alibaba.wasp.client.TestFromClientSide.testQueryNext
CLEANER FILE: /home/alex/Repositories/wasp/src/test/java/com/alibaba/wasp/client/TestFromClientSide.java
POLLUTER: com.alibaba.wasp.client.TestFromClientSide.testExecute
POLLUTER FILE: /home/alex/Repositories/wasp/src/test/java/com/alibaba/wasp/client/TestFromClientSide.java
ORIGINAL CLEANER SIZE: 18
NEW CLEANER SIZE: 18
ELAPSED TIME: 0.0
==========================
@@ -0,0 +0,51 @@
+ {
+     {
+         try {
+             WaspTestingUtility.adjustLogLevel();
+             TEST_UTIL.getConfiguration().setInt("wasp.client.retries.number", 3);
+             TEST_UTIL.startMiniCluster(3);
+             TableSchemaCacheReader.getInstance(TEST_UTIL.getConfiguration()).clearCache();
+             TEST_UTIL.createTable(TABLE);
+             TEST_UTIL.getWaspAdmin().disableTable(TABLE);
+             client = new FClient(TEST_UTIL.getConfiguration());
+             client.execute("create index " + INDEX_NAME + " on " + TABLE_NAME + "(column3);");
+             TEST_UTIL.getWaspAdmin().waitTableNotLocked(TABLE);
+             TEST_UTIL.getWaspAdmin().enableTable(TABLE);
+         } catch (Throwable ex) {
+         } finally {
+         }
+     }
+     {
+         try {
+         } catch (Throwable ex) {
+         } finally {
+         }
+     }
+     String INSERT = "Insert into " + TABLE_NAME + "(column1,column2,column3) values (21,1,'binlijin');";
+     Pair<String, Pair<Boolean, List<ExecuteResult>>> insertRet = client.execute(INSERT);
+     assertTrue(insertRet.getSecond().getSecond().get(0).getStatus().getOperationStatusCode() == OperationStatusCode.SUCCESS);
+     INSERT = "Insert into " + TABLE_NAME + "(column1,column2,column3) values (21,2,'binlijin');";
+     insertRet = client.execute(INSERT);
+     assertTrue(insertRet.getSecond().getSecond().get(0).getStatus().getOperationStatusCode() == OperationStatusCode.SUCCESS);
+     String selectForInsert = "select column1,column2,column3 from " + TABLE_NAME + " where column1=21 and column3='binlijin'";
+     LOG.debug("************ first begin");
+     Pair<String, Pair<Boolean, List<ExecuteResult>>> r1 = client.execute(selectForInsert, ReadModel.CURRENT, 1);
+     assertTrue(r1.getSecond().getSecond().size() > 0);
+     String sessionId = r1.getFirst();
+     LOG.debug("************ second begin");
+     Pair<String, Pair<Boolean, List<ExecuteResult>>> r2 = client.next(sessionId);
+     assertTrue(r2.getSecond().getSecond().size() > 0);
+     {
+         try {
+         } catch (Throwable ex) {
+         } finally {
+         }
+     }
+     {
+         try {
+             TEST_UTIL.shutdownMiniCluster();
+         } catch (Throwable ex) {
+         } finally {
+         }
+     }
+ }
