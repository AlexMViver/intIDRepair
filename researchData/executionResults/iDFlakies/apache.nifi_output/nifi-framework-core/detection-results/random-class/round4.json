{"testRunIds":["1713636532255-26fa913e-0208-409a-88cf-56d4626d3fbc"],"unfilteredTests":{"dts":[{"name":"org.apache.nifi.wali.EncryptedSequentialAccessWriteAheadLogTest.testShouldUpdateWithExternalFile","intended":{"order":["org.apache.nifi.events.TestNodeBulletinProcessingStrategy.testUpdate","org.apache.nifi.controller.leader.election.TestCuratorACLProviderFactory.testSaslAuthSchemeNoHostNoRealm","org.apache.nifi.controller.leader.election.TestCuratorACLProviderFactory.testSaslAuthSchemeNoHostWithRealm","org.apache.nifi.controller.leader.election.TestCuratorACLProviderFactory.testSaslAuthSchemeHeadless","org.apache.nifi.controller.leader.election.TestCuratorACLProviderFactory.testSaslAuthSchemeWithHostNoRealm","org.apache.nifi.controller.reporting.TestStandardReportingContext.testGetPropertyReportingTask","org.apache.nifi.controller.repository.claim.TestContentClaimWriteCache.testFlushWriteCorrectData","org.apache.nifi.controller.repository.TestFileSystemRepository.testReadClaimThenWriteThenReadMore","org.apache.nifi.controller.repository.TestFileSystemRepository.testImportFromFile","org.apache.nifi.controller.repository.TestFileSystemRepository.testMarkDestructableDoesNotArchiveIfStreamOpenAndWrittenTo","org.apache.nifi.controller.repository.TestFileSystemRepository.testRemoveDeletesFileIfNoClaimants","org.apache.nifi.controller.repository.TestFileSystemRepository.testResourceClaimReused","org.apache.nifi.controller.repository.TestFileSystemRepository.testImportFromStream","org.apache.nifi.controller.repository.TestFileSystemRepository.testContentNotFoundExceptionThrownIfResourceClaimTooShort","org.apache.nifi.controller.repository.TestFileSystemRepository.testWrite","org.apache.nifi.controller.repository.TestFileSystemRepository.testSize","org.apache.nifi.controller.repository.TestFileSystemRepository.testMergeWithDemarcator","org.apache.nifi.controller.repository.TestFileSystemRepository.testSizeWithNoContent","org.apache.nifi.controller.repository.TestFileSystemRepository.testClaimantCounts","org.apache.nifi.controller.repository.TestFileSystemRepository.testWithHeaderDemarcator","org.apache.nifi.controller.repository.TestFileSystemRepository.testMergeWithFooterDemarcator","org.apache.nifi.controller.repository.TestFileSystemRepository.testWriteWithNoContent","org.apache.nifi.controller.repository.TestFileSystemRepository.testReadWithContentArchived","org.apache.nifi.controller.repository.TestFileSystemRepository.testBogusFile","org.apache.nifi.controller.repository.TestFileSystemRepository.testExportToFile","org.apache.nifi.controller.repository.TestFileSystemRepository.testRemoveWhileWritingToClaim","org.apache.nifi.controller.repository.TestFileSystemRepository.testMarkDestructableDoesNotArchiveIfStreamOpenAndNotWrittenTo","org.apache.nifi.controller.repository.TestFileSystemRepository.testExportToOutputStream","org.apache.nifi.controller.repository.TestFileSystemRepository.testWriteCannotProvideNullOutput","org.apache.nifi.controller.repository.TestFileSystemRepository.testMergeWithFooterOnly","org.apache.nifi.controller.repository.TestFileSystemRepository.testCreateContentClaim","org.apache.nifi.controller.repository.TestFileSystemRepository.testReadWithContent","org.apache.nifi.controller.repository.TestFileSystemRepository.testMergeWithHeaderOnly","org.apache.nifi.controller.repository.TestFileSystemRepository.testReadWithNoContentArchived","org.apache.nifi.controller.repository.TestFileSystemRepository.testResourceClaimNotReusedAfterRestart","org.apache.nifi.controller.repository.TestFileSystemRepository.testMergeWithHeaderFooterDemarcator","org.apache.nifi.controller.repository.TestFileSystemRepository.testReadWithNoContent","org.apache.nifi.controller.repository.TestFileSystemRepository.testMergeWithHeaderFooter","org.apache.nifi.controller.repository.TestFileSystemRepository.testMergeWithoutHeaderFooterDemarcator","org.apache.nifi.controller.repository.TestVolatileContentRepository.testRedirects","org.apache.nifi.controller.repository.TestVolatileContentRepository.testSimpleReadWrite","org.apache.nifi.controller.repository.TestVolatileContentRepository.testMemoryIsFreed","org.apache.nifi.controller.repository.io.TestFlowFileAccessInputStream.testThrowExceptionWhenLessContentReadFromFlowFile","org.apache.nifi.controller.repository.SchemaRepositoryRecordSerdeTest.testV1SwapInCantHandleLongAttributeName","org.apache.nifi.controller.repository.SchemaRepositoryRecordSerdeTest.testV2SwapInCanHandleLongAttributeValue","org.apache.nifi.controller.repository.SchemaRepositoryRecordSerdeTest.testV1CreateCantHandleLongAttributeName","org.apache.nifi.controller.repository.SchemaRepositoryRecordSerdeTest.testV1SwapInCantHandleLongAttributeValue","org.apache.nifi.controller.repository.SchemaRepositoryRecordSerdeTest.testV2CreateCanHandleLongAttributeValue","org.apache.nifi.controller.repository.SchemaRepositoryRecordSerdeTest.testRoundTripSwapInV1ToV2","org.apache.nifi.controller.repository.SchemaRepositoryRecordSerdeTest.testV1CreateCantHandleLongAttributeValue","org.apache.nifi.controller.repository.SchemaRepositoryRecordSerdeTest.testV2SwapInCanHandleLongAttributeName","org.apache.nifi.controller.repository.SchemaRepositoryRecordSerdeTest.testV2CreateCanHandleLongAttributeName","org.apache.nifi.controller.repository.SchemaRepositoryRecordSerdeTest.testRoundTripCreateV1ToV2","org.apache.nifi.controller.repository.TestRocksDBFlowFileRepository.testRecoveryModeWithContinuedLoading","org.apache.nifi.controller.repository.TestRocksDBFlowFileRepository.testUnknownVersion","org.apache.nifi.controller.repository.TestRocksDBFlowFileRepository.testDoNotRemoveOrphans","org.apache.nifi.controller.repository.TestRocksDBFlowFileRepository.testStallStop","org.apache.nifi.controller.repository.TestRocksDBFlowFileRepository.testSwapLocationsRestored","org.apache.nifi.controller.repository.TestRocksDBFlowFileRepository.testRecoveryMode","org.apache.nifi.controller.repository.TestRocksDBFlowFileRepository.testSwapLocationsUpdatedOnRepoUpdate","org.apache.nifi.controller.repository.TestRocksDBFlowFileRepository.testNormalizeSwapLocation","org.apache.nifi.controller.repository.TestRocksDBFlowFileRepository.testResourceClaimsIncremented","org.apache.nifi.controller.repository.TestRocksDBFlowFileRepository.testRestartWithOneRecord","org.apache.nifi.controller.repository.TestRocksDBFlowFileRepository.testKnownVersion","org.apache.nifi.controller.repository.TestRocksDBFlowFileRepository.testRemoveOrphans","org.apache.nifi.controller.repository.io.TestLimitedInputStream.testByteArrayReadWithRange","org.apache.nifi.controller.repository.io.TestLimitedInputStream.testClose","org.apache.nifi.controller.repository.io.TestLimitedInputStream.testMark","org.apache.nifi.controller.repository.io.TestLimitedInputStream.testSkip","org.apache.nifi.controller.repository.io.TestLimitedInputStream.testMarkSupported","org.apache.nifi.controller.repository.io.TestLimitedInputStream.testAvailable","org.apache.nifi.controller.repository.io.TestLimitedInputStream.testSingleByteRead","org.apache.nifi.controller.repository.io.TestLimitedInputStream.testByteArrayRead","org.apache.nifi.controller.repository.TestWriteAheadFlowFileRepository.testSwapLocationsRestored","org.apache.nifi.controller.repository.TestWriteAheadFlowFileRepository.testSwapLocationsUpdatedOnRepoUpdate","org.apache.nifi.controller.repository.TestWriteAheadFlowFileRepository.testNormalizeSwapLocation","org.apache.nifi.controller.repository.TestWriteAheadFlowFileRepository.testResourceClaimsIncremented","org.apache.nifi.controller.repository.TestWriteAheadFlowFileRepository.testRestartWithOneRecord","org.apache.nifi.controller.repository.io.TestContentClaimInputStream.testMultipleResetCallsAfterMark","org.apache.nifi.controller.repository.io.TestContentClaimInputStream.testThatContentIsSkipped","org.apache.nifi.controller.repository.io.TestContentClaimInputStream.testStreamCreatedFromRepository","org.apache.nifi.controller.repository.io.TestContentClaimInputStream.testRereadEntireClaim","org.apache.nifi.controller.repository.io.TestContentClaimInputStream.testRereadWithOffset","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testReadNullContentClaimShouldReturnEmptyInputStream","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testShouldEncryptAndDecryptMultipleRecords","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testExportSubsetToOutputStreamShouldDecryptContent","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testCloneShouldUpdateEncryptionMetadata","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testMergeShouldUpdateEncryptionMetadata","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testExportToPathShouldDecryptContent","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testConstructorShouldReadFromNiFiProperties","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testExportSubsetToPathShouldDecryptContent","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testMergeWithMarkersShouldUpdateEncryptionMetadata","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testReadShouldNotRequireActiveKeyId","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testImportFromInputStreamShouldEncryptContent","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testExportToOutputStreamShouldDecryptContent","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testImportFromPathShouldEncryptContent","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testShouldEncryptAndDecryptImage","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testShouldEncryptAndDecrypt","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testRecoverSwapFiles","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testGetFlowFile","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testPrioritiesWhenSetBeforeLocalNodeIdDetermined","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testIsEmptyWhenFlowFileInRemotePartition","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testChangeInClusterTopologyTriggersRebalanceOnlyOnRemovedNodeIfNecessary","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testIsEmptyWhenFlowFileInLocalPartition","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testPriorities","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testBinsAccordingToPartitioner","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testDataInRemotePartitionForLocalIdIsMovedToLocalPartition","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testChangeInClusterTopologyTriggersRebalance","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testOffloadAndReconnectKeepsQueueInCorrectOrder","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testChangeInPartitionerTriggersRebalance","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testPutAllBinsFlowFilesSeparately","org.apache.nifi.controller.queue.clustered.server.ConnectionLoadBalanceServerTest.testRequestPeerListShouldUseTLS","org.apache.nifi.controller.queue.clustered.server.ConnectionLoadBalanceServerTest.testShouldHandleSSLPeerUnverifiedException","org.apache.nifi.controller.queue.clustered.TestContentRepositoryFlowFileAccess.testEOFExceptionIfNotEnoughData","org.apache.nifi.controller.queue.clustered.TestContentRepositoryFlowFileAccess.testContentNotFoundPropagated","org.apache.nifi.controller.queue.clustered.TestContentRepositoryFlowFileAccess.testInputStreamFromContentRepo","org.apache.nifi.controller.queue.clustered.TestNaiveLimitThreshold.testCount","org.apache.nifi.controller.queue.clustered.TestNaiveLimitThreshold.testSize","org.apache.nifi.controller.queue.clustered.server.TestStandardLoadBalanceProtocol.testMultipleFlowFiles","org.apache.nifi.controller.queue.clustered.server.TestStandardLoadBalanceProtocol.testBadChecksum","org.apache.nifi.controller.queue.clustered.server.TestStandardLoadBalanceProtocol.testEofWritingContent","org.apache.nifi.controller.queue.clustered.server.TestStandardLoadBalanceProtocol.testAbortAfterChecksumConfirmation","org.apache.nifi.controller.queue.clustered.server.TestStandardLoadBalanceProtocol.testMultipleFlowFilesWithoutCheckingSpace","org.apache.nifi.controller.queue.clustered.server.TestStandardLoadBalanceProtocol.testFlowFileNoContent","org.apache.nifi.controller.queue.clustered.server.TestStandardLoadBalanceProtocol.testEofExceptionMultipleFlowFiles","org.apache.nifi.controller.queue.clustered.server.TestStandardLoadBalanceProtocol.testSimpleFlowFileTransaction","org.apache.nifi.controller.queue.clustered.client.async.nio.TestLoadBalanceSession.testSunnyCase","org.apache.nifi.controller.queue.clustered.client.async.nio.TestLoadBalanceSession.testLargeContent","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testOrderingWithCornerCases","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testPrioritizersBigQueue","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testLastQueueDateMetrics","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testPollWithOnlyExpiredFlowFile","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testDropSwappedFlowFiles","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testEmpty","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testPrioritiesKeptIntactBeforeSwap","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testOOMEFollowedBySuccessfulSwapIn","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testPrioritizer","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testPollWithExpiredAndUnexpired","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testSwapInWhenThresholdIsLessThanSwapSize","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testSwapOutFailureLeavesCorrectQueueSize","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testPollWithPenalizedFlowFile","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testSwapOutOccurs","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testPrioritizersDataAddedAfterSwapOccurs","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testQueueCountsUpdatedWhenIncompleteSwapFile","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testGetActiveFlowFilesReturnsAllActiveFlowFiles","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testPrioritizerWhenOutOfOrderDataEntersSwapQueue","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testSwapIn","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testLowestPrioritySwappedOutFirst","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testListFlowFilesResultsLimited","org.apache.nifi.controller.state.server.TestZooKeeperStateServer.testServerCreated","org.apache.nifi.controller.state.server.TestZooKeeperStateServer.testServerCreatePath","org.apache.nifi.controller.state.server.TestZooKeeperStateServer.testServerOk","org.apache.nifi.controller.state.server.TestZooKeeperStateServerConfigurations.","org.apache.nifi.controller.state.server.TestZooKeeperStateServerConfigurations.","org.apache.nifi.controller.state.server.TestZooKeeperStateServerConfigurations.","org.apache.nifi.controller.state.server.TestZooKeeperStateServerConfigurations.testCreateFromEmptyNiFiProperties","org.apache.nifi.controller.state.server.TestZooKeeperStateServerConfigurations.testCreateWithSpecifiedSecureClientPort","org.apache.nifi.controller.state.server.TestZooKeeperStateServerConfigurations.testCreateRemovesInsecureClientPort","org.apache.nifi.controller.state.server.TestZooKeeperStateServerConfigurations.testCreateFromValidInsecureNiFiProperties","org.apache.nifi.controller.state.server.TestZooKeeperStateServerConfigurations.testCreateWithSpecifiedConnectionClass","org.apache.nifi.controller.state.server.TestZooKeeperStateServerConfigurations.testCreateWithUnspecifiedConnectionClass","org.apache.nifi.controller.state.TestStateMapSerDe.testCreateRoundTrip","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testReplaceWithWrongVersion","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testClear","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testToMap","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testReplaceWithNonExistingValueAndVersionGreaterThanNegativeOne","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testOnComponentRemoved","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testSetAndGet","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testReplaceWithNonExistingValue","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testReplaceSuccessful","org.apache.nifi.controller.status.analytics.models.TestSimpleRegression.testConstantPrediction","org.apache.nifi.controller.status.analytics.models.TestSimpleRegression.testVaryingPredictX","org.apache.nifi.controller.status.analytics.models.TestSimpleRegression.testVaryingPredictY","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testCombinePropertiesOverridesWithAdditionalProperties","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testStateTooLargeExceptionThrownOnReplace","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testStateTooLargeExceptionThrownOnReplaceSmallJuteMaxbuffer","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testStateTooLargeExceptionThrownOnSetState","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testCombineProperties","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testCombineNullNiFiPropsWithPropertiesOverrides","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testReplaceWithWrongVersion","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testClear","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testToMap","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testReplaceWithNonExistingValueAndVersionGreaterThanNegativeOne","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testOnComponentRemoved","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testSetAndGet","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testReplaceWithNonExistingValue","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testReplaceSuccessful","org.apache.nifi.controller.status.analytics.TestCachingConnectionStatusAnalyticsEngine.testCachedStatusAnalytics","org.apache.nifi.controller.status.analytics.TestCachingConnectionStatusAnalyticsEngine.testGetStatusAnalytics","org.apache.nifi.controller.status.analytics.models.TestOrdinaryLeastSquares.testVaryingPredictionOfVariable","org.apache.nifi.controller.status.analytics.models.TestOrdinaryLeastSquares.testVaryingPrediction","org.apache.nifi.controller.status.analytics.models.TestOrdinaryLeastSquares.comparePredictions","org.apache.nifi.controller.status.analytics.models.TestOrdinaryLeastSquares.testConstantPrediction","org.apache.nifi.controller.status.analytics.TestStatusAnalyticsModelMapFactory.getConnectionStatusModelMap","org.apache.nifi.controller.status.history.JsonNodeStatusHistoryDumpFactoryTest.testJsonNodeStatusDumpFactory","org.apache.nifi.controller.status.history.JsonNodeStatusHistoryDumpFactoryTest.testJsonNodeStatusDumpFactoryWithLessThanOneDayThrowsException","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testGetTimeToBytesBackpressureMillis","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testGetTimeToCountBackpressureMillis","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testCannotPredictNextIntervalBytesNaN","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testCannotPredictTimeToCountNegative","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testCannotPredictTimeToCountNaN","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testGetScoresWithBadModel","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testInvalidModelNaNScore","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testGetNextIntervalPercentageUseBytes","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testGetNextIntervalPercentageUseCount","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testCannotPredictNextIntervalBytesInfinity","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testMissingModelGetTimeToBytes","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testMissingModelGetTimeToCount","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testCannotPredictNextIntervalCountNaN","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testInvalidModelInfiniteScore","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testGetIntervalTimeMillis","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testGetNextIntervalBytes","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testGetNextIntervalCount","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testMissingModelNextIntervalBytes","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testMissingModelGetNextIntervalCount","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testGetNextIntervalCountZero","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testCannotPredictTimeToBytesInfinite","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testInvalidModelLowScore","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testCannotPredictNextIntervalCountInfinity","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testCannotPredictTimeToBytesNegative","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testNextIntervalBytesZero","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testGetScores","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testCannotPredictTimeToBytesNaN","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testCannotPredictTimeToCountInfinite","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalyticsEngine.testGetStatusAnalytics","org.apache.nifi.controller.status.history.VolatileComponentStatusRepositoryForComponentsTest.testFilterDatesUsingEndFilter","org.apache.nifi.controller.status.history.VolatileComponentStatusRepositoryForComponentsTest.testFilterDatesUsingStartEndAndPreferredFilter","org.apache.nifi.controller.status.history.VolatileComponentStatusRepositoryForComponentsTest.testFilterDatesUsingStartAndEndFilter","org.apache.nifi.controller.status.history.VolatileComponentStatusRepositoryForComponentsTest.testFilterDatesUsingPreferredDataPoints","org.apache.nifi.controller.status.history.VolatileComponentStatusRepositoryForComponentsTest.testFilterDatesReturnAll","org.apache.nifi.controller.status.history.VolatileComponentStatusRepositoryForComponentsTest.testFilterWorksWithCircularBuffer","org.apache.nifi.controller.status.history.VolatileComponentStatusRepositoryForComponentsTest.testFilterDatesUsingStartFilter","org.apache.nifi.controller.status.history.TestMetricRollingBuffer.testBufferShrinks","org.apache.nifi.controller.status.history.TestMetricRollingBuffer.testBufferGrows","org.apache.nifi.controller.status.history.storage.BufferedWriterForStatusStorageTest.testStoringOnlyWhenPersist","org.apache.nifi.controller.status.history.EmbeddedQuestDbStatusHistoryRepositoryForComponentsTest.testReadingEmptyRepository","org.apache.nifi.controller.status.history.EmbeddedQuestDbStatusHistoryRepositoryForComponentsTest.testWritingThenReadingComponents","org.apache.nifi.controller.status.history.EmbeddedQuestDbStatusHistoryRepositoryForComponentsTest.testReadingLimitedByPreferredDataPoints","org.apache.nifi.controller.status.history.StatusHistoryUtilTest.testCreateFieldDescriptorDtosWhenCounterTypeAppears","org.apache.nifi.controller.status.history.StatusHistoryUtilTest.testCreateFieldDescriptorDtosWhenEmpty","org.apache.nifi.controller.status.history.StatusHistoryUtilTest.testCreateFieldDescriptorDtos","org.apache.nifi.controller.status.history.StatusHistoryUtilTest.testCreateFieldDescriptorDtosWhenNotConsecutive","org.apache.nifi.controller.status.history.EmbeddedQuestDbStatusHistoryRepositoryForNodeTest.testReadingEmptyRepository","org.apache.nifi.controller.status.history.EmbeddedQuestDbStatusHistoryRepositoryForNodeTest.testWritingThenReadingComponents","org.apache.nifi.controller.status.history.VolatileComponentStatusRepositoryForNodeTest.testNodeStatusHistory","org.apache.nifi.controller.TestFileSystemSwapManager.testFailureOnRepoSwapOut","org.apache.nifi.controller.TestFileSystemSwapManager.testSwapFileUnknownToRepoNotSwappedIn","org.apache.nifi.controller.TestFileSystemSwapManager.testBackwardCompatible","org.apache.nifi.controller.TestEncryptedFileSystemSwapManager.testSwapOutSwapIn","org.apache.nifi.controller.TestStandardFlowFileQueue.testGetMinLastQueueDate","org.apache.nifi.controller.TestStandardFlowFileQueue.testListFlowFilesResultsLimitedCollection","org.apache.nifi.controller.TestStandardFlowFileQueue.testDropSwappedFlowFiles","org.apache.nifi.controller.TestStandardFlowFileQueue.testBackPressure","org.apache.nifi.controller.TestStandardFlowFileQueue.testOOMEFollowedBySuccessfulSwapIn","org.apache.nifi.controller.TestStandardFlowFileQueue.testBackPressureAfterDrop","org.apache.nifi.controller.TestStandardFlowFileQueue.testSwapInWhenThresholdIsLessThanSwapSize","org.apache.nifi.controller.TestStandardFlowFileQueue.testListFlowFilesOnlyActiveQueue","org.apache.nifi.controller.TestStandardFlowFileQueue.testBackPressureAfterPollFilter","org.apache.nifi.controller.TestStandardFlowFileQueue.testGetTotalActiveQueuedDuration","org.apache.nifi.controller.TestStandardFlowFileQueue.testBackPressureAfterPollSingle","org.apache.nifi.controller.TestStandardFlowFileQueue.testSwapOutOccurs","org.apache.nifi.controller.TestStandardFlowFileQueue.testExpire","org.apache.nifi.controller.TestStandardFlowFileQueue.testBackPressureAfterPollMultiple","org.apache.nifi.controller.TestStandardFlowFileQueue.testQueueCountsUpdatedWhenIncompleteSwapFile","org.apache.nifi.controller.TestStandardFlowFileQueue.testSwapIn","org.apache.nifi.controller.TestStandardFlowFileQueue.testListFlowFilesResultsLimited","org.apache.nifi.controller.serialization.FlowFromDOMFactoryTest.testShouldProvideBetterErrorMessageOnDecryptionFailure","org.apache.nifi.controller.serialization.FlowFromDOMFactoryTest.testShouldDecryptSensitiveFlowValue","org.apache.nifi.controller.serialization.StandardFlowSerializerTest.testSerializationEmoji","org.apache.nifi.controller.serialization.StandardFlowSerializerTest.testSerializationEscapingAndFiltering","org.apache.nifi.controller.tasks.TestConnectableTask.testIsWorkToDo","org.apache.nifi.controller.tasks.TestConnectableTask.testIsWorkToDoFunnels","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWhenProposedMissingComponentsAreDifferent","org.apache.nifi.controller.TestFlowController.testReloadControllerServiceWithAdditionalResources","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWhenExistingMissingComponentsAreDifferent","org.apache.nifi.controller.TestFlowController.testInstantiateSnippetWithDisabledProcessor","org.apache.nifi.controller.TestFlowController.testInstantiateSnippetWithProcessor","org.apache.nifi.controller.TestFlowController.testProcessSchedulerHasAccessToControllerServiceProvider","org.apache.nifi.controller.TestFlowController.testProcessorDefaultScheduleAnnotation","org.apache.nifi.controller.TestFlowController.testInstantiateSnippetWithControllerService","org.apache.nifi.controller.TestFlowController.testDeleteProcessGroup","org.apache.nifi.controller.TestFlowController.testCreateMissingProcessor","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWhenBundlesAreSame","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWhenProposedAuthorizationsAreNullAndEmptyFlow","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWithInvalidParameterContextReference","org.apache.nifi.controller.TestFlowController.testReloadReportingTask","org.apache.nifi.controller.TestFlowController.testReloadReportingTaskWithAdditionalResources","org.apache.nifi.controller.TestFlowController.testCreateMissingControllerService","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWhenBundlesAreDifferent","org.apache.nifi.controller.TestFlowController.testReloadProcessorWithAdditionalResources","org.apache.nifi.controller.TestFlowController.testPrimaryNodeOnlyAnnotation","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWhenProposedAuthorizationsAreNull","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWhenCurrentAuthorizationsAreEmptyAndProposedAreNot","org.apache.nifi.controller.TestFlowController.testProcessorDefaultSettingsAnnotation","org.apache.nifi.controller.TestFlowController.testReloadProcessor","org.apache.nifi.controller.TestFlowController.testCreateParameterContextWithAndWithoutValidation","org.apache.nifi.controller.TestFlowController.testCreateMissingReportingTask","org.apache.nifi.controller.TestFlowController.testReportingTaskDefaultScheduleAnnotation","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWhenAuthorizationsAreDifferentAndFlowEmpty","org.apache.nifi.controller.TestFlowController.testInstantiateSnippetWhenProcessorMissingBundle","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWhenAuthorizationsAreEqual","org.apache.nifi.controller.TestFlowController.testInstantiateSnippetWhenControllerServiceMissingBundle","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWithProcessorReferencingControllerService","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWithReportingTaskAndProcessorReferencingControllerService","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWithNestedParameterContexts","org.apache.nifi.controller.TestFlowController.testReloadControllerService","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWhenAuthorizationsAreDifferent","org.apache.nifi.controller.service.StandardControllerServiceProviderTest.testCallImplementationInitialized","org.apache.nifi.controller.service.StandardControllerServiceProviderTest.testCallProxiedInitialized","org.apache.nifi.controller.service.StandardControllerServiceProviderTest.testCallProxiedOnPropertyModified","org.apache.nifi.controller.service.StandardControllerServiceProviderTest.testCallImplementationOnPropertyModified","org.apache.nifi.controller.service.TestStandardControllerServiceProvider.testOrderingOfServices","org.apache.nifi.controller.service.TestStandardControllerServiceProvider.testEnableReferencingComponents","org.apache.nifi.controller.service.TestStandardControllerServiceProvider.testDisableControllerService","org.apache.nifi.controller.service.TestStandardControllerServiceProvider.testEnableDisableWithReference","org.apache.nifi.controller.service.TestStandardControllerServiceProvider.validateEnableServices","org.apache.nifi.controller.service.TestStandardControllerServiceProvider.validateEnableServices2","org.apache.nifi.controller.service.TestStandardControllerServiceProvider.validateEnableServicesWithDisabledMissingService","org.apache.nifi.controller.scheduling.TestStandardProcessScheduler.testProcessorTimeOutRespondsToInterrupt","org.apache.nifi.controller.scheduling.TestStandardProcessScheduler.validateDisablingOfTheFailedService","org.apache.nifi.controller.scheduling.TestStandardProcessScheduler.testProcessorTimeOutNoResponseToInterrupt","org.apache.nifi.controller.scheduling.TestStandardProcessScheduler.validateEnabledServiceCanOnlyBeDisabledOnce","org.apache.nifi.controller.scheduling.TestStandardProcessScheduler.testDisableControllerServiceWithProcessorTryingToStartUsingIt","org.apache.nifi.controller.scheduling.TestStandardProcessScheduler.testProcessorThrowsExceptionOnScheduledRetry","org.apache.nifi.controller.scheduling.TestStandardProcessScheduler.validateServiceEnablementLogicHappensOnlyOnce","org.apache.nifi.controller.scheduling.TestStandardProcessScheduler.testReportingTaskDoesntKeepRunningAfterStop","org.apache.nifi.controller.scheduling.TestStandardProcessScheduler.validateDisabledServiceCantBeDisabled","org.apache.nifi.controller.scheduling.TestStandardProcessScheduler.validateNeverEnablingServiceCanStillBeDisabled","org.apache.nifi.controller.swap.TestSimpleSwapSerializerDeserializer.testRoundTripSerializeDeserialize","org.apache.nifi.controller.swap.TestSchemaSwapSerializerDeserializer.testRoundTripSerializeDeserializeSummary","org.apache.nifi.controller.swap.TestSchemaSwapSerializerDeserializer.testRoundTripSerializeDeserializeFullSwapFile","org.apache.nifi.components.LongRunningTaskMonitorTest.test","org.apache.nifi.persistence.TemplateDeserializerTest.testShouldHandleXXEInTemplateLoad","org.apache.nifi.fingerprint.FingerprintFactoryTest.testSameFingerprint","org.apache.nifi.fingerprint.FingerprintFactoryTest.testRemoteProcessGroupFingerprintRaw","org.apache.nifi.fingerprint.FingerprintFactoryTest.testInheritedParameterContextsInFingerprint","org.apache.nifi.fingerprint.FingerprintFactoryTest.testSameFlowAndOneHasMissingBundleShouldHaveDifferentFingerprints","org.apache.nifi.fingerprint.FingerprintFactoryTest.testControllerServicesIncludedInGroupFingerprint","org.apache.nifi.fingerprint.FingerprintFactoryTest.testSchemaValidation","org.apache.nifi.fingerprint.FingerprintFactoryTest.testResourceValueInFingerprint","org.apache.nifi.fingerprint.FingerprintFactoryTest.testDifferentFingerprint","org.apache.nifi.fingerprint.FingerprintFactoryTest.testSameFlowAndOneHasNoBundleShouldHaveDifferentFingerprints","org.apache.nifi.fingerprint.FingerprintFactoryTest.testRemotePortFingerprint","org.apache.nifi.fingerprint.FingerprintFactoryTest.testSameFlowWithDifferentBundleShouldHaveDifferentFingerprints","org.apache.nifi.fingerprint.FingerprintFactoryTest.testPublicPortWithAccessPoliciesFingerprint","org.apache.nifi.fingerprint.FingerprintFactoryTest.testPublicPortWithNoAccessPoliciesFingerprint","org.apache.nifi.fingerprint.FingerprintFactoryTest.testConnectionWithMultipleRelationshipsSortedInFingerprint","org.apache.nifi.fingerprint.FingerprintFactoryTest.testRemoteProcessGroupFingerprintWithProxy","org.apache.nifi.fingerprint.FingerprintFactoryTest.testPublicPortWithDifferentFingerprintInAccessPolicies","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testPreferredDefaultTlsPropertyOnly","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testValidClientSecureEmpty","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testValidClientSecureFalse","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testValidClientSecureSpaces","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testGetPreferredZookeeperTlsProperty","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testMultiValidEntrySkipOne","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testEmptyKeyStoreTypes","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testValidClientSecureUpperCase","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testValidCnxnSocketNames","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testKeyStoreTypesSpaces","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testValidClientSecureTrue","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testMultiValidEntrySpacesForDays","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testIfGetPreferredPropertyIsBlankChoosesDefault","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testMultiValidOneNonsense","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testEasyCase","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testInvalidSingleEntry","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testValidFunkyInput","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testMultiValidEntry","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testGetPreferredPropertyCombinationChoosesZookeeper","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testKeyStoreTypes","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testBlankKeyStoreTypes","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testSingleEntryNoPort","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testInvalidClientSecure","org.apache.nifi.persistence.TestFlowConfigurationArchiveManager.testNiFiPropertiesMaxStorage","org.apache.nifi.persistence.TestFlowConfigurationArchiveManager.testArchiveStorageSizeLimit","org.apache.nifi.persistence.TestFlowConfigurationArchiveManager.testArchiveWithoutOriginalFile","org.apache.nifi.persistence.TestFlowConfigurationArchiveManager.testNiFiPropertiesCount","org.apache.nifi.persistence.TestFlowConfigurationArchiveManager.testNiFiPropertiesMaxTime","org.apache.nifi.persistence.TestFlowConfigurationArchiveManager.testNiFiPropertiesDefault","org.apache.nifi.persistence.TestFlowConfigurationArchiveManager.testLargeConfigFile","org.apache.nifi.persistence.TestFlowConfigurationArchiveManager.testArchiveStorageCountLimit","org.apache.nifi.persistence.TestFlowConfigurationArchiveManager.testArchiveExpiration","org.apache.nifi.util.TestFileBasedVariableRegistry.testCreateCustomVariableRegistry","org.apache.nifi.cluster.HeartbeatPayloadTest.testMarshalling","org.apache.nifi.cluster.HeartbeatPayloadTest.testMarshallingWithNoInfo","org.apache.nifi.fingerprint.FingerprintFactoryGroovyTest.testCreateFingerprintShouldNotDiscloseSensitivePropertyValues","org.apache.nifi.registry.flow.mapping.NiFiRegistryFlowMapperTest.testMapParameterContextsExcludingVersionedDescendants","org.apache.nifi.registry.flow.mapping.NiFiRegistryFlowMapperTest.testMapNonVersionedProcessGroups","org.apache.nifi.registry.flow.mapping.NiFiRegistryFlowMapperTest.testMapVersionedProcessGroupsExcludingVersionedDescendants","org.apache.nifi.registry.flow.mapping.NiFiRegistryFlowMapperTest.testMapNestedParameterContexts","org.apache.nifi.persistence.TemplateSerializerTest.validateDiffWithChangingComponentIdAndAdditionalElements"],"result":"ERROR","testRunId":"1713634536167-cc6a4bc3-1816-4ef6-94cc-904d6b08b95b"},"revealed":{"order":["org.apache.nifi.controller.repository.TestWriteAheadFlowFileRepository.testRestartWithOneRecord","org.apache.nifi.controller.repository.TestWriteAheadFlowFileRepository.testResourceClaimsIncremented","org.apache.nifi.controller.repository.TestWriteAheadFlowFileRepository.testNormalizeSwapLocation","org.apache.nifi.controller.repository.TestWriteAheadFlowFileRepository.testSwapLocationsUpdatedOnRepoUpdate","org.apache.nifi.controller.repository.TestWriteAheadFlowFileRepository.testSwapLocationsRestored","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testReplaceSuccessful","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testReplaceWithNonExistingValue","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testSetAndGet","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testOnComponentRemoved","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testReplaceWithNonExistingValueAndVersionGreaterThanNegativeOne","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testToMap","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testClear","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testReplaceWithWrongVersion","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.status.history.StatusHistoryUtilTest.testCreateFieldDescriptorDtosWhenNotConsecutive","org.apache.nifi.controller.status.history.StatusHistoryUtilTest.testCreateFieldDescriptorDtos","org.apache.nifi.controller.status.history.StatusHistoryUtilTest.testCreateFieldDescriptorDtosWhenEmpty","org.apache.nifi.controller.status.history.StatusHistoryUtilTest.testCreateFieldDescriptorDtosWhenCounterTypeAppears","org.apache.nifi.wali.EncryptedSequentialAccessWriteAheadLogTest.testShouldUpdateWithExternalFileAfterCheckpoint"],"result":"PASS","testRunId":"1713636532255-26fa913e-0208-409a-88cf-56d4626d3fbc"},"type":"OD"},{"name":"org.apache.nifi.wali.EncryptedSequentialAccessWriteAheadLogTest.testShouldUpdateWithExternalFileAfterCheckpoint","intended":{"order":["org.apache.nifi.events.TestNodeBulletinProcessingStrategy.testUpdate","org.apache.nifi.controller.leader.election.TestCuratorACLProviderFactory.testSaslAuthSchemeNoHostNoRealm","org.apache.nifi.controller.leader.election.TestCuratorACLProviderFactory.testSaslAuthSchemeNoHostWithRealm","org.apache.nifi.controller.leader.election.TestCuratorACLProviderFactory.testSaslAuthSchemeHeadless","org.apache.nifi.controller.leader.election.TestCuratorACLProviderFactory.testSaslAuthSchemeWithHostNoRealm","org.apache.nifi.controller.reporting.TestStandardReportingContext.testGetPropertyReportingTask","org.apache.nifi.controller.repository.claim.TestContentClaimWriteCache.testFlushWriteCorrectData","org.apache.nifi.controller.repository.TestFileSystemRepository.testReadClaimThenWriteThenReadMore","org.apache.nifi.controller.repository.TestFileSystemRepository.testImportFromFile","org.apache.nifi.controller.repository.TestFileSystemRepository.testMarkDestructableDoesNotArchiveIfStreamOpenAndWrittenTo","org.apache.nifi.controller.repository.TestFileSystemRepository.testRemoveDeletesFileIfNoClaimants","org.apache.nifi.controller.repository.TestFileSystemRepository.testResourceClaimReused","org.apache.nifi.controller.repository.TestFileSystemRepository.testImportFromStream","org.apache.nifi.controller.repository.TestFileSystemRepository.testContentNotFoundExceptionThrownIfResourceClaimTooShort","org.apache.nifi.controller.repository.TestFileSystemRepository.testWrite","org.apache.nifi.controller.repository.TestFileSystemRepository.testSize","org.apache.nifi.controller.repository.TestFileSystemRepository.testMergeWithDemarcator","org.apache.nifi.controller.repository.TestFileSystemRepository.testSizeWithNoContent","org.apache.nifi.controller.repository.TestFileSystemRepository.testClaimantCounts","org.apache.nifi.controller.repository.TestFileSystemRepository.testWithHeaderDemarcator","org.apache.nifi.controller.repository.TestFileSystemRepository.testMergeWithFooterDemarcator","org.apache.nifi.controller.repository.TestFileSystemRepository.testWriteWithNoContent","org.apache.nifi.controller.repository.TestFileSystemRepository.testReadWithContentArchived","org.apache.nifi.controller.repository.TestFileSystemRepository.testBogusFile","org.apache.nifi.controller.repository.TestFileSystemRepository.testExportToFile","org.apache.nifi.controller.repository.TestFileSystemRepository.testRemoveWhileWritingToClaim","org.apache.nifi.controller.repository.TestFileSystemRepository.testMarkDestructableDoesNotArchiveIfStreamOpenAndNotWrittenTo","org.apache.nifi.controller.repository.TestFileSystemRepository.testExportToOutputStream","org.apache.nifi.controller.repository.TestFileSystemRepository.testWriteCannotProvideNullOutput","org.apache.nifi.controller.repository.TestFileSystemRepository.testMergeWithFooterOnly","org.apache.nifi.controller.repository.TestFileSystemRepository.testCreateContentClaim","org.apache.nifi.controller.repository.TestFileSystemRepository.testReadWithContent","org.apache.nifi.controller.repository.TestFileSystemRepository.testMergeWithHeaderOnly","org.apache.nifi.controller.repository.TestFileSystemRepository.testReadWithNoContentArchived","org.apache.nifi.controller.repository.TestFileSystemRepository.testResourceClaimNotReusedAfterRestart","org.apache.nifi.controller.repository.TestFileSystemRepository.testMergeWithHeaderFooterDemarcator","org.apache.nifi.controller.repository.TestFileSystemRepository.testReadWithNoContent","org.apache.nifi.controller.repository.TestFileSystemRepository.testMergeWithHeaderFooter","org.apache.nifi.controller.repository.TestFileSystemRepository.testMergeWithoutHeaderFooterDemarcator","org.apache.nifi.controller.repository.TestVolatileContentRepository.testRedirects","org.apache.nifi.controller.repository.TestVolatileContentRepository.testSimpleReadWrite","org.apache.nifi.controller.repository.TestVolatileContentRepository.testMemoryIsFreed","org.apache.nifi.controller.repository.io.TestFlowFileAccessInputStream.testThrowExceptionWhenLessContentReadFromFlowFile","org.apache.nifi.controller.repository.SchemaRepositoryRecordSerdeTest.testV1SwapInCantHandleLongAttributeName","org.apache.nifi.controller.repository.SchemaRepositoryRecordSerdeTest.testV2SwapInCanHandleLongAttributeValue","org.apache.nifi.controller.repository.SchemaRepositoryRecordSerdeTest.testV1CreateCantHandleLongAttributeName","org.apache.nifi.controller.repository.SchemaRepositoryRecordSerdeTest.testV1SwapInCantHandleLongAttributeValue","org.apache.nifi.controller.repository.SchemaRepositoryRecordSerdeTest.testV2CreateCanHandleLongAttributeValue","org.apache.nifi.controller.repository.SchemaRepositoryRecordSerdeTest.testRoundTripSwapInV1ToV2","org.apache.nifi.controller.repository.SchemaRepositoryRecordSerdeTest.testV1CreateCantHandleLongAttributeValue","org.apache.nifi.controller.repository.SchemaRepositoryRecordSerdeTest.testV2SwapInCanHandleLongAttributeName","org.apache.nifi.controller.repository.SchemaRepositoryRecordSerdeTest.testV2CreateCanHandleLongAttributeName","org.apache.nifi.controller.repository.SchemaRepositoryRecordSerdeTest.testRoundTripCreateV1ToV2","org.apache.nifi.controller.repository.TestRocksDBFlowFileRepository.testRecoveryModeWithContinuedLoading","org.apache.nifi.controller.repository.TestRocksDBFlowFileRepository.testUnknownVersion","org.apache.nifi.controller.repository.TestRocksDBFlowFileRepository.testDoNotRemoveOrphans","org.apache.nifi.controller.repository.TestRocksDBFlowFileRepository.testStallStop","org.apache.nifi.controller.repository.TestRocksDBFlowFileRepository.testSwapLocationsRestored","org.apache.nifi.controller.repository.TestRocksDBFlowFileRepository.testRecoveryMode","org.apache.nifi.controller.repository.TestRocksDBFlowFileRepository.testSwapLocationsUpdatedOnRepoUpdate","org.apache.nifi.controller.repository.TestRocksDBFlowFileRepository.testNormalizeSwapLocation","org.apache.nifi.controller.repository.TestRocksDBFlowFileRepository.testResourceClaimsIncremented","org.apache.nifi.controller.repository.TestRocksDBFlowFileRepository.testRestartWithOneRecord","org.apache.nifi.controller.repository.TestRocksDBFlowFileRepository.testKnownVersion","org.apache.nifi.controller.repository.TestRocksDBFlowFileRepository.testRemoveOrphans","org.apache.nifi.controller.repository.io.TestLimitedInputStream.testByteArrayReadWithRange","org.apache.nifi.controller.repository.io.TestLimitedInputStream.testClose","org.apache.nifi.controller.repository.io.TestLimitedInputStream.testMark","org.apache.nifi.controller.repository.io.TestLimitedInputStream.testSkip","org.apache.nifi.controller.repository.io.TestLimitedInputStream.testMarkSupported","org.apache.nifi.controller.repository.io.TestLimitedInputStream.testAvailable","org.apache.nifi.controller.repository.io.TestLimitedInputStream.testSingleByteRead","org.apache.nifi.controller.repository.io.TestLimitedInputStream.testByteArrayRead","org.apache.nifi.controller.repository.TestWriteAheadFlowFileRepository.testSwapLocationsRestored","org.apache.nifi.controller.repository.TestWriteAheadFlowFileRepository.testSwapLocationsUpdatedOnRepoUpdate","org.apache.nifi.controller.repository.TestWriteAheadFlowFileRepository.testNormalizeSwapLocation","org.apache.nifi.controller.repository.TestWriteAheadFlowFileRepository.testResourceClaimsIncremented","org.apache.nifi.controller.repository.TestWriteAheadFlowFileRepository.testRestartWithOneRecord","org.apache.nifi.controller.repository.io.TestContentClaimInputStream.testMultipleResetCallsAfterMark","org.apache.nifi.controller.repository.io.TestContentClaimInputStream.testThatContentIsSkipped","org.apache.nifi.controller.repository.io.TestContentClaimInputStream.testStreamCreatedFromRepository","org.apache.nifi.controller.repository.io.TestContentClaimInputStream.testRereadEntireClaim","org.apache.nifi.controller.repository.io.TestContentClaimInputStream.testRereadWithOffset","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testReadNullContentClaimShouldReturnEmptyInputStream","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testShouldEncryptAndDecryptMultipleRecords","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testExportSubsetToOutputStreamShouldDecryptContent","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testCloneShouldUpdateEncryptionMetadata","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testMergeShouldUpdateEncryptionMetadata","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testExportToPathShouldDecryptContent","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testConstructorShouldReadFromNiFiProperties","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testExportSubsetToPathShouldDecryptContent","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testMergeWithMarkersShouldUpdateEncryptionMetadata","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testReadShouldNotRequireActiveKeyId","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testImportFromInputStreamShouldEncryptContent","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testExportToOutputStreamShouldDecryptContent","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testImportFromPathShouldEncryptContent","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testShouldEncryptAndDecryptImage","org.apache.nifi.controller.repository.crypto.EncryptedFileSystemRepositoryTest.testShouldEncryptAndDecrypt","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testRecoverSwapFiles","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testGetFlowFile","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testPrioritiesWhenSetBeforeLocalNodeIdDetermined","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testIsEmptyWhenFlowFileInRemotePartition","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testChangeInClusterTopologyTriggersRebalanceOnlyOnRemovedNodeIfNecessary","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testIsEmptyWhenFlowFileInLocalPartition","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testPriorities","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testBinsAccordingToPartitioner","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testDataInRemotePartitionForLocalIdIsMovedToLocalPartition","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testChangeInClusterTopologyTriggersRebalance","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testOffloadAndReconnectKeepsQueueInCorrectOrder","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testChangeInPartitionerTriggersRebalance","org.apache.nifi.controller.queue.clustered.TestSocketLoadBalancedFlowFileQueue.testPutAllBinsFlowFilesSeparately","org.apache.nifi.controller.queue.clustered.server.ConnectionLoadBalanceServerTest.testRequestPeerListShouldUseTLS","org.apache.nifi.controller.queue.clustered.server.ConnectionLoadBalanceServerTest.testShouldHandleSSLPeerUnverifiedException","org.apache.nifi.controller.queue.clustered.TestContentRepositoryFlowFileAccess.testEOFExceptionIfNotEnoughData","org.apache.nifi.controller.queue.clustered.TestContentRepositoryFlowFileAccess.testContentNotFoundPropagated","org.apache.nifi.controller.queue.clustered.TestContentRepositoryFlowFileAccess.testInputStreamFromContentRepo","org.apache.nifi.controller.queue.clustered.TestNaiveLimitThreshold.testCount","org.apache.nifi.controller.queue.clustered.TestNaiveLimitThreshold.testSize","org.apache.nifi.controller.queue.clustered.server.TestStandardLoadBalanceProtocol.testMultipleFlowFiles","org.apache.nifi.controller.queue.clustered.server.TestStandardLoadBalanceProtocol.testBadChecksum","org.apache.nifi.controller.queue.clustered.server.TestStandardLoadBalanceProtocol.testEofWritingContent","org.apache.nifi.controller.queue.clustered.server.TestStandardLoadBalanceProtocol.testAbortAfterChecksumConfirmation","org.apache.nifi.controller.queue.clustered.server.TestStandardLoadBalanceProtocol.testMultipleFlowFilesWithoutCheckingSpace","org.apache.nifi.controller.queue.clustered.server.TestStandardLoadBalanceProtocol.testFlowFileNoContent","org.apache.nifi.controller.queue.clustered.server.TestStandardLoadBalanceProtocol.testEofExceptionMultipleFlowFiles","org.apache.nifi.controller.queue.clustered.server.TestStandardLoadBalanceProtocol.testSimpleFlowFileTransaction","org.apache.nifi.controller.queue.clustered.client.async.nio.TestLoadBalanceSession.testSunnyCase","org.apache.nifi.controller.queue.clustered.client.async.nio.TestLoadBalanceSession.testLargeContent","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testOrderingWithCornerCases","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testPrioritizersBigQueue","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testLastQueueDateMetrics","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testPollWithOnlyExpiredFlowFile","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testDropSwappedFlowFiles","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testEmpty","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testPrioritiesKeptIntactBeforeSwap","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testOOMEFollowedBySuccessfulSwapIn","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testPrioritizer","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testPollWithExpiredAndUnexpired","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testSwapInWhenThresholdIsLessThanSwapSize","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testSwapOutFailureLeavesCorrectQueueSize","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testPollWithPenalizedFlowFile","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testSwapOutOccurs","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testPrioritizersDataAddedAfterSwapOccurs","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testQueueCountsUpdatedWhenIncompleteSwapFile","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testGetActiveFlowFilesReturnsAllActiveFlowFiles","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testPrioritizerWhenOutOfOrderDataEntersSwapQueue","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testSwapIn","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testLowestPrioritySwappedOutFirst","org.apache.nifi.controller.queue.clustered.TestSwappablePriorityQueue.testListFlowFilesResultsLimited","org.apache.nifi.controller.state.server.TestZooKeeperStateServer.testServerCreated","org.apache.nifi.controller.state.server.TestZooKeeperStateServer.testServerCreatePath","org.apache.nifi.controller.state.server.TestZooKeeperStateServer.testServerOk","org.apache.nifi.controller.state.server.TestZooKeeperStateServerConfigurations.","org.apache.nifi.controller.state.server.TestZooKeeperStateServerConfigurations.","org.apache.nifi.controller.state.server.TestZooKeeperStateServerConfigurations.","org.apache.nifi.controller.state.server.TestZooKeeperStateServerConfigurations.testCreateFromEmptyNiFiProperties","org.apache.nifi.controller.state.server.TestZooKeeperStateServerConfigurations.testCreateWithSpecifiedSecureClientPort","org.apache.nifi.controller.state.server.TestZooKeeperStateServerConfigurations.testCreateRemovesInsecureClientPort","org.apache.nifi.controller.state.server.TestZooKeeperStateServerConfigurations.testCreateFromValidInsecureNiFiProperties","org.apache.nifi.controller.state.server.TestZooKeeperStateServerConfigurations.testCreateWithSpecifiedConnectionClass","org.apache.nifi.controller.state.server.TestZooKeeperStateServerConfigurations.testCreateWithUnspecifiedConnectionClass","org.apache.nifi.controller.state.TestStateMapSerDe.testCreateRoundTrip","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testReplaceWithWrongVersion","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testClear","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testToMap","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testReplaceWithNonExistingValueAndVersionGreaterThanNegativeOne","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testOnComponentRemoved","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testSetAndGet","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testReplaceWithNonExistingValue","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testReplaceSuccessful","org.apache.nifi.controller.status.analytics.models.TestSimpleRegression.testConstantPrediction","org.apache.nifi.controller.status.analytics.models.TestSimpleRegression.testVaryingPredictX","org.apache.nifi.controller.status.analytics.models.TestSimpleRegression.testVaryingPredictY","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testCombinePropertiesOverridesWithAdditionalProperties","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testStateTooLargeExceptionThrownOnReplace","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testStateTooLargeExceptionThrownOnReplaceSmallJuteMaxbuffer","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testStateTooLargeExceptionThrownOnSetState","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testCombineProperties","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testCombineNullNiFiPropsWithPropertiesOverrides","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testReplaceWithWrongVersion","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testClear","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testToMap","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testReplaceWithNonExistingValueAndVersionGreaterThanNegativeOne","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testOnComponentRemoved","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testSetAndGet","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testReplaceWithNonExistingValue","org.apache.nifi.controller.state.providers.zookeeper.TestZooKeeperStateProvider.testReplaceSuccessful","org.apache.nifi.controller.status.analytics.TestCachingConnectionStatusAnalyticsEngine.testCachedStatusAnalytics","org.apache.nifi.controller.status.analytics.TestCachingConnectionStatusAnalyticsEngine.testGetStatusAnalytics","org.apache.nifi.controller.status.analytics.models.TestOrdinaryLeastSquares.testVaryingPredictionOfVariable","org.apache.nifi.controller.status.analytics.models.TestOrdinaryLeastSquares.testVaryingPrediction","org.apache.nifi.controller.status.analytics.models.TestOrdinaryLeastSquares.comparePredictions","org.apache.nifi.controller.status.analytics.models.TestOrdinaryLeastSquares.testConstantPrediction","org.apache.nifi.controller.status.analytics.TestStatusAnalyticsModelMapFactory.getConnectionStatusModelMap","org.apache.nifi.controller.status.history.JsonNodeStatusHistoryDumpFactoryTest.testJsonNodeStatusDumpFactory","org.apache.nifi.controller.status.history.JsonNodeStatusHistoryDumpFactoryTest.testJsonNodeStatusDumpFactoryWithLessThanOneDayThrowsException","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testGetTimeToBytesBackpressureMillis","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testGetTimeToCountBackpressureMillis","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testCannotPredictNextIntervalBytesNaN","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testCannotPredictTimeToCountNegative","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testCannotPredictTimeToCountNaN","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testGetScoresWithBadModel","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testInvalidModelNaNScore","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testGetNextIntervalPercentageUseBytes","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testGetNextIntervalPercentageUseCount","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testCannotPredictNextIntervalBytesInfinity","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testMissingModelGetTimeToBytes","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testMissingModelGetTimeToCount","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testCannotPredictNextIntervalCountNaN","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testInvalidModelInfiniteScore","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testGetIntervalTimeMillis","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testGetNextIntervalBytes","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testGetNextIntervalCount","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testMissingModelNextIntervalBytes","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testMissingModelGetNextIntervalCount","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testGetNextIntervalCountZero","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testCannotPredictTimeToBytesInfinite","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testInvalidModelLowScore","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testCannotPredictNextIntervalCountInfinity","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testCannotPredictTimeToBytesNegative","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testNextIntervalBytesZero","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testGetScores","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testCannotPredictTimeToBytesNaN","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalytics.testCannotPredictTimeToCountInfinite","org.apache.nifi.controller.status.analytics.TestConnectionStatusAnalyticsEngine.testGetStatusAnalytics","org.apache.nifi.controller.status.history.VolatileComponentStatusRepositoryForComponentsTest.testFilterDatesUsingEndFilter","org.apache.nifi.controller.status.history.VolatileComponentStatusRepositoryForComponentsTest.testFilterDatesUsingStartEndAndPreferredFilter","org.apache.nifi.controller.status.history.VolatileComponentStatusRepositoryForComponentsTest.testFilterDatesUsingStartAndEndFilter","org.apache.nifi.controller.status.history.VolatileComponentStatusRepositoryForComponentsTest.testFilterDatesUsingPreferredDataPoints","org.apache.nifi.controller.status.history.VolatileComponentStatusRepositoryForComponentsTest.testFilterDatesReturnAll","org.apache.nifi.controller.status.history.VolatileComponentStatusRepositoryForComponentsTest.testFilterWorksWithCircularBuffer","org.apache.nifi.controller.status.history.VolatileComponentStatusRepositoryForComponentsTest.testFilterDatesUsingStartFilter","org.apache.nifi.controller.status.history.TestMetricRollingBuffer.testBufferShrinks","org.apache.nifi.controller.status.history.TestMetricRollingBuffer.testBufferGrows","org.apache.nifi.controller.status.history.storage.BufferedWriterForStatusStorageTest.testStoringOnlyWhenPersist","org.apache.nifi.controller.status.history.EmbeddedQuestDbStatusHistoryRepositoryForComponentsTest.testReadingEmptyRepository","org.apache.nifi.controller.status.history.EmbeddedQuestDbStatusHistoryRepositoryForComponentsTest.testWritingThenReadingComponents","org.apache.nifi.controller.status.history.EmbeddedQuestDbStatusHistoryRepositoryForComponentsTest.testReadingLimitedByPreferredDataPoints","org.apache.nifi.controller.status.history.StatusHistoryUtilTest.testCreateFieldDescriptorDtosWhenCounterTypeAppears","org.apache.nifi.controller.status.history.StatusHistoryUtilTest.testCreateFieldDescriptorDtosWhenEmpty","org.apache.nifi.controller.status.history.StatusHistoryUtilTest.testCreateFieldDescriptorDtos","org.apache.nifi.controller.status.history.StatusHistoryUtilTest.testCreateFieldDescriptorDtosWhenNotConsecutive","org.apache.nifi.controller.status.history.EmbeddedQuestDbStatusHistoryRepositoryForNodeTest.testReadingEmptyRepository","org.apache.nifi.controller.status.history.EmbeddedQuestDbStatusHistoryRepositoryForNodeTest.testWritingThenReadingComponents","org.apache.nifi.controller.status.history.VolatileComponentStatusRepositoryForNodeTest.testNodeStatusHistory","org.apache.nifi.controller.TestFileSystemSwapManager.testFailureOnRepoSwapOut","org.apache.nifi.controller.TestFileSystemSwapManager.testSwapFileUnknownToRepoNotSwappedIn","org.apache.nifi.controller.TestFileSystemSwapManager.testBackwardCompatible","org.apache.nifi.controller.TestEncryptedFileSystemSwapManager.testSwapOutSwapIn","org.apache.nifi.controller.TestStandardFlowFileQueue.testGetMinLastQueueDate","org.apache.nifi.controller.TestStandardFlowFileQueue.testListFlowFilesResultsLimitedCollection","org.apache.nifi.controller.TestStandardFlowFileQueue.testDropSwappedFlowFiles","org.apache.nifi.controller.TestStandardFlowFileQueue.testBackPressure","org.apache.nifi.controller.TestStandardFlowFileQueue.testOOMEFollowedBySuccessfulSwapIn","org.apache.nifi.controller.TestStandardFlowFileQueue.testBackPressureAfterDrop","org.apache.nifi.controller.TestStandardFlowFileQueue.testSwapInWhenThresholdIsLessThanSwapSize","org.apache.nifi.controller.TestStandardFlowFileQueue.testListFlowFilesOnlyActiveQueue","org.apache.nifi.controller.TestStandardFlowFileQueue.testBackPressureAfterPollFilter","org.apache.nifi.controller.TestStandardFlowFileQueue.testGetTotalActiveQueuedDuration","org.apache.nifi.controller.TestStandardFlowFileQueue.testBackPressureAfterPollSingle","org.apache.nifi.controller.TestStandardFlowFileQueue.testSwapOutOccurs","org.apache.nifi.controller.TestStandardFlowFileQueue.testExpire","org.apache.nifi.controller.TestStandardFlowFileQueue.testBackPressureAfterPollMultiple","org.apache.nifi.controller.TestStandardFlowFileQueue.testQueueCountsUpdatedWhenIncompleteSwapFile","org.apache.nifi.controller.TestStandardFlowFileQueue.testSwapIn","org.apache.nifi.controller.TestStandardFlowFileQueue.testListFlowFilesResultsLimited","org.apache.nifi.controller.serialization.FlowFromDOMFactoryTest.testShouldProvideBetterErrorMessageOnDecryptionFailure","org.apache.nifi.controller.serialization.FlowFromDOMFactoryTest.testShouldDecryptSensitiveFlowValue","org.apache.nifi.controller.serialization.StandardFlowSerializerTest.testSerializationEmoji","org.apache.nifi.controller.serialization.StandardFlowSerializerTest.testSerializationEscapingAndFiltering","org.apache.nifi.controller.tasks.TestConnectableTask.testIsWorkToDo","org.apache.nifi.controller.tasks.TestConnectableTask.testIsWorkToDoFunnels","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWhenProposedMissingComponentsAreDifferent","org.apache.nifi.controller.TestFlowController.testReloadControllerServiceWithAdditionalResources","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWhenExistingMissingComponentsAreDifferent","org.apache.nifi.controller.TestFlowController.testInstantiateSnippetWithDisabledProcessor","org.apache.nifi.controller.TestFlowController.testInstantiateSnippetWithProcessor","org.apache.nifi.controller.TestFlowController.testProcessSchedulerHasAccessToControllerServiceProvider","org.apache.nifi.controller.TestFlowController.testProcessorDefaultScheduleAnnotation","org.apache.nifi.controller.TestFlowController.testInstantiateSnippetWithControllerService","org.apache.nifi.controller.TestFlowController.testDeleteProcessGroup","org.apache.nifi.controller.TestFlowController.testCreateMissingProcessor","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWhenBundlesAreSame","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWhenProposedAuthorizationsAreNullAndEmptyFlow","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWithInvalidParameterContextReference","org.apache.nifi.controller.TestFlowController.testReloadReportingTask","org.apache.nifi.controller.TestFlowController.testReloadReportingTaskWithAdditionalResources","org.apache.nifi.controller.TestFlowController.testCreateMissingControllerService","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWhenBundlesAreDifferent","org.apache.nifi.controller.TestFlowController.testReloadProcessorWithAdditionalResources","org.apache.nifi.controller.TestFlowController.testPrimaryNodeOnlyAnnotation","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWhenProposedAuthorizationsAreNull","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWhenCurrentAuthorizationsAreEmptyAndProposedAreNot","org.apache.nifi.controller.TestFlowController.testProcessorDefaultSettingsAnnotation","org.apache.nifi.controller.TestFlowController.testReloadProcessor","org.apache.nifi.controller.TestFlowController.testCreateParameterContextWithAndWithoutValidation","org.apache.nifi.controller.TestFlowController.testCreateMissingReportingTask","org.apache.nifi.controller.TestFlowController.testReportingTaskDefaultScheduleAnnotation","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWhenAuthorizationsAreDifferentAndFlowEmpty","org.apache.nifi.controller.TestFlowController.testInstantiateSnippetWhenProcessorMissingBundle","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWhenAuthorizationsAreEqual","org.apache.nifi.controller.TestFlowController.testInstantiateSnippetWhenControllerServiceMissingBundle","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWithProcessorReferencingControllerService","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWithReportingTaskAndProcessorReferencingControllerService","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWithNestedParameterContexts","org.apache.nifi.controller.TestFlowController.testReloadControllerService","org.apache.nifi.controller.TestFlowController.testSynchronizeFlowWhenAuthorizationsAreDifferent","org.apache.nifi.controller.service.StandardControllerServiceProviderTest.testCallImplementationInitialized","org.apache.nifi.controller.service.StandardControllerServiceProviderTest.testCallProxiedInitialized","org.apache.nifi.controller.service.StandardControllerServiceProviderTest.testCallProxiedOnPropertyModified","org.apache.nifi.controller.service.StandardControllerServiceProviderTest.testCallImplementationOnPropertyModified","org.apache.nifi.controller.service.TestStandardControllerServiceProvider.testOrderingOfServices","org.apache.nifi.controller.service.TestStandardControllerServiceProvider.testEnableReferencingComponents","org.apache.nifi.controller.service.TestStandardControllerServiceProvider.testDisableControllerService","org.apache.nifi.controller.service.TestStandardControllerServiceProvider.testEnableDisableWithReference","org.apache.nifi.controller.service.TestStandardControllerServiceProvider.validateEnableServices","org.apache.nifi.controller.service.TestStandardControllerServiceProvider.validateEnableServices2","org.apache.nifi.controller.service.TestStandardControllerServiceProvider.validateEnableServicesWithDisabledMissingService","org.apache.nifi.controller.scheduling.TestStandardProcessScheduler.testProcessorTimeOutRespondsToInterrupt","org.apache.nifi.controller.scheduling.TestStandardProcessScheduler.validateDisablingOfTheFailedService","org.apache.nifi.controller.scheduling.TestStandardProcessScheduler.testProcessorTimeOutNoResponseToInterrupt","org.apache.nifi.controller.scheduling.TestStandardProcessScheduler.validateEnabledServiceCanOnlyBeDisabledOnce","org.apache.nifi.controller.scheduling.TestStandardProcessScheduler.testDisableControllerServiceWithProcessorTryingToStartUsingIt","org.apache.nifi.controller.scheduling.TestStandardProcessScheduler.testProcessorThrowsExceptionOnScheduledRetry","org.apache.nifi.controller.scheduling.TestStandardProcessScheduler.validateServiceEnablementLogicHappensOnlyOnce","org.apache.nifi.controller.scheduling.TestStandardProcessScheduler.testReportingTaskDoesntKeepRunningAfterStop","org.apache.nifi.controller.scheduling.TestStandardProcessScheduler.validateDisabledServiceCantBeDisabled","org.apache.nifi.controller.scheduling.TestStandardProcessScheduler.validateNeverEnablingServiceCanStillBeDisabled","org.apache.nifi.controller.swap.TestSimpleSwapSerializerDeserializer.testRoundTripSerializeDeserialize","org.apache.nifi.controller.swap.TestSchemaSwapSerializerDeserializer.testRoundTripSerializeDeserializeSummary","org.apache.nifi.controller.swap.TestSchemaSwapSerializerDeserializer.testRoundTripSerializeDeserializeFullSwapFile","org.apache.nifi.components.LongRunningTaskMonitorTest.test","org.apache.nifi.persistence.TemplateDeserializerTest.testShouldHandleXXEInTemplateLoad","org.apache.nifi.fingerprint.FingerprintFactoryTest.testSameFingerprint","org.apache.nifi.fingerprint.FingerprintFactoryTest.testRemoteProcessGroupFingerprintRaw","org.apache.nifi.fingerprint.FingerprintFactoryTest.testInheritedParameterContextsInFingerprint","org.apache.nifi.fingerprint.FingerprintFactoryTest.testSameFlowAndOneHasMissingBundleShouldHaveDifferentFingerprints","org.apache.nifi.fingerprint.FingerprintFactoryTest.testControllerServicesIncludedInGroupFingerprint","org.apache.nifi.fingerprint.FingerprintFactoryTest.testSchemaValidation","org.apache.nifi.fingerprint.FingerprintFactoryTest.testResourceValueInFingerprint","org.apache.nifi.fingerprint.FingerprintFactoryTest.testDifferentFingerprint","org.apache.nifi.fingerprint.FingerprintFactoryTest.testSameFlowAndOneHasNoBundleShouldHaveDifferentFingerprints","org.apache.nifi.fingerprint.FingerprintFactoryTest.testRemotePortFingerprint","org.apache.nifi.fingerprint.FingerprintFactoryTest.testSameFlowWithDifferentBundleShouldHaveDifferentFingerprints","org.apache.nifi.fingerprint.FingerprintFactoryTest.testPublicPortWithAccessPoliciesFingerprint","org.apache.nifi.fingerprint.FingerprintFactoryTest.testPublicPortWithNoAccessPoliciesFingerprint","org.apache.nifi.fingerprint.FingerprintFactoryTest.testConnectionWithMultipleRelationshipsSortedInFingerprint","org.apache.nifi.fingerprint.FingerprintFactoryTest.testRemoteProcessGroupFingerprintWithProxy","org.apache.nifi.fingerprint.FingerprintFactoryTest.testPublicPortWithDifferentFingerprintInAccessPolicies","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testPreferredDefaultTlsPropertyOnly","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testValidClientSecureEmpty","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testValidClientSecureFalse","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testValidClientSecureSpaces","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testGetPreferredZookeeperTlsProperty","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testMultiValidEntrySkipOne","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testEmptyKeyStoreTypes","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testValidClientSecureUpperCase","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testValidCnxnSocketNames","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testKeyStoreTypesSpaces","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testValidClientSecureTrue","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testMultiValidEntrySpacesForDays","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testIfGetPreferredPropertyIsBlankChoosesDefault","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testMultiValidOneNonsense","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testEasyCase","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testInvalidSingleEntry","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testValidFunkyInput","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testMultiValidEntry","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testGetPreferredPropertyCombinationChoosesZookeeper","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testKeyStoreTypes","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testBlankKeyStoreTypes","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testSingleEntryNoPort","org.apache.nifi.cluster.ZooKeeperClientConfigTest.testInvalidClientSecure","org.apache.nifi.persistence.TestFlowConfigurationArchiveManager.testNiFiPropertiesMaxStorage","org.apache.nifi.persistence.TestFlowConfigurationArchiveManager.testArchiveStorageSizeLimit","org.apache.nifi.persistence.TestFlowConfigurationArchiveManager.testArchiveWithoutOriginalFile","org.apache.nifi.persistence.TestFlowConfigurationArchiveManager.testNiFiPropertiesCount","org.apache.nifi.persistence.TestFlowConfigurationArchiveManager.testNiFiPropertiesMaxTime","org.apache.nifi.persistence.TestFlowConfigurationArchiveManager.testNiFiPropertiesDefault","org.apache.nifi.persistence.TestFlowConfigurationArchiveManager.testLargeConfigFile","org.apache.nifi.persistence.TestFlowConfigurationArchiveManager.testArchiveStorageCountLimit","org.apache.nifi.persistence.TestFlowConfigurationArchiveManager.testArchiveExpiration","org.apache.nifi.util.TestFileBasedVariableRegistry.testCreateCustomVariableRegistry","org.apache.nifi.cluster.HeartbeatPayloadTest.testMarshalling","org.apache.nifi.cluster.HeartbeatPayloadTest.testMarshallingWithNoInfo","org.apache.nifi.fingerprint.FingerprintFactoryGroovyTest.testCreateFingerprintShouldNotDiscloseSensitivePropertyValues","org.apache.nifi.registry.flow.mapping.NiFiRegistryFlowMapperTest.testMapParameterContextsExcludingVersionedDescendants","org.apache.nifi.registry.flow.mapping.NiFiRegistryFlowMapperTest.testMapNonVersionedProcessGroups","org.apache.nifi.registry.flow.mapping.NiFiRegistryFlowMapperTest.testMapVersionedProcessGroupsExcludingVersionedDescendants","org.apache.nifi.registry.flow.mapping.NiFiRegistryFlowMapperTest.testMapNestedParameterContexts","org.apache.nifi.persistence.TemplateSerializerTest.validateDiffWithChangingComponentIdAndAdditionalElements","org.apache.nifi.wali.EncryptedSequentialAccessWriteAheadLogTest.testShouldUpdateWithExternalFile"],"result":"ERROR","testRunId":"1713634536167-cc6a4bc3-1816-4ef6-94cc-904d6b08b95b"},"revealed":{"order":["org.apache.nifi.controller.repository.TestWriteAheadFlowFileRepository.testRestartWithOneRecord","org.apache.nifi.controller.repository.TestWriteAheadFlowFileRepository.testResourceClaimsIncremented","org.apache.nifi.controller.repository.TestWriteAheadFlowFileRepository.testNormalizeSwapLocation","org.apache.nifi.controller.repository.TestWriteAheadFlowFileRepository.testSwapLocationsUpdatedOnRepoUpdate","org.apache.nifi.controller.repository.TestWriteAheadFlowFileRepository.testSwapLocationsRestored","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testReplaceSuccessful","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testReplaceWithNonExistingValue","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testSetAndGet","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testOnComponentRemoved","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testReplaceWithNonExistingValueAndVersionGreaterThanNegativeOne","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testToMap","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testClear","org.apache.nifi.controller.state.providers.local.TestWriteAheadLocalStateProvider.testReplaceWithWrongVersion","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.queue.clustered.partition.NonLocalPartitionPartitionerSpec.","org.apache.nifi.controller.status.history.StatusHistoryUtilTest.testCreateFieldDescriptorDtosWhenNotConsecutive","org.apache.nifi.controller.status.history.StatusHistoryUtilTest.testCreateFieldDescriptorDtos","org.apache.nifi.controller.status.history.StatusHistoryUtilTest.testCreateFieldDescriptorDtosWhenEmpty","org.apache.nifi.controller.status.history.StatusHistoryUtilTest.testCreateFieldDescriptorDtosWhenCounterTypeAppears"],"result":"PASS","testRunId":"1713636532255-26fa913e-0208-409a-88cf-56d4626d3fbc"},"type":"OD"}]},"filteredTests":{"dts":[]},"roundTime":126.586152901}