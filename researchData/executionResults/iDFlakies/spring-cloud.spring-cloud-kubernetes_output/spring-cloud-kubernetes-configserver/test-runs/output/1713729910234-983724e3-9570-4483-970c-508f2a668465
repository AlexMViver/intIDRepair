20:05:12.952 [main] INFO org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Profiles: 
20:05:12.954 [main] INFO org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Application: gateway
20:05:12.954 [main] INFO org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Label: 
20:05:12.962 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles []
20:05:12.965 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : team-a
20:05:12.965 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : team-a
20:05:12.965 [main] INFO org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigMapPropertySource - Loading ConfigMap with name 'application' in namespace 'team-a'
20:05:12.968 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : team-b
20:05:12.968 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : team-b
20:05:12.968 [main] INFO org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigMapPropertySource - Loading ConfigMap with name 'application' in namespace 'team-b'
20:05:12.969 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : team-a
20:05:12.969 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : team-a
20:05:12.969 [main] INFO org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigMapPropertySource - Loading ConfigMap with name 'gateway' in namespace 'team-a'
20:05:12.969 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : team-b
20:05:12.969 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : team-b
20:05:12.969 [main] INFO org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigMapPropertySource - Loading ConfigMap with name 'gateway' in namespace 'team-b'
20:05:13.018 [main] INFO org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Profiles: 
20:05:13.018 [main] INFO org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Application: stores
20:05:13.019 [main] INFO org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Label: 
20:05:13.019 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles []
20:05:13.019 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : team-a
20:05:13.019 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : team-a
20:05:13.019 [main] INFO org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigMapPropertySource - Loading ConfigMap with name 'application' in namespace 'team-a'
20:05:13.019 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : team-b
20:05:13.019 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : team-b
20:05:13.019 [main] INFO org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigMapPropertySource - Loading ConfigMap with name 'application' in namespace 'team-b'
20:05:13.019 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : team-a
20:05:13.019 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : team-a
20:05:13.019 [main] INFO org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigMapPropertySource - Loading ConfigMap with name 'stores' in namespace 'team-a'
20:05:13.019 [main] DEBUG org.springframework.cloud.kubernetes.commons.config.ConfigMapPropertySource - The single property with name: [application.yaml] will be treated as a yaml file
20:05:13.047 [main] DEBUG org.springframework.beans.factory.config.YamlPropertiesFactoryBean - Loading from YAML: Byte array resource [resource loaded from byte array]
20:05:13.064 [main] DEBUG org.springframework.beans.factory.config.YamlPropertiesFactoryBean - Matched document with default matcher: {dummy={property={string=stores}}}
20:05:13.065 [main] DEBUG org.springframework.beans.factory.config.YamlPropertiesFactoryBean - Loaded 1 document from YAML resource: Byte array resource [resource loaded from byte array]
20:05:13.066 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : team-b
20:05:13.066 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : team-b
20:05:13.067 [main] INFO org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigMapPropertySource - Loading ConfigMap with name 'stores' in namespace 'team-b'
20:05:13.067 [main] DEBUG org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Adding PropertySource configmap.stores.team-a
20:05:13.067 [main] DEBUG org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - PropertySource Names: dummy.property.string
20:05:13.067 [main] INFO org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Profiles: 
20:05:13.067 [main] INFO org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Application: orders
20:05:13.067 [main] INFO org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Label: 
20:05:13.067 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles []
20:05:13.067 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : team-a
20:05:13.067 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : team-a
20:05:13.067 [main] INFO org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigMapPropertySource - Loading ConfigMap with name 'application' in namespace 'team-a'
20:05:13.068 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : team-b
20:05:13.068 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : team-b
20:05:13.068 [main] INFO org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigMapPropertySource - Loading ConfigMap with name 'application' in namespace 'team-b'
20:05:13.068 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : team-a
20:05:13.068 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : team-a
20:05:13.068 [main] INFO org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigMapPropertySource - Loading ConfigMap with name 'orders' in namespace 'team-a'
20:05:13.068 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : team-b
20:05:13.068 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : team-b
20:05:13.068 [main] INFO org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigMapPropertySource - Loading ConfigMap with name 'orders' in namespace 'team-b'
20:05:13.069 [main] DEBUG org.springframework.cloud.kubernetes.commons.config.ConfigMapPropertySource - The single property with name: [application.yaml] will be treated as a yaml file
20:05:13.069 [main] DEBUG org.springframework.beans.factory.config.YamlPropertiesFactoryBean - Loading from YAML: Byte array resource [resource loaded from byte array]
20:05:13.069 [main] DEBUG org.springframework.beans.factory.config.YamlPropertiesFactoryBean - Matched document with default matcher: {dummy={property={string=orders}}}
20:05:13.069 [main] DEBUG org.springframework.beans.factory.config.YamlPropertiesFactoryBean - Loaded 1 document from YAML resource: Byte array resource [resource loaded from byte array]
20:05:13.069 [main] DEBUG org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Adding PropertySource configmap.orders.team-b
20:05:13.069 [main] DEBUG org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - PropertySource Names: dummy.property.string
20:05:13.089 [main] INFO org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Profiles: 
20:05:13.089 [main] INFO org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Application: stores
20:05:13.089 [main] INFO org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Label: 
20:05:13.089 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles []
20:05:13.089 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : default
20:05:13.089 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : default
20:05:13.089 [main] INFO org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigMapPropertySource - Loading ConfigMap with name 'application' in namespace 'default'
20:05:13.089 [main] DEBUG org.springframework.cloud.kubernetes.commons.config.ConfigMapPropertySource - The single property with name: [application.yaml] will be treated as a yaml file
20:05:13.089 [main] DEBUG org.springframework.beans.factory.config.YamlPropertiesFactoryBean - Loading from YAML: Byte array resource [resource loaded from byte array]
20:05:13.090 [main] DEBUG org.springframework.beans.factory.config.YamlPropertiesFactoryBean - Matched document with default matcher: {dummy={property={string2=a, int2=1, bool2=true}}}
20:05:13.090 [main] DEBUG org.springframework.beans.factory.config.YamlPropertiesFactoryBean - Loaded 1 document from YAML resource: Byte array resource [resource loaded from byte array]
20:05:13.091 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : dev
20:05:13.091 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : dev
20:05:13.091 [main] INFO org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigMapPropertySource - Loading ConfigMap with name 'application' in namespace 'dev'
20:05:13.091 [main] DEBUG org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Adding PropertySource configmap.application.default
20:05:13.091 [main] DEBUG org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - PropertySource Names: dummy.property.int2,dummy.property.bool2,dummy.property.string2
20:05:13.092 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Secret namespace from normalized source or passed directly : default
20:05:13.092 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Secret namespace from normalized source or passed directly : default
20:05:13.092 [main] INFO org.springframework.cloud.kubernetes.client.config.KubernetesClientSecretsPropertySource - Loading Secret with name 'application' or with labels [{}] in namespace 'default'
20:05:13.094 [main] DEBUG org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Adding PropertySource secrets.application.default
20:05:13.094 [main] DEBUG org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - PropertySource Names: password,username
20:05:13.094 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : default
20:05:13.094 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : default
20:05:13.094 [main] INFO org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigMapPropertySource - Loading ConfigMap with name 'stores' in namespace 'default'
20:05:13.094 [main] DEBUG org.springframework.cloud.kubernetes.commons.config.ConfigMapPropertySource - The single property with name: [application.yaml] will be treated as a yaml file
20:05:13.094 [main] DEBUG org.springframework.beans.factory.config.YamlPropertiesFactoryBean - Loading from YAML: Byte array resource [resource loaded from byte array]
20:05:13.095 [main] DEBUG org.springframework.beans.factory.config.YamlPropertiesFactoryBean - Matched document with default matcher: {dummy={property={string2=a, int2=1, bool2=true}}}
20:05:13.095 [main] DEBUG org.springframework.beans.factory.config.YamlPropertiesFactoryBean - Loaded 1 document from YAML resource: Byte array resource [resource loaded from byte array]
20:05:13.096 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : dev
20:05:13.096 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : dev
20:05:13.096 [main] INFO org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigMapPropertySource - Loading ConfigMap with name 'stores' in namespace 'dev'
20:05:13.096 [main] DEBUG org.springframework.cloud.kubernetes.commons.config.ConfigMapPropertySource - The single property with name: [application.yaml] will be treated as a yaml file
20:05:13.096 [main] DEBUG org.springframework.beans.factory.config.YamlPropertiesFactoryBean - Loading from YAML: Byte array resource [resource loaded from byte array]
20:05:13.097 [main] DEBUG org.springframework.beans.factory.config.YamlPropertiesFactoryBean - Matched document with default matcher: {dummy={property={string2=dev, int2=1, bool2=true}}}
20:05:13.097 [main] DEBUG org.springframework.beans.factory.config.YamlPropertiesFactoryBean - Loaded 1 document from YAML resource: Byte array resource [resource loaded from byte array]
20:05:13.097 [main] DEBUG org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Adding PropertySource configmap.stores.default
20:05:13.097 [main] DEBUG org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - PropertySource Names: dummy.property.int2,dummy.property.bool2,dummy.property.string2
20:05:13.097 [main] DEBUG org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Adding PropertySource configmap.stores.dev
20:05:13.097 [main] DEBUG org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - PropertySource Names: dummy.property.int2,dummy.property.bool2,dummy.property.string2
20:05:13.097 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Secret namespace from normalized source or passed directly : default
20:05:13.097 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Secret namespace from normalized source or passed directly : default
20:05:13.097 [main] INFO org.springframework.cloud.kubernetes.client.config.KubernetesClientSecretsPropertySource - Loading Secret with name 'stores' or with labels [{}] in namespace 'default'
20:05:13.097 [main] DEBUG org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Adding PropertySource secrets.stores.default
20:05:13.097 [main] DEBUG org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - PropertySource Names: password,username
20:05:13.104 [main] INFO org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Profiles: 
20:05:13.104 [main] INFO org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Application: application
20:05:13.104 [main] INFO org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Label: 
20:05:13.104 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles []
20:05:13.104 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : default
20:05:13.104 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : default
20:05:13.104 [main] INFO org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigMapPropertySource - Loading ConfigMap with name 'application' in namespace 'default'
20:05:13.104 [main] DEBUG org.springframework.cloud.kubernetes.commons.config.ConfigMapPropertySource - The single property with name: [application.yaml] will be treated as a yaml file
20:05:13.104 [main] DEBUG org.springframework.beans.factory.config.YamlPropertiesFactoryBean - Loading from YAML: Byte array resource [resource loaded from byte array]
20:05:13.105 [main] DEBUG org.springframework.beans.factory.config.YamlPropertiesFactoryBean - Matched document with default matcher: {dummy={property={string2=a, int2=1, bool2=true}}}
20:05:13.105 [main] DEBUG org.springframework.beans.factory.config.YamlPropertiesFactoryBean - Loaded 1 document from YAML resource: Byte array resource [resource loaded from byte array]
20:05:13.105 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : dev
20:05:13.105 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : dev
20:05:13.105 [main] INFO org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigMapPropertySource - Loading ConfigMap with name 'application' in namespace 'dev'
20:05:13.106 [main] DEBUG org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Adding PropertySource configmap.application.default
20:05:13.106 [main] DEBUG org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - PropertySource Names: dummy.property.int2,dummy.property.bool2,dummy.property.string2
20:05:13.106 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Secret namespace from normalized source or passed directly : default
20:05:13.106 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Secret namespace from normalized source or passed directly : default
20:05:13.106 [main] INFO org.springframework.cloud.kubernetes.client.config.KubernetesClientSecretsPropertySource - Loading Secret with name 'application' or with labels [{}] in namespace 'default'
20:05:13.106 [main] DEBUG org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Adding PropertySource secrets.application.default
20:05:13.106 [main] DEBUG org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - PropertySource Names: password,username
20:05:13.106 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : default
20:05:13.106 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : default
20:05:13.106 [main] INFO org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigMapPropertySource - Loading ConfigMap with name 'application' in namespace 'default'
20:05:13.106 [main] DEBUG org.springframework.cloud.kubernetes.commons.config.ConfigMapPropertySource - The single property with name: [application.yaml] will be treated as a yaml file
20:05:13.106 [main] DEBUG org.springframework.beans.factory.config.YamlPropertiesFactoryBean - Loading from YAML: Byte array resource [resource loaded from byte array]
20:05:13.107 [main] DEBUG org.springframework.beans.factory.config.YamlPropertiesFactoryBean - Matched document with default matcher: {dummy={property={string2=a, int2=1, bool2=true}}}
20:05:13.107 [main] DEBUG org.springframework.beans.factory.config.YamlPropertiesFactoryBean - Loaded 1 document from YAML resource: Byte array resource [resource loaded from byte array]
20:05:13.107 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : dev
20:05:13.107 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Config Map namespace from normalized source or passed directly : dev
20:05:13.107 [main] INFO org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigMapPropertySource - Loading ConfigMap with name 'application' in namespace 'dev'
20:05:13.108 [main] DEBUG org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Adding PropertySource configmap.application.default
20:05:13.108 [main] DEBUG org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - PropertySource Names: dummy.property.int2,dummy.property.bool2,dummy.property.string2
20:05:13.108 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Secret namespace from normalized source or passed directly : default
20:05:13.108 [main] DEBUG org.springframework.cloud.kubernetes.client.config.KubernetesClientConfigUtils - Secret namespace from normalized source or passed directly : default
20:05:13.108 [main] INFO org.springframework.cloud.kubernetes.client.config.KubernetesClientSecretsPropertySource - Loading Secret with name 'application' or with labels [{}] in namespace 'default'
20:05:13.108 [main] DEBUG org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - Adding PropertySource secrets.application.default
20:05:13.108 [main] DEBUG org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepository - PropertySource Names: password,username
org.opentest4j.AssertionFailedError: 
expected: 2
 but was: 4
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at org.springframework.cloud.kubernetes.configserver.KubernetesEnvironmentRepositoryTests.testApplicationCase(KubernetesEnvironmentRepositoryTests.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.util.ArrayList.forEach(ArrayList.java:1259)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.util.ArrayList.forEach(ArrayList.java:1259)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)
	at edu.illinois.cs.testrunner.execution.JUnit5TestExecutor.runTestsSeparately(JUnit5TestExecutor.java:40)
	at edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:33)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at scala.util.Try$.apply(Try.scala:209)
	at edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)
	at edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)
	at edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)
