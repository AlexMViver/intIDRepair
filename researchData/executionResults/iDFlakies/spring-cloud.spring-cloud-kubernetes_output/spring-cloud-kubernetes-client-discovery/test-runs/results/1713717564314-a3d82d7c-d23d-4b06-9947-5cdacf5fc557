{"id":"1713717564314-a3d82d7c-d23d-4b06-9947-5cdacf5fc557","testOrder":["org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated","org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryWithServiceLabels","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryInstancesWithServiceLabels","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithoutReadyAddressesShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithNotReadyAddressesIncludedShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutPortsShouldBeSkipped","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutEndpointsShouldBeSkipped","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedShouldFallBackToHttpsPort","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedOrHttpsPortShouldFallBackToHttpPort","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutAnyConfigurationShouldPickTheFirstPort","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndPrimaryPortNameConfiguredWithLabelShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredPrimaryPortNameInLabelShouldReturnFirstPortAndLogWarning","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredGenericPrimaryPortNameShouldReturnFirstPortAndLogWarning","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndGenericPrimaryPortNameConfiguredShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientConfigClientBootstrapConfigurationTests.onWhenRequested","org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttps","org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttp","org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated"],"results":{"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork","result":"PASS","time":9.69354E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutPortsShouldBeSkipped":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutPortsShouldBeSkipped","result":"PASS","time":6.34176E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork","result":"PASS","time":0.002457605,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork","result":"PASS","time":0.003257978,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredPrimaryPortNameInLabelShouldReturnFirstPortAndLogWarning":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredPrimaryPortNameInLabelShouldReturnFirstPortAndLogWarning","result":"PASS","time":0.001226279,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedOrHttpsPortShouldFallBackToHttpPort":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedOrHttpsPortShouldFallBackToHttpPort","result":"PASS","time":9.64817E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredGenericPrimaryPortNameShouldReturnFirstPortAndLogWarning":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredGenericPrimaryPortNameShouldReturnFirstPortAndLogWarning","result":"PASS","time":0.001309691,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryInstancesWithServiceLabels":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryInstancesWithServiceLabels","result":"PASS","time":0.001859696,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttp":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttp","result":"PASS","time":1.15975E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndPrimaryPortNameConfiguredWithLabelShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndPrimaryPortNameConfiguredWithLabelShouldWork","result":"PASS","time":9.54441E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutEndpointsShouldBeSkipped":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutEndpointsShouldBeSkipped","result":"PASS","time":7.10871E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated","result":"PASS","time":0.266649438,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndGenericPrimaryPortNameConfiguredShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndGenericPrimaryPortNameConfiguredShouldWork","result":"PASS","time":0.001826558,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientConfigClientBootstrapConfigurationTests.onWhenRequested":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientConfigClientBootstrapConfigurationTests.onWhenRequested","result":"PASS","time":0.208896335,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork","result":"PASS","time":0.185073638,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithoutReadyAddressesShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithoutReadyAddressesShouldWork","result":"PASS","time":0.011523037,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttps":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttps","result":"PASS","time":0.00569413,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutAnyConfigurationShouldPickTheFirstPort":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutAnyConfigurationShouldPickTheFirstPort","result":"PASS","time":0.00123887,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedShouldFallBackToHttpsPort":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedShouldFallBackToHttpsPort","result":"PASS","time":9.1733E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork","result":"PASS","time":0.002974041,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated","result":"PASS","time":0.004094978,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork","result":"PASS","time":9.45098E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork","result":"PASS","time":0.007591965,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithNotReadyAddressesIncludedShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithNotReadyAddressesIncludedShouldWork","result":"PASS","time":0.001113729,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork","result":"PASS","time":0.002495797,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryWithServiceLabels":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryWithServiceLabels","result":"PASS","time":8.63196E-4,"stackTrace":[]}}}