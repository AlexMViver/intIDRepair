{"id":"1713702786053-1d152a5b-6c5e-407f-b5f1-121be14ae144","testOrder":["org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientConfigClientBootstrapConfigurationTests.onWhenRequested","org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttps","org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttp","org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredGenericPrimaryPortNameShouldReturnFirstPortAndLogWarning","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithNotReadyAddressesIncludedShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryWithServiceLabels","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndPrimaryPortNameConfiguredWithLabelShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithoutReadyAddressesShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndGenericPrimaryPortNameConfiguredShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutPortsShouldBeSkipped","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedOrHttpsPortShouldFallBackToHttpPort","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutEndpointsShouldBeSkipped","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutAnyConfigurationShouldPickTheFirstPort","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedShouldFallBackToHttpsPort","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryInstancesWithServiceLabels","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredPrimaryPortNameInLabelShouldReturnFirstPortAndLogWarning","org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated"],"results":{"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork","result":"PASS","time":0.001025967,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutPortsShouldBeSkipped":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutPortsShouldBeSkipped","result":"PASS","time":7.04645E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork","result":"PASS","time":0.002371113,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork","result":"PASS","time":0.004280357,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredPrimaryPortNameInLabelShouldReturnFirstPortAndLogWarning":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredPrimaryPortNameInLabelShouldReturnFirstPortAndLogWarning","result":"PASS","time":0.001311535,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedOrHttpsPortShouldFallBackToHttpPort":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedOrHttpsPortShouldFallBackToHttpPort","result":"PASS","time":9.82885E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredGenericPrimaryPortNameShouldReturnFirstPortAndLogWarning":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredGenericPrimaryPortNameShouldReturnFirstPortAndLogWarning","result":"PASS","time":0.001411863,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryInstancesWithServiceLabels":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryInstancesWithServiceLabels","result":"PASS","time":0.00186709,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttp":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttp","result":"PASS","time":2.04411E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndPrimaryPortNameConfiguredWithLabelShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndPrimaryPortNameConfiguredWithLabelShouldWork","result":"PASS","time":0.001060658,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutEndpointsShouldBeSkipped":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutEndpointsShouldBeSkipped","result":"PASS","time":7.76591E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated","result":"PASS","time":0.005548327,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndGenericPrimaryPortNameConfiguredShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndGenericPrimaryPortNameConfiguredShouldWork","result":"PASS","time":0.001985557,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientConfigClientBootstrapConfigurationTests.onWhenRequested":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientConfigClientBootstrapConfigurationTests.onWhenRequested","result":"PASS","time":0.968974438,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork","result":"PASS","time":0.680072135,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithoutReadyAddressesShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithoutReadyAddressesShouldWork","result":"PASS","time":0.012230621,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttps":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttps","result":"PASS","time":0.074061981,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutAnyConfigurationShouldPickTheFirstPort":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutAnyConfigurationShouldPickTheFirstPort","result":"PASS","time":0.001179121,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedShouldFallBackToHttpsPort":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedShouldFallBackToHttpsPort","result":"PASS","time":9.62033E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork","result":"PASS","time":0.010842621,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork","result":"PASS","time":9.67975E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated","result":"PASS","time":0.011350394,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork","result":"PASS","time":0.008053312,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithNotReadyAddressesIncludedShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithNotReadyAddressesIncludedShouldWork","result":"PASS","time":0.001164267,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork","result":"PASS","time":0.002890658,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryWithServiceLabels":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryWithServiceLabels","result":"PASS","time":9.38443E-4,"stackTrace":[]}}}