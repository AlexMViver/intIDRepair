{"id":"1713717503308-abe10a97-3220-48f6-b397-a8e958763279","testOrder":["org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttps","org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttp","org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated","org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientConfigClientBootstrapConfigurationTests.onWhenRequested","org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryWithServiceLabels","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryInstancesWithServiceLabels","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithoutReadyAddressesShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithNotReadyAddressesIncludedShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutPortsShouldBeSkipped","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutEndpointsShouldBeSkipped","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedShouldFallBackToHttpsPort","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedOrHttpsPortShouldFallBackToHttpPort","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutAnyConfigurationShouldPickTheFirstPort","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndPrimaryPortNameConfiguredWithLabelShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredPrimaryPortNameInLabelShouldReturnFirstPortAndLogWarning","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredGenericPrimaryPortNameShouldReturnFirstPortAndLogWarning","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndGenericPrimaryPortNameConfiguredShouldWork"],"results":{"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutPortsShouldBeSkipped":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutPortsShouldBeSkipped","result":"PASS","time":7.23354E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork","result":"PASS","time":0.001027469,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork","result":"PASS","time":0.002147623,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork","result":"PASS","time":0.004514392,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredPrimaryPortNameInLabelShouldReturnFirstPortAndLogWarning":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredPrimaryPortNameInLabelShouldReturnFirstPortAndLogWarning","result":"PASS","time":0.001263827,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedOrHttpsPortShouldFallBackToHttpPort":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedOrHttpsPortShouldFallBackToHttpPort","result":"PASS","time":0.001091787,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredGenericPrimaryPortNameShouldReturnFirstPortAndLogWarning":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredGenericPrimaryPortNameShouldReturnFirstPortAndLogWarning","result":"PASS","time":0.001435494,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryInstancesWithServiceLabels":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryInstancesWithServiceLabels","result":"PASS","time":0.001820224,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttp":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttp","result":"PASS","time":2.92399E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndPrimaryPortNameConfiguredWithLabelShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndPrimaryPortNameConfiguredWithLabelShouldWork","result":"PASS","time":0.001213279,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutEndpointsShouldBeSkipped":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutEndpointsShouldBeSkipped","result":"PASS","time":6.77792E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated","result":"PASS","time":0.018002659,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndGenericPrimaryPortNameConfiguredShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndGenericPrimaryPortNameConfiguredShouldWork","result":"PASS","time":0.002057662,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientConfigClientBootstrapConfigurationTests.onWhenRequested":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientConfigClientBootstrapConfigurationTests.onWhenRequested","result":"PASS","time":0.228250925,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork","result":"PASS","time":0.252747733,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithoutReadyAddressesShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithoutReadyAddressesShouldWork","result":"PASS","time":0.012398369,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttps":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttps","result":"PASS","time":0.06056429,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutAnyConfigurationShouldPickTheFirstPort":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutAnyConfigurationShouldPickTheFirstPort","result":"PASS","time":0.001234183,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedShouldFallBackToHttpsPort":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedShouldFallBackToHttpsPort","result":"PASS","time":9.71855E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork","result":"PASS","time":0.003679418,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated","result":"PASS","time":0.004227243,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork","result":"PASS","time":0.001028274,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork","result":"PASS","time":0.008178425,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithNotReadyAddressesIncludedShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithNotReadyAddressesIncludedShouldWork","result":"PASS","time":0.001171223,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryWithServiceLabels":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryWithServiceLabels","result":"PASS","time":9.63413E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork","result":"PASS","time":0.003024785,"stackTrace":[]}}}