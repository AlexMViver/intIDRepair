<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="2.919" tests="34" errors="0" skipped="0" failures="0">
  <properties>
    <property name="sun.desktop" value="gnome"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="sun.cpu.isalist" value=""/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/target/test-classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/target/classes:/home/alex/.m2/repository/org/apache/ftpserver/ftpserver-core/1.1.1/ftpserver-core-1.1.1.jar:/home/alex/.m2/repository/org/apache/ftpserver/ftplet-api/1.1.1/ftplet-api-1.1.1.jar:/home/alex/.m2/repository/org/slf4j/slf4j-api/1.7.32/slf4j-api-1.7.32.jar:/home/alex/.m2/repository/org/apache/mina/mina-core/2.0.16/mina-core-2.0.16.jar:/home/alex/Repositories/nifi/nifi-api/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-expression-language/target/classes:/home/alex/.m2/repository/org/antlr/antlr-runtime/3.5.2/antlr-runtime-3.5.2.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-parameter/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-uuid5/target/classes:/home/alex/.m2/repository/org/apache/commons/commons-text/1.8/commons-text-1.8.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-extension-utils/nifi-processor-utils/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-security-socket-ssl/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-extension-utils/nifi-event-transport/target/classes:/home/alex/.m2/repository/io/netty/netty-handler/4.1.69.Final/netty-handler-4.1.69.Final.jar:/home/alex/.m2/repository/io/netty/netty-common/4.1.69.Final/netty-common-4.1.69.Final.jar:/home/alex/.m2/repository/io/netty/netty-resolver/4.1.69.Final/netty-resolver-4.1.69.Final.jar:/home/alex/.m2/repository/io/netty/netty-transport/4.1.69.Final/netty-transport-4.1.69.Final.jar:/home/alex/.m2/repository/io/netty/netty-codec/4.1.69.Final/netty-codec-4.1.69.Final.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-extension-utils/nifi-syslog-utils/target/classes:/home/alex/.m2/repository/com/github/palindromicity/simple-syslog-5424/0.0.16/simple-syslog-5424-0.0.16.jar:/home/alex/.m2/repository/org/antlr/antlr4-runtime/4.7.2/antlr4-runtime-4.7.2.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-utils/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-record-path/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-properties/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-property-utils/target/classes:/home/alex/.m2/repository/com/github/ben-manes/caffeine/caffeine/2.8.1/caffeine-2.8.1.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-ssl-context-service-api/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-security-utils-api/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-lookup-service-api/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-flowfile-packager/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-distributed-cache-client-service-api/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-http-context-map-api/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-service-api/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-proxy-configuration-api/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-record/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-sink-api/target/classes:/home/alex/.m2/repository/commons-io/commons-io/2.10.0/commons-io-2.10.0.jar:/home/alex/.m2/repository/javax/ws/rs/javax.ws.rs-api/2.1/javax.ws.rs-api-2.1.jar:/home/alex/.m2/repository/commons-net/commons-net/3.6/commons-net-3.6.jar:/home/alex/.m2/repository/org/apache/commons/commons-compress/1.21/commons-compress-1.21.jar:/home/alex/.m2/repository/org/apache/commons/commons-lang3/3.9/commons-lang3-3.9.jar:/home/alex/.m2/repository/org/bouncycastle/bcprov-jdk15on/1.69/bcprov-jdk15on-1.69.jar:/home/alex/.m2/repository/org/bouncycastle/bcpg-jdk15on/1.69/bcpg-jdk15on-1.69.jar:/home/alex/.m2/repository/org/bouncycastle/bcpkix-jdk15on/1.69/bcpkix-jdk15on-1.69.jar:/home/alex/.m2/repository/org/bouncycastle/bcutil-jdk15on/1.69/bcutil-jdk15on-1.69.jar:/home/alex/.m2/repository/commons-codec/commons-codec/1.14/commons-codec-1.14.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-security-utils/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-security-kms/target/classes:/home/alex/.m2/repository/org/apache/commons/commons-configuration2/2.7/commons-configuration2-2.7.jar:/home/alex/.m2/repository/com/hierynomus/sshj/0.32.0/sshj-0.32.0.jar:/home/alex/.m2/repository/com/jcraft/jzlib/1.1.3/jzlib-1.1.3.jar:/home/alex/.m2/repository/com/hierynomus/asn-one/0.6.0/asn-one-0.6.0.jar:/home/alex/.m2/repository/net/i2p/crypto/eddsa/0.3.0/eddsa-0.3.0.jar:/home/alex/.m2/repository/org/eclipse/jetty/jetty-server/9.4.44.v20210927/jetty-server-9.4.44.v20210927.jar:/home/alex/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/home/alex/.m2/repository/org/eclipse/jetty/jetty-http/9.4.44.v20210927/jetty-http-9.4.44.v20210927.jar:/home/alex/.m2/repository/org/eclipse/jetty/jetty-util/9.4.44.v20210927/jetty-util-9.4.44.v20210927.jar:/home/alex/.m2/repository/org/eclipse/jetty/jetty-io/9.4.44.v20210927/jetty-io-9.4.44.v20210927.jar:/home/alex/.m2/repository/org/eclipse/jetty/jetty-servlet/9.4.44.v20210927/jetty-servlet-9.4.44.v20210927.jar:/home/alex/.m2/repository/org/eclipse/jetty/jetty-security/9.4.44.v20210927/jetty-security-9.4.44.v20210927.jar:/home/alex/.m2/repository/org/eclipse/jetty/jetty-util-ajax/9.4.44.v20210927/jetty-util-ajax-9.4.44.v20210927.jar:/home/alex/.m2/repository/org/apache/httpcomponents/httpclient/4.5.5/httpclient-4.5.5.jar:/home/alex/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/alex/.m2/repository/org/apache/httpcomponents/httpcore/4.4.9/httpcore-4.4.9.jar:/home/alex/.m2/repository/jakarta/activation/jakarta.activation-api/2.0.1/jakarta.activation-api-2.0.1.jar:/home/alex/.m2/repository/com/sun/activation/jakarta.activation/2.0.1/jakarta.activation-2.0.1.jar:/home/alex/.m2/repository/jakarta/mail/jakarta.mail-api/2.0.1/jakarta.mail-api-2.0.1.jar:/home/alex/.m2/repository/com/sun/mail/jakarta.mail/2.0.1/jakarta.mail-2.0.1.jar:/home/alex/.m2/repository/com/github/jponge/lzma-java/1.3/lzma-java-1.3.jar:/home/alex/.m2/repository/org/tukaani/xz/1.8/xz-1.8.jar:/home/alex/.m2/repository/net/sf/saxon/Saxon-HE/10.6/Saxon-HE-10.6.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-socket-utils/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-logging-utils/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-load-distribution-service-api/target/classes:/home/alex/.m2/repository/javax/jms/javax.jms-api/2.0.1/javax.jms-api-2.0.1.jar:/home/alex/.m2/repository/org/apache/activemq/activemq-client/5.15.15/activemq-client-5.15.15.jar:/home/alex/.m2/repository/org/apache/geronimo/specs/geronimo-jms_1.1_spec/1.1.1/geronimo-jms_1.1_spec-1.1.1.jar:/home/alex/.m2/repository/org/fusesource/hawtbuf/hawtbuf/1.11/hawtbuf-1.11.jar:/home/alex/.m2/repository/org/apache/geronimo/specs/geronimo-j2ee-management_1.1_spec/1.0.1/geronimo-j2ee-management_1.1_spec-1.0.1.jar:/home/alex/.m2/repository/com/jayway/jsonpath/json-path/2.6.0/json-path-2.6.0.jar:/home/alex/.m2/repository/net/minidev/json-smart/2.4.7/json-smart-2.4.7.jar:/home/alex/.m2/repository/net/minidev/accessors-smart/2.4.7/accessors-smart-2.4.7.jar:/home/alex/.m2/repository/org/ow2/asm/asm/9.1/asm-9.1.jar:/home/alex/.m2/repository/org/apache/tika/tika-core/1.26/tika-core-1.26.jar:/home/alex/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.12.3/jackson-databind-2.12.3.jar:/home/alex/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.12.3/jackson-annotations-2.12.3.jar:/home/alex/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.12.3/jackson-core-2.12.3.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-extension-utils/nifi-record-utils/nifi-avro-record-utils/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-extension-utils/nifi-record-utils/nifi-standard-record-utils/target/classes:/home/alex/.m2/repository/org/apache/avro/avro/1.8.1/avro-1.8.1.jar:/home/alex/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/home/alex/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/home/alex/.m2/repository/com/thoughtworks/paranamer/paranamer/2.7/paranamer-2.7.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-dbcp-service-api/target/classes:/home/alex/.m2/repository/com/squareup/okhttp3/okhttp/4.9.2/okhttp-4.9.2.jar:/home/alex/.m2/repository/com/squareup/okio/okio/2.8.0/okio-2.8.0.jar:/home/alex/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-common/1.4.0/kotlin-stdlib-common-1.4.0.jar:/home/alex/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib/1.4.10/kotlin-stdlib-1.4.10.jar:/home/alex/.m2/repository/org/jetbrains/annotations/13.0/annotations-13.0.jar:/home/alex/.m2/repository/io/github/rburgst/okhttp-digest/2.5/okhttp-digest-2.5.jar:/home/alex/.m2/repository/at/favre/lib/bcrypt/0.9.0/bcrypt-0.9.0.jar:/home/alex/.m2/repository/at/favre/lib/bytes/1.3.0/bytes-1.3.0.jar:/home/alex/.m2/repository/com/google/guava/guava/28.0-jre/guava-28.0-jre.jar:/home/alex/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/home/alex/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/alex/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/alex/.m2/repository/org/checkerframework/checker-qual/2.8.1/checker-qual-2.8.1.jar:/home/alex/.m2/repository/com/google/errorprone/error_prone_annotations/2.3.2/error_prone_annotations-2.3.2.jar:/home/alex/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/home/alex/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.17/animal-sniffer-annotations-1.17.jar:/home/alex/Repositories/nifi/nifi-mock/target/classes:/home/alex/Repositories/nifi/nifi-framework-api/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core-api/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-nar-utils/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-client-dto/target/classes:/home/alex/.m2/repository/io/swagger/swagger-annotations/1.6.0/swagger-annotations-1.6.0.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-site-to-site-client/target/classes:/home/alex/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.4/httpasyncclient-4.1.4.jar:/home/alex/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.10/httpcore-nio-4.4.10.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-authorization/target/classes:/home/alex/Repositories/nifi/nifi-registry/nifi-registry-core/nifi-registry-data-model/target/classes:/home/alex/Repositories/nifi/nifi-registry/nifi-registry-core/nifi-registry-revision/nifi-registry-revision-entity-model/target/classes:/home/alex/Repositories/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/target/classes:/home/alex/Repositories/nifi/nifi-registry/nifi-registry-core/nifi-registry-security-utils/target/classes:/home/alex/.m2/repository/org/glassfish/jersey/core/jersey-client/2.33/jersey-client-2.33.jar:/home/alex/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/home/alex/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/home/alex/.m2/repository/org/glassfish/jersey/media/jersey-media-json-jackson/2.33/jersey-media-json-jackson-2.33.jar:/home/alex/.m2/repository/org/glassfish/jersey/ext/jersey-entity-filtering/2.33/jersey-entity-filtering-2.33.jar:/home/alex/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.33/jersey-hk2-2.33.jar:/home/alex/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/home/alex/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/home/alex/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/home/alex/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/home/alex/.m2/repository/org/javassist/javassist/3.25.0-GA/javassist-3.25.0-GA.jar:/home/alex/.m2/repository/org/glassfish/jersey/core/jersey-common/2.33/jersey-common-2.33.jar:/home/alex/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/alex/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/home/alex/.m2/repository/org/glassfish/jersey/media/jersey-media-multipart/2.33/jersey-media-multipart-2.33.jar:/home/alex/.m2/repository/org/jvnet/mimepull/mimepull/1.9.13/mimepull-1.9.13.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-data-provenance-utils/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-distributed-cache-services-bundle/nifi-distributed-cache-client-service/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-distributed-cache-services-bundle/nifi-distributed-cache-protocol/target/classes:/home/alex/.m2/repository/io/netty/netty-buffer/4.1.69.Final/netty-buffer-4.1.69.Final.jar:/home/alex/.m2/repository/com/google/http-client/google-http-client/1.28.0/google-http-client-1.28.0.jar:/home/alex/.m2/repository/io/opencensus/opencensus-api/0.18.0/opencensus-api-0.18.0.jar:/home/alex/.m2/repository/io/grpc/grpc-context/1.14.0/grpc-context-1.14.0.jar:/home/alex/.m2/repository/io/opencensus/opencensus-contrib-http-util/0.18.0/opencensus-contrib-http-util-0.18.0.jar:/home/alex/.m2/repository/org/apache/activemq/activemq-broker/5.15.14/activemq-broker-5.15.14.jar:/home/alex/.m2/repository/org/apache/activemq/activemq-openwire-legacy/5.15.14/activemq-openwire-legacy-5.15.14.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-ssl-context-bundle/nifi-ssl-context-service/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-standard-prioritizers/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-extension-utils/nifi-record-utils/nifi-mock-record-utils/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/target/classes:/home/alex/.m2/repository/org/apache/commons/commons-csv/1.8/commons-csv-1.8.jar:/home/alex/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-csv/2.12.3/jackson-dataformat-csv-2.12.3.jar:/home/alex/.m2/repository/net/java/dev/stax-utils/stax-utils/20070216/stax-utils-20070216.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-lookup-services-bundle/nifi-lookup-services/target/classes:/home/alex/.m2/repository/commons-beanutils/commons-beanutils/1.9.4/commons-beanutils-1.9.4.jar:/home/alex/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/home/alex/.m2/repository/com/maxmind/geoip2/geoip2/2.12.0/geoip2-2.12.0.jar:/home/alex/.m2/repository/com/maxmind/db/maxmind-db/1.2.2/maxmind-db-1.2.2.jar:/home/alex/.m2/repository/org/apache/derby/derby/10.14.2.0/derby-10.14.2.0.jar:/home/alex/.m2/repository/org/xerial/snappy/snappy-java/1.1.7.3/snappy-java-1.1.7.3.jar:/home/alex/.m2/repository/net/lingala/zip4j/zip4j/2.8.0/zip4j-2.8.0.jar:/home/alex/.m2/repository/com/h2database/h2/1.4.187/h2-1.4.187.jar:/home/alex/.m2/repository/org/mockftpserver/MockFtpServer/2.7.1/MockFtpServer-2.7.1.jar:/home/alex/.m2/repository/org/apache/sshd/sshd-core/1.7.0/sshd-core-1.7.0.jar:/home/alex/.m2/repository/com/bazaarvoice/jolt/jolt-core/0.1.1/jolt-core-0.1.1.jar:/home/alex/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/alex/.m2/repository/com/bazaarvoice/jolt/json-utils/0.1.1/json-utils-0.1.1.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-utils/target/classes:/home/alex/.m2/repository/net/sf/supercsv/super-csv/2.4.0/super-csv-2.4.0.jar:/home/alex/.m2/repository/com/fluenda/parcefone/2.1.0/parcefone-2.1.0.jar:/home/alex/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/alex/.m2/repository/javax/el/javax.el-api/3.0.0/javax.el-api-3.0.0.jar:/home/alex/.m2/repository/com/github/wnameless/json/json-flattener/0.12.0/json-flattener-0.12.0.jar:/home/alex/.m2/repository/com/github/wnameless/json/json-base/2.0.0/json-base-2.0.0.jar:/home/alex/.m2/repository/org/apache/bval/bval-jsr/1.1.2/bval-jsr-1.1.2.jar:/home/alex/.m2/repository/org/apache/bval/bval-core/1.1.2/bval-core-1.1.2.jar:/home/alex/.m2/repository/io/krakens/java-grok/0.1.9/java-grok-0.1.9.jar:/home/alex/.m2/repository/org/apache/calcite/calcite-core/1.27.0/calcite-core-1.27.0.jar:/home/alex/.m2/repository/org/apache/calcite/calcite-linq4j/1.27.0/calcite-linq4j-1.27.0.jar:/home/alex/.m2/repository/com/esri/geometry/esri-geometry-api/2.2.0/esri-geometry-api-2.2.0.jar:/home/alex/.m2/repository/org/apache/calcite/avatica/avatica-core/1.18.0/avatica-core-1.18.0.jar:/home/alex/.m2/repository/org/apache/calcite/avatica/avatica-metrics/1.18.0/avatica-metrics-1.18.0.jar:/home/alex/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/alex/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/home/alex/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.10.0/jackson-dataformat-yaml-2.10.0.jar:/home/alex/.m2/repository/org/yaml/snakeyaml/1.29/snakeyaml-1.29.jar:/home/alex/.m2/repository/com/google/uzaygezen/uzaygezen-core/0.2/uzaygezen-core-0.2.jar:/home/alex/.m2/repository/com/yahoo/datasketches/sketches-core/0.9.0/sketches-core-0.9.0.jar:/home/alex/.m2/repository/com/yahoo/datasketches/memory/0.9.0/memory-0.9.0.jar:/home/alex/.m2/repository/net/hydromatic/aggdesigner-algorithm/6.0/aggdesigner-algorithm-6.0.jar:/home/alex/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/home/alex/.m2/repository/org/apache/commons/commons-dbcp2/2.6.0/commons-dbcp2-2.6.0.jar:/home/alex/.m2/repository/org/apache/commons/commons-pool2/2.6.1/commons-pool2-2.6.1.jar:/home/alex/.m2/repository/org/codehaus/janino/commons-compiler/3.0.11/commons-compiler-3.0.11.jar:/home/alex/.m2/repository/org/codehaus/janino/janino/3.0.11/janino-3.0.11.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-schema-registry-service-api/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-extension-utils/nifi-database-utils/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-web-test-utils/target/classes:/home/alex/.m2/repository/com/github/stefanbirkner/fake-sftp-server-rule/2.0.1/fake-sftp-server-rule-2.0.1.jar:/home/alex/.m2/repository/com/github/marschall/memoryfilesystem/2.8.0/memoryfilesystem-2.8.0.jar:/home/alex/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/alex/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-extension-utils/nifi-database-test-utils/target/classes:/home/alex/.m2/repository/org/codehaus/groovy/groovy-json/2.5.14/groovy-json-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy/2.5.14/groovy-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-servlet/2.5.14/groovy-servlet-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-templates/2.5.14/groovy-templates-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-xml/2.5.14/groovy-xml-2.5.14.jar:/home/alex/.m2/repository/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar:/home/alex/.m2/repository/com/squareup/okhttp3/mockwebserver/4.9.2/mockwebserver-4.9.2.jar:/home/alex/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-jdk8/1.4.10/kotlin-stdlib-jdk8-1.4.10.jar:/home/alex/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-jdk7/1.4.10/kotlin-stdlib-jdk7-1.4.10.jar:/home/alex/.m2/repository/org/mockito/mockito-inline/3.12.4/mockito-inline-3.12.4.jar:/home/alex/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.7.2/junit-jupiter-api-5.7.2.jar:/home/alex/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/alex/.m2/repository/org/junit/platform/junit-platform-commons/1.7.2/junit-platform-commons-1.7.2.jar:/home/alex/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.7.2/junit-jupiter-engine-5.7.2.jar:/home/alex/.m2/repository/org/junit/platform/junit-platform-engine/1.7.2/junit-platform-engine-1.7.2.jar:/home/alex/.m2/repository/org/junit/vintage/junit-vintage-engine/5.7.2/junit-vintage-engine-5.7.2.jar:/home/alex/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.7.2/junit-jupiter-params-5.7.2.jar:/home/alex/.m2/repository/org/mockito/mockito-core/3.11.2/mockito-core-3.11.2.jar:/home/alex/.m2/repository/net/bytebuddy/byte-buddy/1.11.3/byte-buddy-1.11.3.jar:/home/alex/.m2/repository/net/bytebuddy/byte-buddy-agent/1.11.3/byte-buddy-agent-1.11.3.jar:/home/alex/.m2/repository/org/objenesis/objenesis/3.2/objenesis-3.2.jar:/home/alex/.m2/repository/org/mockito/mockito-junit-jupiter/3.11.2/mockito-junit-jupiter-3.11.2.jar:/home/alex/.m2/repository/org/slf4j/slf4j-simple/1.7.32/slf4j-simple-1.7.32.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-test/2.5.14/groovy-test-2.5.14.jar:"/>
    <property name="org.slf4j.simpleLogger.log.nifi.processors.standard.TestExecuteSQLRecord" value="debug"/>
    <property name="java.vm.vendor" value="Private Build"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value="Europe/Lisbon"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="os.name" value="Linux"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"/>
    <property name="sun.java.command" value="/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/target/surefire/surefirebooter5765390859711556220.jar /home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/target/surefire 2024-05-02T03-00-27_868-jvmRun1 surefire9208373730939602304tmp surefire_6996902428243563721tmp"/>
    <property name="org.slf4j.simpleLogger.log.nifi.io.nio" value="debug"/>
    <property name="surefire.test.class.path" value="/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/target/test-classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/target/classes:/home/alex/.m2/repository/org/apache/ftpserver/ftpserver-core/1.1.1/ftpserver-core-1.1.1.jar:/home/alex/.m2/repository/org/apache/ftpserver/ftplet-api/1.1.1/ftplet-api-1.1.1.jar:/home/alex/.m2/repository/org/slf4j/slf4j-api/1.7.32/slf4j-api-1.7.32.jar:/home/alex/.m2/repository/org/apache/mina/mina-core/2.0.16/mina-core-2.0.16.jar:/home/alex/Repositories/nifi/nifi-api/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-expression-language/target/classes:/home/alex/.m2/repository/org/antlr/antlr-runtime/3.5.2/antlr-runtime-3.5.2.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-parameter/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-uuid5/target/classes:/home/alex/.m2/repository/org/apache/commons/commons-text/1.8/commons-text-1.8.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-extension-utils/nifi-processor-utils/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-security-socket-ssl/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-extension-utils/nifi-event-transport/target/classes:/home/alex/.m2/repository/io/netty/netty-handler/4.1.69.Final/netty-handler-4.1.69.Final.jar:/home/alex/.m2/repository/io/netty/netty-common/4.1.69.Final/netty-common-4.1.69.Final.jar:/home/alex/.m2/repository/io/netty/netty-resolver/4.1.69.Final/netty-resolver-4.1.69.Final.jar:/home/alex/.m2/repository/io/netty/netty-transport/4.1.69.Final/netty-transport-4.1.69.Final.jar:/home/alex/.m2/repository/io/netty/netty-codec/4.1.69.Final/netty-codec-4.1.69.Final.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-extension-utils/nifi-syslog-utils/target/classes:/home/alex/.m2/repository/com/github/palindromicity/simple-syslog-5424/0.0.16/simple-syslog-5424-0.0.16.jar:/home/alex/.m2/repository/org/antlr/antlr4-runtime/4.7.2/antlr4-runtime-4.7.2.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-utils/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-record-path/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-properties/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-property-utils/target/classes:/home/alex/.m2/repository/com/github/ben-manes/caffeine/caffeine/2.8.1/caffeine-2.8.1.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-ssl-context-service-api/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-security-utils-api/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-lookup-service-api/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-flowfile-packager/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-distributed-cache-client-service-api/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-http-context-map-api/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-service-api/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-proxy-configuration-api/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-record/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-sink-api/target/classes:/home/alex/.m2/repository/commons-io/commons-io/2.10.0/commons-io-2.10.0.jar:/home/alex/.m2/repository/javax/ws/rs/javax.ws.rs-api/2.1/javax.ws.rs-api-2.1.jar:/home/alex/.m2/repository/commons-net/commons-net/3.6/commons-net-3.6.jar:/home/alex/.m2/repository/org/apache/commons/commons-compress/1.21/commons-compress-1.21.jar:/home/alex/.m2/repository/org/apache/commons/commons-lang3/3.9/commons-lang3-3.9.jar:/home/alex/.m2/repository/org/bouncycastle/bcprov-jdk15on/1.69/bcprov-jdk15on-1.69.jar:/home/alex/.m2/repository/org/bouncycastle/bcpg-jdk15on/1.69/bcpg-jdk15on-1.69.jar:/home/alex/.m2/repository/org/bouncycastle/bcpkix-jdk15on/1.69/bcpkix-jdk15on-1.69.jar:/home/alex/.m2/repository/org/bouncycastle/bcutil-jdk15on/1.69/bcutil-jdk15on-1.69.jar:/home/alex/.m2/repository/commons-codec/commons-codec/1.14/commons-codec-1.14.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-security-utils/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-security-kms/target/classes:/home/alex/.m2/repository/org/apache/commons/commons-configuration2/2.7/commons-configuration2-2.7.jar:/home/alex/.m2/repository/com/hierynomus/sshj/0.32.0/sshj-0.32.0.jar:/home/alex/.m2/repository/com/jcraft/jzlib/1.1.3/jzlib-1.1.3.jar:/home/alex/.m2/repository/com/hierynomus/asn-one/0.6.0/asn-one-0.6.0.jar:/home/alex/.m2/repository/net/i2p/crypto/eddsa/0.3.0/eddsa-0.3.0.jar:/home/alex/.m2/repository/org/eclipse/jetty/jetty-server/9.4.44.v20210927/jetty-server-9.4.44.v20210927.jar:/home/alex/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/home/alex/.m2/repository/org/eclipse/jetty/jetty-http/9.4.44.v20210927/jetty-http-9.4.44.v20210927.jar:/home/alex/.m2/repository/org/eclipse/jetty/jetty-util/9.4.44.v20210927/jetty-util-9.4.44.v20210927.jar:/home/alex/.m2/repository/org/eclipse/jetty/jetty-io/9.4.44.v20210927/jetty-io-9.4.44.v20210927.jar:/home/alex/.m2/repository/org/eclipse/jetty/jetty-servlet/9.4.44.v20210927/jetty-servlet-9.4.44.v20210927.jar:/home/alex/.m2/repository/org/eclipse/jetty/jetty-security/9.4.44.v20210927/jetty-security-9.4.44.v20210927.jar:/home/alex/.m2/repository/org/eclipse/jetty/jetty-util-ajax/9.4.44.v20210927/jetty-util-ajax-9.4.44.v20210927.jar:/home/alex/.m2/repository/org/apache/httpcomponents/httpclient/4.5.5/httpclient-4.5.5.jar:/home/alex/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/alex/.m2/repository/org/apache/httpcomponents/httpcore/4.4.9/httpcore-4.4.9.jar:/home/alex/.m2/repository/jakarta/activation/jakarta.activation-api/2.0.1/jakarta.activation-api-2.0.1.jar:/home/alex/.m2/repository/com/sun/activation/jakarta.activation/2.0.1/jakarta.activation-2.0.1.jar:/home/alex/.m2/repository/jakarta/mail/jakarta.mail-api/2.0.1/jakarta.mail-api-2.0.1.jar:/home/alex/.m2/repository/com/sun/mail/jakarta.mail/2.0.1/jakarta.mail-2.0.1.jar:/home/alex/.m2/repository/com/github/jponge/lzma-java/1.3/lzma-java-1.3.jar:/home/alex/.m2/repository/org/tukaani/xz/1.8/xz-1.8.jar:/home/alex/.m2/repository/net/sf/saxon/Saxon-HE/10.6/Saxon-HE-10.6.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-socket-utils/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-logging-utils/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-load-distribution-service-api/target/classes:/home/alex/.m2/repository/javax/jms/javax.jms-api/2.0.1/javax.jms-api-2.0.1.jar:/home/alex/.m2/repository/org/apache/activemq/activemq-client/5.15.15/activemq-client-5.15.15.jar:/home/alex/.m2/repository/org/apache/geronimo/specs/geronimo-jms_1.1_spec/1.1.1/geronimo-jms_1.1_spec-1.1.1.jar:/home/alex/.m2/repository/org/fusesource/hawtbuf/hawtbuf/1.11/hawtbuf-1.11.jar:/home/alex/.m2/repository/org/apache/geronimo/specs/geronimo-j2ee-management_1.1_spec/1.0.1/geronimo-j2ee-management_1.1_spec-1.0.1.jar:/home/alex/.m2/repository/com/jayway/jsonpath/json-path/2.6.0/json-path-2.6.0.jar:/home/alex/.m2/repository/net/minidev/json-smart/2.4.7/json-smart-2.4.7.jar:/home/alex/.m2/repository/net/minidev/accessors-smart/2.4.7/accessors-smart-2.4.7.jar:/home/alex/.m2/repository/org/ow2/asm/asm/9.1/asm-9.1.jar:/home/alex/.m2/repository/org/apache/tika/tika-core/1.26/tika-core-1.26.jar:/home/alex/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.12.3/jackson-databind-2.12.3.jar:/home/alex/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.12.3/jackson-annotations-2.12.3.jar:/home/alex/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.12.3/jackson-core-2.12.3.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-extension-utils/nifi-record-utils/nifi-avro-record-utils/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-extension-utils/nifi-record-utils/nifi-standard-record-utils/target/classes:/home/alex/.m2/repository/org/apache/avro/avro/1.8.1/avro-1.8.1.jar:/home/alex/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/home/alex/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/home/alex/.m2/repository/com/thoughtworks/paranamer/paranamer/2.7/paranamer-2.7.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-dbcp-service-api/target/classes:/home/alex/.m2/repository/com/squareup/okhttp3/okhttp/4.9.2/okhttp-4.9.2.jar:/home/alex/.m2/repository/com/squareup/okio/okio/2.8.0/okio-2.8.0.jar:/home/alex/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-common/1.4.0/kotlin-stdlib-common-1.4.0.jar:/home/alex/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib/1.4.10/kotlin-stdlib-1.4.10.jar:/home/alex/.m2/repository/org/jetbrains/annotations/13.0/annotations-13.0.jar:/home/alex/.m2/repository/io/github/rburgst/okhttp-digest/2.5/okhttp-digest-2.5.jar:/home/alex/.m2/repository/at/favre/lib/bcrypt/0.9.0/bcrypt-0.9.0.jar:/home/alex/.m2/repository/at/favre/lib/bytes/1.3.0/bytes-1.3.0.jar:/home/alex/.m2/repository/com/google/guava/guava/28.0-jre/guava-28.0-jre.jar:/home/alex/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/home/alex/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/alex/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/alex/.m2/repository/org/checkerframework/checker-qual/2.8.1/checker-qual-2.8.1.jar:/home/alex/.m2/repository/com/google/errorprone/error_prone_annotations/2.3.2/error_prone_annotations-2.3.2.jar:/home/alex/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/home/alex/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.17/animal-sniffer-annotations-1.17.jar:/home/alex/Repositories/nifi/nifi-mock/target/classes:/home/alex/Repositories/nifi/nifi-framework-api/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core-api/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-nar-utils/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-client-dto/target/classes:/home/alex/.m2/repository/io/swagger/swagger-annotations/1.6.0/swagger-annotations-1.6.0.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-site-to-site-client/target/classes:/home/alex/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.4/httpasyncclient-4.1.4.jar:/home/alex/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.10/httpcore-nio-4.4.10.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-authorization/target/classes:/home/alex/Repositories/nifi/nifi-registry/nifi-registry-core/nifi-registry-data-model/target/classes:/home/alex/Repositories/nifi/nifi-registry/nifi-registry-core/nifi-registry-revision/nifi-registry-revision-entity-model/target/classes:/home/alex/Repositories/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/target/classes:/home/alex/Repositories/nifi/nifi-registry/nifi-registry-core/nifi-registry-security-utils/target/classes:/home/alex/.m2/repository/org/glassfish/jersey/core/jersey-client/2.33/jersey-client-2.33.jar:/home/alex/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/home/alex/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/home/alex/.m2/repository/org/glassfish/jersey/media/jersey-media-json-jackson/2.33/jersey-media-json-jackson-2.33.jar:/home/alex/.m2/repository/org/glassfish/jersey/ext/jersey-entity-filtering/2.33/jersey-entity-filtering-2.33.jar:/home/alex/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.33/jersey-hk2-2.33.jar:/home/alex/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/home/alex/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/home/alex/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/home/alex/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/home/alex/.m2/repository/org/javassist/javassist/3.25.0-GA/javassist-3.25.0-GA.jar:/home/alex/.m2/repository/org/glassfish/jersey/core/jersey-common/2.33/jersey-common-2.33.jar:/home/alex/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/alex/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/home/alex/.m2/repository/org/glassfish/jersey/media/jersey-media-multipart/2.33/jersey-media-multipart-2.33.jar:/home/alex/.m2/repository/org/jvnet/mimepull/mimepull/1.9.13/mimepull-1.9.13.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-data-provenance-utils/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-distributed-cache-services-bundle/nifi-distributed-cache-client-service/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-distributed-cache-services-bundle/nifi-distributed-cache-protocol/target/classes:/home/alex/.m2/repository/io/netty/netty-buffer/4.1.69.Final/netty-buffer-4.1.69.Final.jar:/home/alex/.m2/repository/com/google/http-client/google-http-client/1.28.0/google-http-client-1.28.0.jar:/home/alex/.m2/repository/io/opencensus/opencensus-api/0.18.0/opencensus-api-0.18.0.jar:/home/alex/.m2/repository/io/grpc/grpc-context/1.14.0/grpc-context-1.14.0.jar:/home/alex/.m2/repository/io/opencensus/opencensus-contrib-http-util/0.18.0/opencensus-contrib-http-util-0.18.0.jar:/home/alex/.m2/repository/org/apache/activemq/activemq-broker/5.15.14/activemq-broker-5.15.14.jar:/home/alex/.m2/repository/org/apache/activemq/activemq-openwire-legacy/5.15.14/activemq-openwire-legacy-5.15.14.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-ssl-context-bundle/nifi-ssl-context-service/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-standard-prioritizers/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-extension-utils/nifi-record-utils/nifi-mock-record-utils/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-record-serialization-services-bundle/nifi-record-serialization-services/target/classes:/home/alex/.m2/repository/org/apache/commons/commons-csv/1.8/commons-csv-1.8.jar:/home/alex/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-csv/2.12.3/jackson-dataformat-csv-2.12.3.jar:/home/alex/.m2/repository/net/java/dev/stax-utils/stax-utils/20070216/stax-utils-20070216.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-lookup-services-bundle/nifi-lookup-services/target/classes:/home/alex/.m2/repository/commons-beanutils/commons-beanutils/1.9.4/commons-beanutils-1.9.4.jar:/home/alex/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/home/alex/.m2/repository/com/maxmind/geoip2/geoip2/2.12.0/geoip2-2.12.0.jar:/home/alex/.m2/repository/com/maxmind/db/maxmind-db/1.2.2/maxmind-db-1.2.2.jar:/home/alex/.m2/repository/org/apache/derby/derby/10.14.2.0/derby-10.14.2.0.jar:/home/alex/.m2/repository/org/xerial/snappy/snappy-java/1.1.7.3/snappy-java-1.1.7.3.jar:/home/alex/.m2/repository/net/lingala/zip4j/zip4j/2.8.0/zip4j-2.8.0.jar:/home/alex/.m2/repository/com/h2database/h2/1.4.187/h2-1.4.187.jar:/home/alex/.m2/repository/org/mockftpserver/MockFtpServer/2.7.1/MockFtpServer-2.7.1.jar:/home/alex/.m2/repository/org/apache/sshd/sshd-core/1.7.0/sshd-core-1.7.0.jar:/home/alex/.m2/repository/com/bazaarvoice/jolt/jolt-core/0.1.1/jolt-core-0.1.1.jar:/home/alex/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/alex/.m2/repository/com/bazaarvoice/jolt/json-utils/0.1.1/json-utils-0.1.1.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-utils/target/classes:/home/alex/.m2/repository/net/sf/supercsv/super-csv/2.4.0/super-csv-2.4.0.jar:/home/alex/.m2/repository/com/fluenda/parcefone/2.1.0/parcefone-2.1.0.jar:/home/alex/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/alex/.m2/repository/javax/el/javax.el-api/3.0.0/javax.el-api-3.0.0.jar:/home/alex/.m2/repository/com/github/wnameless/json/json-flattener/0.12.0/json-flattener-0.12.0.jar:/home/alex/.m2/repository/com/github/wnameless/json/json-base/2.0.0/json-base-2.0.0.jar:/home/alex/.m2/repository/org/apache/bval/bval-jsr/1.1.2/bval-jsr-1.1.2.jar:/home/alex/.m2/repository/org/apache/bval/bval-core/1.1.2/bval-core-1.1.2.jar:/home/alex/.m2/repository/io/krakens/java-grok/0.1.9/java-grok-0.1.9.jar:/home/alex/.m2/repository/org/apache/calcite/calcite-core/1.27.0/calcite-core-1.27.0.jar:/home/alex/.m2/repository/org/apache/calcite/calcite-linq4j/1.27.0/calcite-linq4j-1.27.0.jar:/home/alex/.m2/repository/com/esri/geometry/esri-geometry-api/2.2.0/esri-geometry-api-2.2.0.jar:/home/alex/.m2/repository/org/apache/calcite/avatica/avatica-core/1.18.0/avatica-core-1.18.0.jar:/home/alex/.m2/repository/org/apache/calcite/avatica/avatica-metrics/1.18.0/avatica-metrics-1.18.0.jar:/home/alex/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/alex/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/home/alex/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.10.0/jackson-dataformat-yaml-2.10.0.jar:/home/alex/.m2/repository/org/yaml/snakeyaml/1.29/snakeyaml-1.29.jar:/home/alex/.m2/repository/com/google/uzaygezen/uzaygezen-core/0.2/uzaygezen-core-0.2.jar:/home/alex/.m2/repository/com/yahoo/datasketches/sketches-core/0.9.0/sketches-core-0.9.0.jar:/home/alex/.m2/repository/com/yahoo/datasketches/memory/0.9.0/memory-0.9.0.jar:/home/alex/.m2/repository/net/hydromatic/aggdesigner-algorithm/6.0/aggdesigner-algorithm-6.0.jar:/home/alex/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/home/alex/.m2/repository/org/apache/commons/commons-dbcp2/2.6.0/commons-dbcp2-2.6.0.jar:/home/alex/.m2/repository/org/apache/commons/commons-pool2/2.6.1/commons-pool2-2.6.1.jar:/home/alex/.m2/repository/org/codehaus/janino/commons-compiler/3.0.11/commons-compiler-3.0.11.jar:/home/alex/.m2/repository/org/codehaus/janino/janino/3.0.11/janino-3.0.11.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-services/nifi-schema-registry-service-api/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-extension-utils/nifi-database-utils/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-web-test-utils/target/classes:/home/alex/.m2/repository/com/github/stefanbirkner/fake-sftp-server-rule/2.0.1/fake-sftp-server-rule-2.0.1.jar:/home/alex/.m2/repository/com/github/marschall/memoryfilesystem/2.8.0/memoryfilesystem-2.8.0.jar:/home/alex/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/alex/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-extension-utils/nifi-database-test-utils/target/classes:/home/alex/.m2/repository/org/codehaus/groovy/groovy-json/2.5.14/groovy-json-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy/2.5.14/groovy-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-servlet/2.5.14/groovy-servlet-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-templates/2.5.14/groovy-templates-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-xml/2.5.14/groovy-xml-2.5.14.jar:/home/alex/.m2/repository/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar:/home/alex/.m2/repository/com/squareup/okhttp3/mockwebserver/4.9.2/mockwebserver-4.9.2.jar:/home/alex/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-jdk8/1.4.10/kotlin-stdlib-jdk8-1.4.10.jar:/home/alex/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-jdk7/1.4.10/kotlin-stdlib-jdk7-1.4.10.jar:/home/alex/.m2/repository/org/mockito/mockito-inline/3.12.4/mockito-inline-3.12.4.jar:/home/alex/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.7.2/junit-jupiter-api-5.7.2.jar:/home/alex/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/alex/.m2/repository/org/junit/platform/junit-platform-commons/1.7.2/junit-platform-commons-1.7.2.jar:/home/alex/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.7.2/junit-jupiter-engine-5.7.2.jar:/home/alex/.m2/repository/org/junit/platform/junit-platform-engine/1.7.2/junit-platform-engine-1.7.2.jar:/home/alex/.m2/repository/org/junit/vintage/junit-vintage-engine/5.7.2/junit-vintage-engine-5.7.2.jar:/home/alex/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.7.2/junit-jupiter-params-5.7.2.jar:/home/alex/.m2/repository/org/mockito/mockito-core/3.11.2/mockito-core-3.11.2.jar:/home/alex/.m2/repository/net/bytebuddy/byte-buddy/1.11.3/byte-buddy-1.11.3.jar:/home/alex/.m2/repository/net/bytebuddy/byte-buddy-agent/1.11.3/byte-buddy-agent-1.11.3.jar:/home/alex/.m2/repository/org/objenesis/objenesis/3.2/objenesis-3.2.jar:/home/alex/.m2/repository/org/mockito/mockito-junit-jupiter/3.11.2/mockito-junit-jupiter-3.11.2.jar:/home/alex/.m2/repository/org/slf4j/slf4j-simple/1.7.32/slf4j-simple-1.7.32.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-test/2.5.14/groovy-test-2.5.14.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/alex"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-openjdk-amd64/jre"/>
    <property name="basedir" value="/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors"/>
    <property name="file.separator" value="/"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="derby.stream.error.file" value="target/derby.log"/>
    <property name="org.slf4j.simpleLogger.log.org.apache.nifi" value="TRACE"/>
    <property name="javax.xml.xpath.XPathFactory:http://saxon.sf.net/jaxp/xpath/om" value="net.sf.saxon.xpath.XPathFactoryImpl"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="org.slf4j.simpleLogger.log.org.apache.nifi.processors.standard.SQLTransform" value="debug"/>
    <property name="java.awt.headless" value="true"/>
    <property name="org.slf4j.simpleLogger.log.nifi.processors.standard.ExecuteSQLRecord" value="debug"/>
    <property name="org.slf4j.simpleLogger.showDateTime" value="true"/>
    <property name="surefire.real.class.path" value="/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/target/surefire/surefirebooter5765390859711556220.jar"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="org.slf4j.simpleLogger.log.nifi.processors.standard.TestExecuteSQL" value="debug"/>
    <property name="java.runtime.version" value="1.8.0_402-8u402-ga-2ubuntu1~22.04-b06"/>
    <property name="java.net.preferIPv4Stack" value="true"/>
    <property name="user.name" value="alex"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="6.5.0-28-generic"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="org.slf4j.simpleLogger.log.nifi.processors.standard.DistributeLoad" value="debug"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="org.slf4j.simpleLogger.log.org.apache.nifi.processors.standard" value="DEBUG"/>
    <property name="org.slf4j.simpleLogger.log.nifi.processors.standard.ExecuteSQL" value="debug"/>
    <property name="sun.nio.ch.bugLevel" value=""/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="/home/alex/.m2/repository"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="java.version" value="1.8.0_402"/>
    <property name="user.dir" value="/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors"/>
    <property name="org.slf4j.simpleLogger.log.nifi.processors.standard.TestDetectDuplicate" value="debug"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="org.slf4j.simpleLogger.defaultLogLevel" value="info"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Private Build"/>
    <property name="java.vm.version" value="25.402-b06"/>
    <property name="org.slf4j.simpleLogger.log.nifi.processors.standard.DetectDuplicate" value="debug"/>
    <property name="java.specification.maintenance.version" value="5"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="52.0"/>
  </properties>
  <testcase name="testLongVarchar" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.635">
    <system-err><![CDATA[[pool-2094-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=ffa0d427-8e43-4e48-bc8c-0354d6b13d7d] Fetched Table Schema TableSchema[columns=[Column[name=ID, dataType=4, required=true, columnSize=10], Column[name=NAME, dataType=-1, required=false, columnSize=32700]]] for table name TEMP
]]></system-err>
  </testcase>
  <testcase name="testUpdateNoPrimaryKeys" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.033">
    <system-err><![CDATA[[pool-2095-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=d8260fdf-8845-4ab4-81cd-bc2e8ed714e2] Fetched Table Schema TableSchema[columns=[Column[name=ID, dataType=4, required=false, columnSize=10], Column[name=NAME, dataType=12, required=false, columnSize=100], Column[name=CODE, dataType=4, required=false, columnSize=10]]] for table name PERSONS
[pool-2095-thread-1] ERROR org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=d8260fdf-8845-4ab4-81cd-bc2e8ed714e2] Failed to put Records to database for FlowFile[0,96201618916945.mockFlowFile,0B]. Routing to failure.: java.sql.SQLIntegrityConstraintViolationException: Table 'PERSONS' not found or does not have a Primary Key and no Update Keys were specified
java.sql.SQLIntegrityConstraintViolationException: Table 'PERSONS' not found or does not have a Primary Key and no Update Keys were specified
	at org.apache.nifi.processors.standard.PutDatabaseRecord.getUpdateKeyColumnNames(PutDatabaseRecord.java:1341)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.generateUpdate(PutDatabaseRecord.java:1138)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.executeDML(PutDatabaseRecord.java:652)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.putToDatabase(PutDatabaseRecord.java:931)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.onTrigger(PutDatabaseRecord.java:489)
	at org.apache.nifi.processor.AbstractProcessor.onTrigger(AbstractProcessor.java:27)
	at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:284)
	at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:278)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
]]></system-err>
  </testcase>
  <testcase name="testGenerateTableName" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.028"/>
  <testcase name="testInvalidData" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.045">
    <system-err><![CDATA[[pool-2096-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=0d60aae5-a00f-41fe-b12f-88a124afe0d6] Fetched Table Schema TableSchema[columns=[Column[name=ID, dataType=4, required=true, columnSize=10], Column[name=NAME, dataType=12, required=false, columnSize=100], Column[name=CODE, dataType=4, required=false, columnSize=10], Column[name=DT, dataType=91, required=false, columnSize=10]]] for table name PERSONS
[pool-2096-thread-1] ERROR org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=0d60aae5-a00f-41fe-b12f-88a124afe0d6] Failed to put Records to database for FlowFile[0,96201692259395.mockFlowFile,0B]. Routing to failure.: org.apache.nifi.serialization.MalformedRecordException: Intentional Unit Test Exception because 1 records have been read
org.apache.nifi.serialization.MalformedRecordException: Intentional Unit Test Exception because 1 records have been read
	at org.apache.nifi.serialization.record.MockRecordParser$1.nextRecord(MockRecordParser.java:90)
	at org.apache.nifi.serialization.RecordReader.nextRecord(RecordReader.java:50)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.executeDML(PutDatabaseRecord.java:634)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.putToDatabase(PutDatabaseRecord.java:931)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.onTrigger(PutDatabaseRecord.java:489)
	at org.apache.nifi.processor.AbstractProcessor.onTrigger(AbstractProcessor.java:27)
	at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:284)
	at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:278)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
]]></system-err>
  </testcase>
  <testcase name="testGeneratePreparedStatementsFailUnmatchedField" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.017"/>
  <testcase name="testSqlStatementTypeNoValue" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.029">
    <system-err><![CDATA[[pool-2097-thread-1] ERROR org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=1f1ef25c-8e74-4f4d-8cad-597897d836e8] Failed to put Records to database for FlowFile[0,96201758470342.mockFlowFile,0B]. Routing to failure.: org.apache.nifi.serialization.MalformedRecordException: Record had no (or null) value for Field Containing SQL: sql, FlowFile FlowFile[0,96201758470342.mockFlowFile,0B]
org.apache.nifi.serialization.MalformedRecordException: Record had no (or null) value for Field Containing SQL: sql, FlowFile FlowFile[0,96201758470342.mockFlowFile,0B]
	at org.apache.nifi.processors.standard.PutDatabaseRecord.executeSQL(PutDatabaseRecord.java:570)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.putToDatabase(PutDatabaseRecord.java:928)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.onTrigger(PutDatabaseRecord.java:489)
	at org.apache.nifi.processor.AbstractProcessor.onTrigger(AbstractProcessor.java:27)
	at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:284)
	at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:278)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
]]></system-err>
  </testcase>
  <testcase name="testInsertWithBlobClob" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.103">
    <system-err><![CDATA[[pool-2098-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=20002ad0-0e50-4cab-9be1-95e1c5b06ea0] Fetched Table Schema TableSchema[columns=[Column[name=ID, dataType=4, required=true, columnSize=10], Column[name=NAME, dataType=2005, required=false, columnSize=2147483647], Column[name=CONTENT, dataType=2004, required=false, columnSize=2147483647], Column[name=CODE, dataType=4, required=false, columnSize=10]]] for table name PERSONS
]]></system-err>
  </testcase>
  <testcase name="testGeneratePreparedStatements" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.016">
    <system-err><![CDATA[[main] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=5765717e-e641-4e23-8b1e-b873dce2ccea] Did not map field 'non_existing' to any column in the database
Columns: id,name,code
[main] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=5765717e-e641-4e23-8b1e-b873dce2ccea] Did not map field 'non_existing' to any column in the database
Columns: id,name,code
[main] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=5765717e-e641-4e23-8b1e-b873dce2ccea] Did not map field 'non_existing' to any column in the database
Columns: id,name,code
]]></system-err>
  </testcase>
  <testcase name="testRecordPathOptions" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.048">
    <system-err><![CDATA[[pool-2099-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=f6e8091f-a5e6-436e-a8fb-36020a550a68] Fetched Table Schema TableSchema[columns=[Column[name=ID, dataType=4, required=false, columnSize=10], Column[name=NAME, dataType=12, required=false, columnSize=100], Column[name=CODE, dataType=4, required=false, columnSize=10]]] for table name PERSONS
[pool-2099-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=f6e8091f-a5e6-436e-a8fb-36020a550a68] Executing query DELETE FROM PERSONS WHERE (ID = ? OR (ID is null AND ? is null)) AND (NAME = ? OR (NAME is null AND ? is null)) AND (CODE = ? OR (CODE is null AND ? is null)) because Statement Type changed between Records for FlowFile[0,96201895789749.mockFlowFile,0B]; fieldIndexes: [0, 1, 2]; batch index: 1; batch size: 3
[pool-2099-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=f6e8091f-a5e6-436e-a8fb-36020a550a68] Executing query UPDATE PERSONS SET NAME = ?, CODE = ? WHERE ID = ? because Statement Type changed between Records for FlowFile[0,96201895789749.mockFlowFile,0B]; fieldIndexes: [1, 2, 0]; batch index: 2; batch size: 1
]]></system-err>
  </testcase>
  <testcase name="testInsertViaSqlStatementType" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.028"/>
  <testcase name="testInsertWithDifferentColumnOrdering" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.059">
    <system-err><![CDATA[[pool-2101-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=0d4a2ac7-35ed-4fe2-ba18-08ec44b1043b] Fetched Table Schema TableSchema[columns=[Column[name=ID, dataType=4, required=true, columnSize=10], Column[name=CODE, dataType=4, required=false, columnSize=10], Column[name=NAME, dataType=-1, required=false, columnSize=32700]]] for table name TEMP
]]></system-err>
  </testcase>
  <testcase name="testInsertNonRequiredColumns" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.05">
    <system-err><![CDATA[[pool-2102-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=8884d413-3551-44db-be4b-09f3e11b5d69] Fetched Table Schema TableSchema[columns=[Column[name=ID, dataType=4, required=true, columnSize=10], Column[name=NAME, dataType=12, required=false, columnSize=100], Column[name=CODE, dataType=4, required=false, columnSize=10], Column[name=DT, dataType=91, required=false, columnSize=10]]] for table name PERSONS
]]></system-err>
  </testcase>
  <testcase name="testSqlStatementTypeNoValueRollbackOnFailure" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.028">
    <system-err><![CDATA[[pool-2103-thread-1] ERROR org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=6d78e288-a2f9-4565-8e3b-547620f39b66] Failed to put Records to database for FlowFile[0,96202092564795.mockFlowFile,0B]. Routing to failure.: org.apache.nifi.serialization.MalformedRecordException: Record had no (or null) value for Field Containing SQL: sql, FlowFile FlowFile[0,96202092564795.mockFlowFile,0B]
org.apache.nifi.serialization.MalformedRecordException: Record had no (or null) value for Field Containing SQL: sql, FlowFile FlowFile[0,96202092564795.mockFlowFile,0B]
	at org.apache.nifi.processors.standard.PutDatabaseRecord.executeSQL(PutDatabaseRecord.java:570)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.putToDatabase(PutDatabaseRecord.java:928)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.onTrigger(PutDatabaseRecord.java:489)
	at org.apache.nifi.processor.AbstractProcessor.onTrigger(AbstractProcessor.java:27)
	at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:284)
	at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:278)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
]]></system-err>
  </testcase>
  <testcase name="testInsertMismatchedNotCompatibleDataTypes" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.05">
    <system-err><![CDATA[[pool-2104-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=a0a9bebc-f9dc-46a0-b563-75508d28ea2f] Fetched Table Schema TableSchema[columns=[Column[name=ID, dataType=4, required=true, columnSize=10], Column[name=NAME, dataType=12, required=false, columnSize=100], Column[name=CODE, dataType=4, required=false, columnSize=10], Column[name=DT, dataType=91, required=false, columnSize=10]]] for table name PERSONS
[pool-2104-thread-1] ERROR org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=a0a9bebc-f9dc-46a0-b563-75508d28ea2f] Failed to put Records to database for FlowFile[0,96202122078764.mockFlowFile,0B]. Routing to failure.: java.io.IOException: Unable to setObject() with value [1.0, 2.0] at index 4 of type 2003
java.io.IOException: Unable to setObject() with value [1.0, 2.0] at index 4 of type 2003
	at org.apache.nifi.processors.standard.PutDatabaseRecord.setParameter(PutDatabaseRecord.java:849)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.executeDML(PutDatabaseRecord.java:772)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.putToDatabase(PutDatabaseRecord.java:931)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.onTrigger(PutDatabaseRecord.java:489)
	at org.apache.nifi.processor.AbstractProcessor.onTrigger(AbstractProcessor.java:27)
	at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:284)
	at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:278)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.sql.SQLFeatureNotSupportedException: The data type 'ARRAY' is not supported.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.checkForSupportedDataType(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.setObject(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.setObject(Unknown Source)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.setParameter(PutDatabaseRecord.java:847)
	... 12 more
Caused by: ERROR 0A000: The data type 'ARRAY' is not supported.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source)
	... 20 more
]]></system-err>
  </testcase>
  <testcase name="testInsertWithBlobIntegerArraySource" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.037">
    <system-err><![CDATA[[pool-2105-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=fa030d21-65cc-4f89-baf0-fc2e3e04a2f6] Fetched Table Schema TableSchema[columns=[Column[name=ID, dataType=4, required=true, columnSize=10], Column[name=NAME, dataType=2005, required=false, columnSize=2147483647], Column[name=CONTENT, dataType=2004, required=false, columnSize=2147483647], Column[name=CODE, dataType=4, required=false, columnSize=10]]] for table name PERSONS
[pool-2105-thread-1] ERROR org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=fa030d21-65cc-4f89-baf0-fc2e3e04a2f6] Failed to put Records to database for FlowFile[0,96202163027702.mockFlowFile,0B]. Routing to failure.: java.io.IOException: Unable to setObject() with value [Ljava.lang.Integer;@b532b0 at index 4 of type 2003
java.io.IOException: Unable to setObject() with value [Ljava.lang.Integer;@b532b0 at index 4 of type 2003
	at org.apache.nifi.processors.standard.PutDatabaseRecord.setParameter(PutDatabaseRecord.java:849)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.executeDML(PutDatabaseRecord.java:772)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.putToDatabase(PutDatabaseRecord.java:931)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.onTrigger(PutDatabaseRecord.java:489)
	at org.apache.nifi.processor.AbstractProcessor.onTrigger(AbstractProcessor.java:27)
	at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:284)
	at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:278)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.sql.SQLFeatureNotSupportedException: The data type 'ARRAY' is not supported.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.checkForSupportedDataType(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.setObject(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.setObject(Unknown Source)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.setParameter(PutDatabaseRecord.java:847)
	... 12 more
Caused by: ERROR 0A000: The data type 'ARRAY' is not supported.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source)
	... 20 more
]]></system-err>
  </testcase>
  <testcase name="testInsertBatchUpdateExceptionRollbackOnFailure" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.054">
    <system-err><![CDATA[[pool-2106-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=58611953-7180-4256-ab6e-14a2d5016874] Fetched Table Schema TableSchema[columns=[Column[name=ID, dataType=4, required=true, columnSize=10], Column[name=NAME, dataType=12, required=false, columnSize=100], Column[name=CODE, dataType=4, required=false, columnSize=10], Column[name=DT, dataType=91, required=false, columnSize=10]]] for table name PERSONS
[pool-2106-thread-1] ERROR org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=58611953-7180-4256-ab6e-14a2d5016874] Failed to put Records to database for FlowFile[0,96202201099389.mockFlowFile,0B]. Routing to failure.: java.sql.BatchUpdateException: The check constraint 'CODE_RANGE' was violated while performing an INSERT or UPDATE on table '"APP"."PERSONS"'.
java.sql.BatchUpdateException: The check constraint 'CODE_RANGE' was violated while performing an INSERT or UPDATE on table '"APP"."PERSONS"'.
	at org.apache.derby.impl.jdbc.EmbedStatement.executeLargeBatch(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedStatement.executeBatch(Unknown Source)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.executeDML(PutDatabaseRecord.java:790)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.putToDatabase(PutDatabaseRecord.java:931)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.onTrigger(PutDatabaseRecord.java:489)
	at org.apache.nifi.processor.AbstractProcessor.onTrigger(AbstractProcessor.java:27)
	at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:284)
	at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:278)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: org.apache.derby.shared.common.error.DerbySQLIntegrityConstraintViolationException: The check constraint 'CODE_RANGE' was violated while performing an INSERT or UPDATE on table '"APP"."PERSONS"'.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeBatchElement(Unknown Source)
	... 14 more
Caused by: ERROR 23513: The check constraint 'CODE_RANGE' was violated while performing an INSERT or UPDATE on table '"APP"."PERSONS"'.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.iapi.types.SQLBoolean.throwExceptionIfFalse(Unknown Source)
	at org.apache.derby.exe.ac54f019dbx018fx370exb60bx00000cb603300.e1(Unknown Source)
	at org.apache.derby.impl.services.reflect.DirectCall.invoke(Unknown Source)
	at org.apache.derby.impl.sql.execute.InsertResultSet.evaluateCheckConstraints(Unknown Source)
	at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(Unknown Source)
	at org.apache.derby.impl.sql.execute.InsertResultSet.open(Unknown Source)
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Unknown Source)
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)
	... 16 more
]]></system-err>
  </testcase>
  <testcase name="testInsertMismatchedCompatibleDataTypes" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.044">
    <system-err><![CDATA[[pool-2107-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=5bb32157-7aa5-40e7-ace2-45c6d0e15d49] Fetched Table Schema TableSchema[columns=[Column[name=ID, dataType=4, required=true, columnSize=10], Column[name=NAME, dataType=12, required=false, columnSize=100], Column[name=CODE, dataType=4, required=false, columnSize=10], Column[name=DT, dataType=91, required=false, columnSize=10]]] for table name PERSONS
]]></system-err>
  </testcase>
  <testcase name="testInsertWithMaxBatchSize" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.703">
    <system-err><![CDATA[[pool-2108-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=39900be4-683b-437e-965a-15c1e691cb5a] Fetched Table Schema TableSchema[columns=[Column[name=ID, dataType=4, required=true, columnSize=10], Column[name=NAME, dataType=12, required=false, columnSize=100], Column[name=CODE, dataType=4, required=false, columnSize=10], Column[name=DT, dataType=91, required=false, columnSize=10]]] for table name PERSONS
[pool-2108-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=39900be4-683b-437e-965a-15c1e691cb5a] Executing query INSERT INTO PERSONS (ID, NAME, CODE) VALUES (?,?,?) because batch reached max size for FlowFile[0,96202306620162.mockFlowFile,0B]; fieldIndexes: [0, 1, 2]; batch index: 1; batch size: 5
[pool-2108-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=39900be4-683b-437e-965a-15c1e691cb5a] Executing query INSERT INTO PERSONS (ID, NAME, CODE) VALUES (?,?,?) because batch reached max size for FlowFile[0,96202306620162.mockFlowFile,0B]; fieldIndexes: [0, 1, 2]; batch index: 2; batch size: 5
]]></system-err>
  </testcase>
  <testcase name="testInsertBatchUpdateException" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.061">
    <system-err><![CDATA[[pool-2109-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=327afc31-f8aa-4df5-9f0e-a8e7ec99b451] Fetched Table Schema TableSchema[columns=[Column[name=ID, dataType=4, required=true, columnSize=10], Column[name=NAME, dataType=12, required=false, columnSize=100], Column[name=CODE, dataType=4, required=false, columnSize=10], Column[name=DT, dataType=91, required=false, columnSize=10]]] for table name PERSONS
[pool-2109-thread-1] ERROR org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=327afc31-f8aa-4df5-9f0e-a8e7ec99b451] Failed to put Records to database for FlowFile[0,96203014136874.mockFlowFile,0B]. Routing to failure.: java.sql.BatchUpdateException: The check constraint 'CODE_RANGE' was violated while performing an INSERT or UPDATE on table '"APP"."PERSONS"'.
java.sql.BatchUpdateException: The check constraint 'CODE_RANGE' was violated while performing an INSERT or UPDATE on table '"APP"."PERSONS"'.
	at org.apache.derby.impl.jdbc.EmbedStatement.executeLargeBatch(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedStatement.executeBatch(Unknown Source)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.executeDML(PutDatabaseRecord.java:790)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.putToDatabase(PutDatabaseRecord.java:931)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.onTrigger(PutDatabaseRecord.java:489)
	at org.apache.nifi.processor.AbstractProcessor.onTrigger(AbstractProcessor.java:27)
	at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:284)
	at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:278)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: org.apache.derby.shared.common.error.DerbySQLIntegrityConstraintViolationException: The check constraint 'CODE_RANGE' was violated while performing an INSERT or UPDATE on table '"APP"."PERSONS"'.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeBatchElement(Unknown Source)
	... 14 more
Caused by: ERROR 23513: The check constraint 'CODE_RANGE' was violated while performing an INSERT or UPDATE on table '"APP"."PERSONS"'.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.iapi.types.SQLBoolean.throwExceptionIfFalse(Unknown Source)
	at org.apache.derby.exe.ac265a9a0fx018fx370exb60bx00000cb603300.e1(Unknown Source)
	at org.apache.derby.impl.services.reflect.DirectCall.invoke(Unknown Source)
	at org.apache.derby.impl.sql.execute.InsertResultSet.evaluateCheckConstraints(Unknown Source)
	at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(Unknown Source)
	at org.apache.derby.impl.sql.execute.InsertResultSet.open(Unknown Source)
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Unknown Source)
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)
	... 16 more
]]></system-err>
  </testcase>
  <testcase name="testInsertWithDefaultMaxBatchSize" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.068">
    <system-err><![CDATA[[pool-2110-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=5e5b7ee0-0326-4d0a-a8a4-5d672362f54f] Fetched Table Schema TableSchema[columns=[Column[name=ID, dataType=4, required=true, columnSize=10], Column[name=NAME, dataType=12, required=false, columnSize=100], Column[name=CODE, dataType=4, required=false, columnSize=10], Column[name=DT, dataType=91, required=false, columnSize=10]]] for table name PERSONS
]]></system-err>
  </testcase>
  <testcase name="testIOExceptionOnReadData" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.053">
    <system-err><![CDATA[[pool-2111-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=228bb69a-2c2c-4aca-bb74-acfe330bc121] Fetched Table Schema TableSchema[columns=[Column[name=ID, dataType=4, required=true, columnSize=10], Column[name=NAME, dataType=12, required=false, columnSize=100], Column[name=CODE, dataType=4, required=false, columnSize=10], Column[name=DT, dataType=91, required=false, columnSize=10]]] for table name PERSONS
[pool-2111-thread-1] ERROR org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=228bb69a-2c2c-4aca-bb74-acfe330bc121] Failed to put Records to database for FlowFile[0,96203141243389.mockFlowFile,0B]. Routing to failure.: java.io.IOException: Intentional Unit Test Exception because 1 records have been read
java.io.IOException: Intentional Unit Test Exception because 1 records have been read
	at org.apache.nifi.serialization.record.MockRecordParser$1.nextRecord(MockRecordParser.java:92)
	at org.apache.nifi.serialization.RecordReader.nextRecord(RecordReader.java:50)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.executeDML(PutDatabaseRecord.java:634)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.putToDatabase(PutDatabaseRecord.java:931)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.onTrigger(PutDatabaseRecord.java:489)
	at org.apache.nifi.processor.AbstractProcessor.onTrigger(AbstractProcessor.java:27)
	at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:284)
	at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:278)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
]]></system-err>
  </testcase>
  <testcase name="testUpdateMultipleSchemas" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.106">
    <system-err><![CDATA[[pool-2112-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=90fa92e4-0216-4276-904f-c242a31f1787] Fetched Table Schema TableSchema[columns=[Column[name=ID, dataType=4, required=true, columnSize=10], Column[name=NAME, dataType=12, required=false, columnSize=100], Column[name=CODE, dataType=4, required=false, columnSize=10], Column[name=DT, dataType=91, required=false, columnSize=10]]] for table name PERSONS
]]></system-err>
  </testcase>
  <testcase name="testMultipleInsertsViaSqlStatementType" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.033"/>
  <testcase name="testUpdateAfterInsert" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.064">
    <system-err><![CDATA[[pool-2114-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=ee7ed3c9-f124-4ff7-b045-230da8b68e42] Fetched Table Schema TableSchema[columns=[Column[name=ID, dataType=4, required=true, columnSize=10], Column[name=NAME, dataType=12, required=false, columnSize=100], Column[name=CODE, dataType=4, required=false, columnSize=10], Column[name=DT, dataType=91, required=false, columnSize=10]]] for table name PERSONS
]]></system-err>
  </testcase>
  <testcase name="testMultipleInsertsViaSqlStatementTypeBadSQL" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.034">
    <system-err><![CDATA[[pool-2116-thread-1] ERROR org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=42142638-c17b-490c-936f-52382ca2936c] Failed to put Records to database for FlowFile[0,96203388917966.mockFlowFile,0B]. Routing to failure.: java.sql.SQLSyntaxErrorException: Table/View 'PERSONS2' does not exist.
java.sql.SQLSyntaxErrorException: Table/View 'PERSONS2' does not exist.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.executeSQL(PutDatabaseRecord.java:578)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.putToDatabase(PutDatabaseRecord.java:928)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.onTrigger(PutDatabaseRecord.java:489)
	at org.apache.nifi.processor.AbstractProcessor.onTrigger(AbstractProcessor.java:27)
	at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:284)
	at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:278)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: ERROR 42X05: Table/View 'PERSONS2' does not exist.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.impl.sql.compile.DMLModStatementNode.verifyTargetTable(Unknown Source)
	at org.apache.derby.impl.sql.compile.InsertNode.bindStatement(Unknown Source)
	at org.apache.derby.impl.sql.GenericStatement.prepMinion(Unknown Source)
	at org.apache.derby.impl.sql.GenericStatement.prepare(Unknown Source)
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(Unknown Source)
	... 14 more
]]></system-err>
  </testcase>
  <testcase name="testInsertNoTableSpecified" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.026">
    <system-err><![CDATA[[pool-2117-thread-1] ERROR org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=503c10f8-2e38-445c-bb31-2f2e21841051] Failed to put Records to database for FlowFile[0,96203424179560.mockFlowFile,0B]. Routing to failure.: java.lang.IllegalArgumentException: Cannot process FlowFile[0,96203424179560.mockFlowFile,0B] because Table Name is null or empty
java.lang.IllegalArgumentException: Cannot process FlowFile[0,96203424179560.mockFlowFile,0B] because Table Name is null or empty
	at org.apache.nifi.processors.standard.PutDatabaseRecord.executeDML(PutDatabaseRecord.java:603)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.putToDatabase(PutDatabaseRecord.java:931)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.onTrigger(PutDatabaseRecord.java:489)
	at org.apache.nifi.processor.AbstractProcessor.onTrigger(AbstractProcessor.java:27)
	at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:284)
	at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:278)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
]]></system-err>
  </testcase>
  <testcase name="testDelete" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.064">
    <system-err><![CDATA[[pool-2118-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=3e21402d-9b3b-4934-988f-b0ecdb040129] Fetched Table Schema TableSchema[columns=[Column[name=ID, dataType=4, required=true, columnSize=10], Column[name=NAME, dataType=12, required=false, columnSize=100], Column[name=CODE, dataType=4, required=false, columnSize=10], Column[name=DT, dataType=91, required=false, columnSize=10]]] for table name PERSONS
]]></system-err>
  </testcase>
  <testcase name="testInsertWithBlobClobObjectArraySource" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.054">
    <system-err><![CDATA[[pool-2119-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=0aefde49-3e8c-4656-842d-0b928dae6a14] Fetched Table Schema TableSchema[columns=[Column[name=ID, dataType=4, required=true, columnSize=10], Column[name=NAME, dataType=2005, required=false, columnSize=2147483647], Column[name=CONTENT, dataType=2004, required=false, columnSize=2147483647], Column[name=CODE, dataType=4, required=false, columnSize=10]]] for table name PERSONS
]]></system-err>
  </testcase>
  <testcase name="testInsert" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.039">
    <system-err><![CDATA[[pool-2120-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=7ed2f430-a922-4a7a-b108-c25170acacb2] Fetched Table Schema TableSchema[columns=[Column[name=ID, dataType=4, required=true, columnSize=10], Column[name=NAME, dataType=12, required=false, columnSize=100], Column[name=CODE, dataType=4, required=false, columnSize=10], Column[name=DT, dataType=91, required=false, columnSize=10]]] for table name PERSONS
]]></system-err>
  </testcase>
  <testcase name="testDeleteWithNulls" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.05">
    <system-err><![CDATA[[pool-2121-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=51add8b8-0eb4-4378-bde3-bc18b00c8fa4] Fetched Table Schema TableSchema[columns=[Column[name=ID, dataType=4, required=true, columnSize=10], Column[name=NAME, dataType=12, required=false, columnSize=100], Column[name=CODE, dataType=4, required=false, columnSize=10], Column[name=DT, dataType=91, required=false, columnSize=10]]] for table name PERSONS
]]></system-err>
  </testcase>
  <testcase name="testInsertNoTableExists" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.042">
    <system-err><![CDATA[[pool-2122-thread-1] ERROR org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=4fe6746c-6be4-4c07-9e0a-c5a803ab3f93] Failed to put Records to database for FlowFile[0,96203654856770.mockFlowFile,0B]. Routing to failure.: org.apache.nifi.processor.exception.ProcessException: java.sql.SQLException: Table PERSONS2 not found, ensure the Catalog, Schema, and/or Table Names match those in the database exactly
org.apache.nifi.processor.exception.ProcessException: java.sql.SQLException: Table PERSONS2 not found, ensure the Catalog, Schema, and/or Table Names match those in the database exactly
	at org.apache.nifi.processors.standard.PutDatabaseRecord.lambda$executeDML$2(PutDatabaseRecord.java:617)
	at com.github.benmanes.caffeine.cache.BoundedLocalCache.lambda$doComputeIfAbsent$14(BoundedLocalCache.java:2380)
	at java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1853)
	at com.github.benmanes.caffeine.cache.BoundedLocalCache.doComputeIfAbsent(BoundedLocalCache.java:2378)
	at com.github.benmanes.caffeine.cache.BoundedLocalCache.computeIfAbsent(BoundedLocalCache.java:2361)
	at com.github.benmanes.caffeine.cache.LocalCache.computeIfAbsent(LocalCache.java:108)
	at com.github.benmanes.caffeine.cache.LocalManualCache.get(LocalManualCache.java:62)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.executeDML(PutDatabaseRecord.java:611)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.putToDatabase(PutDatabaseRecord.java:931)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.onTrigger(PutDatabaseRecord.java:489)
	at org.apache.nifi.processor.AbstractProcessor.onTrigger(AbstractProcessor.java:27)
	at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:284)
	at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:278)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.sql.SQLException: Table PERSONS2 not found, ensure the Catalog, Schema, and/or Table Names match those in the database exactly
	at org.apache.nifi.processors.standard.PutDatabaseRecord$TableSchema.from(PutDatabaseRecord.java:1447)
	at org.apache.nifi.processors.standard.PutDatabaseRecord.lambda$executeDML$2(PutDatabaseRecord.java:613)
	... 18 more
]]></system-err>
  </testcase>
  <testcase name="testUpdate" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.061">
    <system-err><![CDATA[[pool-2123-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=e36fbd1c-5ff5-4cf1-874e-c569d5a2c514] Fetched Table Schema TableSchema[columns=[Column[name=ID, dataType=4, required=true, columnSize=10], Column[name=NAME, dataType=12, required=false, columnSize=100], Column[name=CODE, dataType=4, required=false, columnSize=10], Column[name=DT, dataType=91, required=false, columnSize=10]]] for table name PERSONS
]]></system-err>
  </testcase>
  <testcase name="testInsertWithBlobStringSource" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.057">
    <system-err><![CDATA[[pool-2124-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=51901f89-a311-4757-b8c6-14c49d0cd172] Fetched Table Schema TableSchema[columns=[Column[name=ID, dataType=4, required=true, columnSize=10], Column[name=NAME, dataType=2005, required=false, columnSize=2147483647], Column[name=CONTENT, dataType=2004, required=false, columnSize=2147483647], Column[name=CODE, dataType=4, required=false, columnSize=10]]] for table name PERSONS
]]></system-err>
  </testcase>
  <testcase name="testUpdateSpecifyUpdateKeys" classname="org.apache.nifi.processors.standard.TestPutDatabaseRecord" time="0.031">
    <system-err><![CDATA[[pool-2125-thread-1] DEBUG org.apache.nifi.processors.standard.PutDatabaseRecord - PutDatabaseRecord[id=aa9c0be9-19fb-40f9-b3c9-f92555e7149a] Fetched Table Schema TableSchema[columns=[Column[name=ID, dataType=4, required=false, columnSize=10], Column[name=NAME, dataType=12, required=false, columnSize=100], Column[name=CODE, dataType=4, required=false, columnSize=10]]] for table name PERSONS
]]></system-err>
  </testcase>
</testsuite>