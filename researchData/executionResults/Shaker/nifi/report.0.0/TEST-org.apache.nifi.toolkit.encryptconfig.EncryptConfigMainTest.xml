<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="org.apache.nifi.toolkit.encryptconfig.EncryptConfigMainTest" time="0.165" tests="5" errors="0" skipped="0" failures="0">
  <properties>
    <property name="sun.desktop" value="gnome"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="sun.cpu.isalist" value=""/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/alex/Repositories/nifi/nifi-toolkit/nifi-toolkit-encrypt-config/target/test-classes:/home/alex/Repositories/nifi/nifi-toolkit/nifi-toolkit-encrypt-config/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-flow-encryptor/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-property-encryptor/target/classes:/home/alex/.m2/repository/commons-codec/commons-codec/1.14/commons-codec-1.14.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-properties/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-property-utils/target/classes:/home/alex/Repositories/nifi/nifi-registry/nifi-registry-core/nifi-registry-properties/target/classes:/home/alex/.m2/repository/org/apache/commons/commons-lang3/3.5/commons-lang3-3.5.jar:/home/alex/.m2/repository/org/bouncycastle/bcprov-jdk15on/1.69/bcprov-jdk15on-1.69.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-sensitive-property-provider/target/classes:/home/alex/.m2/repository/software/amazon/awssdk/kms/2.17.1/kms-2.17.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/aws-json-protocol/2.17.1/aws-json-protocol-2.17.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/third-party-jackson-core/2.17.1/third-party-jackson-core-2.17.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/json-utils/2.17.1/json-utils-2.17.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/protocol-core/2.17.1/protocol-core-2.17.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/sdk-core/2.17.1/sdk-core-2.17.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/profiles/2.17.1/profiles-2.17.1.jar:/home/alex/.m2/repository/org/reactivestreams/reactive-streams/1.0.3/reactive-streams-1.0.3.jar:/home/alex/.m2/repository/software/amazon/awssdk/auth/2.17.1/auth-2.17.1.jar:/home/alex/.m2/repository/software/amazon/eventstream/eventstream/1.0.1/eventstream-1.0.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/http-client-spi/2.17.1/http-client-spi-2.17.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/regions/2.17.1/regions-2.17.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/annotations/2.17.1/annotations-2.17.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/utils/2.17.1/utils-2.17.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/aws-core/2.17.1/aws-core-2.17.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/metrics-spi/2.17.1/metrics-spi-2.17.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/secretsmanager/2.17.1/secretsmanager-2.17.1.jar:/home/alex/.m2/repository/com/azure/azure-security-keyvault-secrets/4.3.3/azure-security-keyvault-secrets-4.3.3.jar:/home/alex/.m2/repository/com/azure/azure-core/1.20.0/azure-core-1.20.0.jar:/home/alex/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.12.4/jackson-datatype-jsr310-2.12.4.jar:/home/alex/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-xml/2.12.4/jackson-dataformat-xml-2.12.4.jar:/home/alex/.m2/repository/io/projectreactor/reactor-core/3.4.9/reactor-core-3.4.9.jar:/home/alex/.m2/repository/com/azure/azure-security-keyvault-keys/4.3.3/azure-security-keyvault-keys-4.3.3.jar:/home/alex/.m2/repository/com/azure/azure-identity/1.3.4/azure-identity-1.3.4.jar:/home/alex/.m2/repository/com/microsoft/azure/msal4j/1.10.1/msal4j-1.10.1.jar:/home/alex/.m2/repository/com/nimbusds/oauth2-oidc-sdk/9.7/oauth2-oidc-sdk-9.7.jar:/home/alex/.m2/repository/com/github/stephenc/jcip/jcip-annotations/1.0-1/jcip-annotations-1.0-1.jar:/home/alex/.m2/repository/com/nimbusds/content-type/2.1/content-type-2.1.jar:/home/alex/.m2/repository/com/nimbusds/lang-tag/1.5/lang-tag-1.5.jar:/home/alex/.m2/repository/com/nimbusds/nimbus-jose-jwt/9.9.3/nimbus-jose-jwt-9.9.3.jar:/home/alex/.m2/repository/com/microsoft/azure/msal4j-persistence-extension/1.1.0/msal4j-persistence-extension-1.1.0.jar:/home/alex/.m2/repository/net/java/dev/jna/jna/5.5.0/jna-5.5.0.jar:/home/alex/.m2/repository/net/java/dev/jna/jna-platform/5.6.0/jna-platform-5.6.0.jar:/home/alex/.m2/repository/net/minidev/json-smart/2.4.7/json-smart-2.4.7.jar:/home/alex/.m2/repository/net/minidev/accessors-smart/2.4.7/accessors-smart-2.4.7.jar:/home/alex/.m2/repository/org/ow2/asm/asm/9.1/asm-9.1.jar:/home/alex/.m2/repository/com/azure/azure-core-http-okhttp/1.7.1/azure-core-http-okhttp-1.7.1.jar:/home/alex/.m2/repository/com/squareup/okhttp3/okhttp/4.8.1/okhttp-4.8.1.jar:/home/alex/.m2/repository/com/squareup/okio/okio/2.7.0/okio-2.7.0.jar:/home/alex/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-common/1.3.70/kotlin-stdlib-common-1.3.70.jar:/home/alex/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib/1.3.72/kotlin-stdlib-1.3.72.jar:/home/alex/.m2/repository/org/jetbrains/annotations/13.0/annotations-13.0.jar:/home/alex/.m2/repository/software/amazon/awssdk/url-connection-client/2.17.1/url-connection-client-2.17.1.jar:/home/alex/.m2/repository/com/google/cloud/google-cloud-kms/2.0.2/google-cloud-kms-2.0.2.jar:/home/alex/.m2/repository/io/grpc/grpc-api/1.40.0/grpc-api-1.40.0.jar:/home/alex/.m2/repository/io/grpc/grpc-context/1.40.0/grpc-context-1.40.0.jar:/home/alex/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/alex/.m2/repository/io/grpc/grpc-stub/1.40.0/grpc-stub-1.40.0.jar:/home/alex/.m2/repository/io/grpc/grpc-protobuf/1.40.0/grpc-protobuf-1.40.0.jar:/home/alex/.m2/repository/io/grpc/grpc-protobuf-lite/1.40.0/grpc-protobuf-lite-1.40.0.jar:/home/alex/.m2/repository/com/google/api/api-common/2.0.1/api-common-2.0.1.jar:/home/alex/.m2/repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:/home/alex/.m2/repository/com/google/auto/value/auto-value-annotations/1.8.2/auto-value-annotations-1.8.2.jar:/home/alex/.m2/repository/com/google/protobuf/protobuf-java/3.17.3/protobuf-java-3.17.3.jar:/home/alex/.m2/repository/com/google/api/grpc/proto-google-common-protos/2.3.2/proto-google-common-protos-2.3.2.jar:/home/alex/.m2/repository/com/google/api/grpc/proto-google-cloud-kms-v1/0.91.2/proto-google-cloud-kms-v1-0.91.2.jar:/home/alex/.m2/repository/com/google/guava/guava/30.1.1-jre/guava-30.1.1-jre.jar:/home/alex/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/home/alex/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/alex/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/home/alex/.m2/repository/com/google/api/gax/2.3.0/gax-2.3.0.jar:/home/alex/.m2/repository/io/opencensus/opencensus-api/0.28.0/opencensus-api-0.28.0.jar:/home/alex/.m2/repository/com/google/api/gax-grpc/2.3.0/gax-grpc-2.3.0.jar:/home/alex/.m2/repository/com/google/auth/google-auth-library-credentials/1.1.0/google-auth-library-credentials-1.1.0.jar:/home/alex/.m2/repository/io/grpc/grpc-netty-shaded/1.40.0/grpc-netty-shaded-1.40.0.jar:/home/alex/.m2/repository/io/perfmark/perfmark-api/0.23.0/perfmark-api-0.23.0.jar:/home/alex/.m2/repository/io/grpc/grpc-core/1.40.0/grpc-core-1.40.0.jar:/home/alex/.m2/repository/com/google/android/annotations/4.1.1.4/annotations-4.1.1.4.jar:/home/alex/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.20/animal-sniffer-annotations-1.20.jar:/home/alex/.m2/repository/io/grpc/grpc-alts/1.40.0/grpc-alts-1.40.0.jar:/home/alex/.m2/repository/io/grpc/grpc-grpclb/1.40.0/grpc-grpclb-1.40.0.jar:/home/alex/.m2/repository/com/google/protobuf/protobuf-java-util/3.17.3/protobuf-java-util-3.17.3.jar:/home/alex/.m2/repository/org/conscrypt/conscrypt-openjdk-uber/2.5.1/conscrypt-openjdk-uber-2.5.1.jar:/home/alex/.m2/repository/org/threeten/threetenbp/1.5.1/threetenbp-1.5.1.jar:/home/alex/.m2/repository/io/grpc/grpc-auth/1.40.0/grpc-auth-1.40.0.jar:/home/alex/.m2/repository/com/google/api/grpc/proto-google-iam-v1/1.0.14/proto-google-iam-v1-1.0.14.jar:/home/alex/.m2/repository/com/google/auth/google-auth-library-oauth2-http/1.1.0/google-auth-library-oauth2-http-1.1.0.jar:/home/alex/.m2/repository/com/google/http-client/google-http-client/1.39.2/google-http-client-1.39.2.jar:/home/alex/.m2/repository/io/opencensus/opencensus-contrib-http-util/0.28.0/opencensus-contrib-http-util-0.28.0.jar:/home/alex/.m2/repository/com/google/http-client/google-http-client-gson/1.39.2/google-http-client-gson-1.39.2.jar:/home/alex/.m2/repository/com/google/code/gson/gson/2.8.8/gson-2.8.8.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-vault-utils/target/classes:/home/alex/.m2/repository/org/springframework/vault/spring-vault-core/2.3.2/spring-vault-core-2.3.2.jar:/home/alex/.m2/repository/org/springframework/spring-web/5.3.11/spring-web-5.3.11.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-properties-loader/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-security-utils/target/classes:/home/alex/Repositories/nifi/nifi-api/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-security-utils-api/target/classes:/home/alex/.m2/repository/at/favre/lib/bcrypt/0.9.0/bcrypt-0.9.0.jar:/home/alex/.m2/repository/at/favre/lib/bytes/1.3.0/bytes-1.3.0.jar:/home/alex/Repositories/nifi/nifi-toolkit/nifi-toolkit-tls/target/classes:/home/alex/.m2/repository/org/bouncycastle/bcpkix-jdk15on/1.69/bcpkix-jdk15on-1.69.jar:/home/alex/.m2/repository/org/bouncycastle/bcutil-jdk15on/1.69/bcutil-jdk15on-1.69.jar:/home/alex/.m2/repository/commons-io/commons-io/2.10.0/commons-io-2.10.0.jar:/home/alex/.m2/repository/org/glassfish/jersey/core/jersey-client/2.33/jersey-client-2.33.jar:/home/alex/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/home/alex/.m2/repository/org/glassfish/jersey/core/jersey-common/2.33/jersey-common-2.33.jar:/home/alex/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/alex/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/home/alex/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/home/alex/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.33/jersey-hk2-2.33.jar:/home/alex/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/home/alex/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/home/alex/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/home/alex/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/home/alex/.m2/repository/org/javassist/javassist/3.25.0-GA/javassist-3.25.0-GA.jar:/home/alex/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.12.3/jackson-databind-2.12.3.jar:/home/alex/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.12.3/jackson-annotations-2.12.3.jar:/home/alex/.m2/repository/org/apache/httpcomponents/httpclient/4.5.5/httpclient-4.5.5.jar:/home/alex/.m2/repository/org/apache/httpcomponents/httpcore/4.4.9/httpcore-4.4.9.jar:/home/alex/.m2/repository/commons-cli/commons-cli/1.4/commons-cli-1.4.jar:/home/alex/.m2/repository/com/github/stefanbirkner/system-rules/1.19.0/system-rules-1.19.0.jar:/home/alex/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core-api/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-nar-utils/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-parameter/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-components/target/classes:/home/alex/Repositories/nifi/nifi-framework-api/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-web-utils/target/classes:/home/alex/.m2/repository/org/quartz-scheduler/quartz/2.3.2/quartz-2.3.2.jar:/home/alex/.m2/repository/com/mchange/c3p0/0.9.5.4/c3p0-0.9.5.4.jar:/home/alex/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/alex/.m2/repository/com/zaxxer/HikariCP-java7/2.4.13/HikariCP-java7-2.4.13.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-expression-language/target/classes:/home/alex/.m2/repository/org/antlr/antlr-runtime/3.5.2/antlr-runtime-3.5.2.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-uuid5/target/classes:/home/alex/.m2/repository/com/jayway/jsonpath/json-path/2.6.0/json-path-2.6.0.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-utils/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-schema-utils/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-repository-models/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-security-kms/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-repository-encryption/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-site-to-site/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster-protocol/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-socket-utils/target/classes:/home/alex/.m2/repository/commons-net/commons-net/3.6/commons-net-3.6.jar:/home/alex/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.12.3/jackson-module-jaxb-annotations-2.12.3.jar:/home/alex/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/home/alex/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-logging-utils/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-client-dto/target/classes:/home/alex/.m2/repository/io/swagger/swagger-annotations/1.6.0/swagger-annotations-1.6.0.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-site-to-site-client/target/classes:/home/alex/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.4/httpasyncclient-4.1.4.jar:/home/alex/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.10/httpcore-nio-4.4.10.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-authorization/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-administration/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-user-actions/target/classes:/home/alex/.m2/repository/org/springframework/spring-aop/5.3.11/spring-aop-5.3.11.jar:/home/alex/.m2/repository/org/aspectj/aspectjweaver/1.9.6/aspectjweaver-1.9.6.jar:/home/alex/.m2/repository/org/springframework/security/spring-security-core/5.5.2/spring-security-core-5.5.2.jar:/home/alex/.m2/repository/org/springframework/security/spring-security-crypto/5.5.2/spring-security-crypto-5.5.2.jar:/home/alex/.m2/repository/org/apache/commons/commons-collections4/4.4/commons-collections4-4.4.jar:/home/alex/.m2/repository/com/h2database/h2/1.4.199/h2-1.4.199.jar:/home/alex/.m2/repository/org/springframework/spring-core/5.3.11/spring-core-5.3.11.jar:/home/alex/.m2/repository/org/springframework/spring-jcl/5.3.11/spring-jcl-5.3.11.jar:/home/alex/.m2/repository/org/springframework/spring-beans/5.3.11/spring-beans-5.3.11.jar:/home/alex/.m2/repository/org/springframework/spring-context/5.3.11/spring-context-5.3.11.jar:/home/alex/.m2/repository/org/springframework/spring-expression/5.3.11/spring-expression-5.3.11.jar:/home/alex/.m2/repository/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:/home/alex/.m2/repository/org/questdb/core/4.2.1/core-4.2.1.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-data-provenance-utils/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-write-ahead-log/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-rocksdb-utils/target/classes:/home/alex/.m2/repository/org/rocksdb/rocksdbjni/6.6.4/rocksdbjni-6.6.4.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-flowfile-repo-serialization/target/classes:/home/alex/.m2/repository/org/apache/zookeeper/zookeeper/3.5.9/zookeeper-3.5.9.jar:/home/alex/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.5.9/zookeeper-jute-3.5.9.jar:/home/alex/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/alex/.m2/repository/io/netty/netty-handler/4.1.50.Final/netty-handler-4.1.50.Final.jar:/home/alex/.m2/repository/io/netty/netty-common/4.1.50.Final/netty-common-4.1.50.Final.jar:/home/alex/.m2/repository/io/netty/netty-resolver/4.1.50.Final/netty-resolver-4.1.50.Final.jar:/home/alex/.m2/repository/io/netty/netty-buffer/4.1.50.Final/netty-buffer-4.1.50.Final.jar:/home/alex/.m2/repository/io/netty/netty-transport/4.1.50.Final/netty-transport-4.1.50.Final.jar:/home/alex/.m2/repository/io/netty/netty-codec/4.1.50.Final/netty-codec-4.1.50.Final.jar:/home/alex/.m2/repository/io/netty/netty-transport-native-epoll/4.1.50.Final/netty-transport-native-epoll-4.1.50.Final.jar:/home/alex/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.50.Final/netty-transport-native-unix-common-4.1.50.Final.jar:/home/alex/.m2/repository/org/apache/curator/curator-framework/5.2.0/curator-framework-5.2.0.jar:/home/alex/.m2/repository/org/apache/curator/curator-client/5.2.0/curator-client-5.2.0.jar:/home/alex/.m2/repository/org/apache/curator/curator-recipes/5.2.0/curator-recipes-5.2.0.jar:/home/alex/Repositories/nifi/nifi-registry/nifi-registry-core/nifi-registry-data-model/target/classes:/home/alex/.m2/repository/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/home/alex/.m2/repository/javax/ws/rs/javax.ws.rs-api/2.1/javax.ws.rs-api-2.1.jar:/home/alex/Repositories/nifi/nifi-registry/nifi-registry-core/nifi-registry-revision/nifi-registry-revision-entity-model/target/classes:/home/alex/Repositories/nifi/nifi-registry/nifi-registry-core/nifi-registry-flow-diff/target/classes:/home/alex/Repositories/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/target/classes:/home/alex/Repositories/nifi/nifi-registry/nifi-registry-core/nifi-registry-security-utils/target/classes:/home/alex/.m2/repository/org/glassfish/jersey/media/jersey-media-json-jackson/2.33/jersey-media-json-jackson-2.33.jar:/home/alex/.m2/repository/org/glassfish/jersey/ext/jersey-entity-filtering/2.33/jersey-entity-filtering-2.33.jar:/home/alex/.m2/repository/org/glassfish/jersey/media/jersey-media-multipart/2.33/jersey-media-multipart-2.33.jar:/home/alex/.m2/repository/org/jvnet/mimepull/mimepull/1.9.13/mimepull-1.9.13.jar:/home/alex/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.12.3/jackson-core-2.12.3.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-authorizer/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-authorization-providers/target/classes:/home/alex/.m2/repository/com/github/ben-manes/caffeine/caffeine/2.8.1/caffeine-2.8.1.jar:/home/alex/.m2/repository/org/checkerframework/checker-qual/3.1.0/checker-qual-3.1.0.jar:/home/alex/.m2/repository/com/google/errorprone/error_prone_annotations/2.3.4/error_prone_annotations-2.3.4.jar:/home/alex/.m2/repository/org/apache/commons/commons-configuration2/2.7/commons-configuration2-2.7.jar:/home/alex/.m2/repository/org/apache/commons/commons-text/1.8/commons-text-1.8.jar:/home/alex/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/alex/.m2/repository/commons-beanutils/commons-beanutils/1.9.4/commons-beanutils-1.9.4.jar:/home/alex/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/home/alex/.m2/repository/org/spockframework/spock-core/1.3-groovy-2.5/spock-core-1.3-groovy-2.5.jar:/home/alex/.m2/repository/cglib/cglib-nodep/2.2.2/cglib-nodep-2.2.2.jar:/home/alex/.m2/repository/org/xmlunit/xmlunit-core/2.6.3/xmlunit-core-2.6.3.jar:/home/alex/.m2/repository/org/xmlunit/xmlunit-matchers/2.6.3/xmlunit-matchers-2.6.3.jar:/home/alex/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy/2.5.14/groovy-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-ant/2.5.14/groovy-ant-2.5.14.jar:/home/alex/.m2/repository/org/apache/ant/ant/1.9.15/ant-1.9.15.jar:/home/alex/.m2/repository/org/apache/ant/ant-junit/1.9.15/ant-junit-1.9.15.jar:/home/alex/.m2/repository/org/apache/ant/ant-launcher/1.9.15/ant-launcher-1.9.15.jar:/home/alex/.m2/repository/org/apache/ant/ant-antlr/1.9.15/ant-antlr-1.9.15.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-cli-commons/2.5.14/groovy-cli-commons-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-cli-picocli/2.5.14/groovy-cli-picocli-2.5.14.jar:/home/alex/.m2/repository/info/picocli/picocli/4.3.2/picocli-4.3.2.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-console/2.5.14/groovy-console-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-datetime/2.5.14/groovy-datetime-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-docgenerator/2.5.14/groovy-docgenerator-2.5.14.jar:/home/alex/.m2/repository/com/thoughtworks/qdox/qdox/1.12.1/qdox-1.12.1.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-groovydoc/2.5.14/groovy-groovydoc-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-groovysh/2.5.14/groovy-groovysh-2.5.14.jar:/home/alex/.m2/repository/jline/jline/2.14.6/jline-2.14.6.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-jmx/2.5.14/groovy-jmx-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-json/2.5.14/groovy-json-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-jsr223/2.5.14/groovy-jsr223-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-macro/2.5.14/groovy-macro-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-nio/2.5.14/groovy-nio-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-servlet/2.5.14/groovy-servlet-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-sql/2.5.14/groovy-sql-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-swing/2.5.14/groovy-swing-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-templates/2.5.14/groovy-templates-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-test-junit5/2.5.14/groovy-test-junit5-2.5.14.jar:/home/alex/.m2/repository/org/junit/platform/junit-platform-launcher/1.7.2/junit-platform-launcher-1.7.2.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-testng/2.5.14/groovy-testng-2.5.14.jar:/home/alex/.m2/repository/org/testng/testng/6.13.1/testng-6.13.1.jar:/home/alex/.m2/repository/com/beust/jcommander/1.72/jcommander-1.72.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-xml/2.5.14/groovy-xml-2.5.14.jar:/home/alex/.m2/repository/org/slf4j/slf4j-simple/1.7.32/slf4j-simple-1.7.32.jar:/home/alex/.m2/repository/org/slf4j/slf4j-api/1.7.32/slf4j-api-1.7.32.jar:/home/alex/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.7.2/junit-jupiter-api-5.7.2.jar:/home/alex/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/home/alex/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/alex/.m2/repository/org/junit/platform/junit-platform-commons/1.7.2/junit-platform-commons-1.7.2.jar:/home/alex/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.7.2/junit-jupiter-engine-5.7.2.jar:/home/alex/.m2/repository/org/junit/platform/junit-platform-engine/1.7.2/junit-platform-engine-1.7.2.jar:/home/alex/.m2/repository/org/junit/vintage/junit-vintage-engine/5.7.2/junit-vintage-engine-5.7.2.jar:/home/alex/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.7.2/junit-jupiter-params-5.7.2.jar:/home/alex/.m2/repository/org/mockito/mockito-core/3.11.2/mockito-core-3.11.2.jar:/home/alex/.m2/repository/net/bytebuddy/byte-buddy/1.11.3/byte-buddy-1.11.3.jar:/home/alex/.m2/repository/net/bytebuddy/byte-buddy-agent/1.11.3/byte-buddy-agent-1.11.3.jar:/home/alex/.m2/repository/org/objenesis/objenesis/3.2/objenesis-3.2.jar:/home/alex/.m2/repository/org/mockito/mockito-junit-jupiter/3.11.2/mockito-junit-jupiter-3.11.2.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-test/2.5.14/groovy-test-2.5.14.jar:"/>
    <property name="java.vm.vendor" value="Private Build"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value="Europe/Lisbon"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="os.name" value="Linux"/>
    <property name="nifi.properties.file.path" value="conf/nifi.properties"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"/>
    <property name="sun.java.command" value="/home/alex/Repositories/nifi/nifi-toolkit/nifi-toolkit-encrypt-config/target/surefire/surefirebooter8311744955623197704.jar /home/alex/Repositories/nifi/nifi-toolkit/nifi-toolkit-encrypt-config/target/surefire 2024-05-02T01-23-45_285-jvmRun1 surefire6765269389472516435tmp surefire_19050496089210928640tmp"/>
    <property name="surefire.test.class.path" value="/home/alex/Repositories/nifi/nifi-toolkit/nifi-toolkit-encrypt-config/target/test-classes:/home/alex/Repositories/nifi/nifi-toolkit/nifi-toolkit-encrypt-config/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-flow-encryptor/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-property-encryptor/target/classes:/home/alex/.m2/repository/commons-codec/commons-codec/1.14/commons-codec-1.14.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-properties/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-property-utils/target/classes:/home/alex/Repositories/nifi/nifi-registry/nifi-registry-core/nifi-registry-properties/target/classes:/home/alex/.m2/repository/org/apache/commons/commons-lang3/3.5/commons-lang3-3.5.jar:/home/alex/.m2/repository/org/bouncycastle/bcprov-jdk15on/1.69/bcprov-jdk15on-1.69.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-sensitive-property-provider/target/classes:/home/alex/.m2/repository/software/amazon/awssdk/kms/2.17.1/kms-2.17.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/aws-json-protocol/2.17.1/aws-json-protocol-2.17.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/third-party-jackson-core/2.17.1/third-party-jackson-core-2.17.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/json-utils/2.17.1/json-utils-2.17.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/protocol-core/2.17.1/protocol-core-2.17.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/sdk-core/2.17.1/sdk-core-2.17.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/profiles/2.17.1/profiles-2.17.1.jar:/home/alex/.m2/repository/org/reactivestreams/reactive-streams/1.0.3/reactive-streams-1.0.3.jar:/home/alex/.m2/repository/software/amazon/awssdk/auth/2.17.1/auth-2.17.1.jar:/home/alex/.m2/repository/software/amazon/eventstream/eventstream/1.0.1/eventstream-1.0.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/http-client-spi/2.17.1/http-client-spi-2.17.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/regions/2.17.1/regions-2.17.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/annotations/2.17.1/annotations-2.17.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/utils/2.17.1/utils-2.17.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/aws-core/2.17.1/aws-core-2.17.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/metrics-spi/2.17.1/metrics-spi-2.17.1.jar:/home/alex/.m2/repository/software/amazon/awssdk/secretsmanager/2.17.1/secretsmanager-2.17.1.jar:/home/alex/.m2/repository/com/azure/azure-security-keyvault-secrets/4.3.3/azure-security-keyvault-secrets-4.3.3.jar:/home/alex/.m2/repository/com/azure/azure-core/1.20.0/azure-core-1.20.0.jar:/home/alex/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.12.4/jackson-datatype-jsr310-2.12.4.jar:/home/alex/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-xml/2.12.4/jackson-dataformat-xml-2.12.4.jar:/home/alex/.m2/repository/io/projectreactor/reactor-core/3.4.9/reactor-core-3.4.9.jar:/home/alex/.m2/repository/com/azure/azure-security-keyvault-keys/4.3.3/azure-security-keyvault-keys-4.3.3.jar:/home/alex/.m2/repository/com/azure/azure-identity/1.3.4/azure-identity-1.3.4.jar:/home/alex/.m2/repository/com/microsoft/azure/msal4j/1.10.1/msal4j-1.10.1.jar:/home/alex/.m2/repository/com/nimbusds/oauth2-oidc-sdk/9.7/oauth2-oidc-sdk-9.7.jar:/home/alex/.m2/repository/com/github/stephenc/jcip/jcip-annotations/1.0-1/jcip-annotations-1.0-1.jar:/home/alex/.m2/repository/com/nimbusds/content-type/2.1/content-type-2.1.jar:/home/alex/.m2/repository/com/nimbusds/lang-tag/1.5/lang-tag-1.5.jar:/home/alex/.m2/repository/com/nimbusds/nimbus-jose-jwt/9.9.3/nimbus-jose-jwt-9.9.3.jar:/home/alex/.m2/repository/com/microsoft/azure/msal4j-persistence-extension/1.1.0/msal4j-persistence-extension-1.1.0.jar:/home/alex/.m2/repository/net/java/dev/jna/jna/5.5.0/jna-5.5.0.jar:/home/alex/.m2/repository/net/java/dev/jna/jna-platform/5.6.0/jna-platform-5.6.0.jar:/home/alex/.m2/repository/net/minidev/json-smart/2.4.7/json-smart-2.4.7.jar:/home/alex/.m2/repository/net/minidev/accessors-smart/2.4.7/accessors-smart-2.4.7.jar:/home/alex/.m2/repository/org/ow2/asm/asm/9.1/asm-9.1.jar:/home/alex/.m2/repository/com/azure/azure-core-http-okhttp/1.7.1/azure-core-http-okhttp-1.7.1.jar:/home/alex/.m2/repository/com/squareup/okhttp3/okhttp/4.8.1/okhttp-4.8.1.jar:/home/alex/.m2/repository/com/squareup/okio/okio/2.7.0/okio-2.7.0.jar:/home/alex/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-common/1.3.70/kotlin-stdlib-common-1.3.70.jar:/home/alex/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib/1.3.72/kotlin-stdlib-1.3.72.jar:/home/alex/.m2/repository/org/jetbrains/annotations/13.0/annotations-13.0.jar:/home/alex/.m2/repository/software/amazon/awssdk/url-connection-client/2.17.1/url-connection-client-2.17.1.jar:/home/alex/.m2/repository/com/google/cloud/google-cloud-kms/2.0.2/google-cloud-kms-2.0.2.jar:/home/alex/.m2/repository/io/grpc/grpc-api/1.40.0/grpc-api-1.40.0.jar:/home/alex/.m2/repository/io/grpc/grpc-context/1.40.0/grpc-context-1.40.0.jar:/home/alex/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/alex/.m2/repository/io/grpc/grpc-stub/1.40.0/grpc-stub-1.40.0.jar:/home/alex/.m2/repository/io/grpc/grpc-protobuf/1.40.0/grpc-protobuf-1.40.0.jar:/home/alex/.m2/repository/io/grpc/grpc-protobuf-lite/1.40.0/grpc-protobuf-lite-1.40.0.jar:/home/alex/.m2/repository/com/google/api/api-common/2.0.1/api-common-2.0.1.jar:/home/alex/.m2/repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:/home/alex/.m2/repository/com/google/auto/value/auto-value-annotations/1.8.2/auto-value-annotations-1.8.2.jar:/home/alex/.m2/repository/com/google/protobuf/protobuf-java/3.17.3/protobuf-java-3.17.3.jar:/home/alex/.m2/repository/com/google/api/grpc/proto-google-common-protos/2.3.2/proto-google-common-protos-2.3.2.jar:/home/alex/.m2/repository/com/google/api/grpc/proto-google-cloud-kms-v1/0.91.2/proto-google-cloud-kms-v1-0.91.2.jar:/home/alex/.m2/repository/com/google/guava/guava/30.1.1-jre/guava-30.1.1-jre.jar:/home/alex/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/home/alex/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/alex/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/home/alex/.m2/repository/com/google/api/gax/2.3.0/gax-2.3.0.jar:/home/alex/.m2/repository/io/opencensus/opencensus-api/0.28.0/opencensus-api-0.28.0.jar:/home/alex/.m2/repository/com/google/api/gax-grpc/2.3.0/gax-grpc-2.3.0.jar:/home/alex/.m2/repository/com/google/auth/google-auth-library-credentials/1.1.0/google-auth-library-credentials-1.1.0.jar:/home/alex/.m2/repository/io/grpc/grpc-netty-shaded/1.40.0/grpc-netty-shaded-1.40.0.jar:/home/alex/.m2/repository/io/perfmark/perfmark-api/0.23.0/perfmark-api-0.23.0.jar:/home/alex/.m2/repository/io/grpc/grpc-core/1.40.0/grpc-core-1.40.0.jar:/home/alex/.m2/repository/com/google/android/annotations/4.1.1.4/annotations-4.1.1.4.jar:/home/alex/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.20/animal-sniffer-annotations-1.20.jar:/home/alex/.m2/repository/io/grpc/grpc-alts/1.40.0/grpc-alts-1.40.0.jar:/home/alex/.m2/repository/io/grpc/grpc-grpclb/1.40.0/grpc-grpclb-1.40.0.jar:/home/alex/.m2/repository/com/google/protobuf/protobuf-java-util/3.17.3/protobuf-java-util-3.17.3.jar:/home/alex/.m2/repository/org/conscrypt/conscrypt-openjdk-uber/2.5.1/conscrypt-openjdk-uber-2.5.1.jar:/home/alex/.m2/repository/org/threeten/threetenbp/1.5.1/threetenbp-1.5.1.jar:/home/alex/.m2/repository/io/grpc/grpc-auth/1.40.0/grpc-auth-1.40.0.jar:/home/alex/.m2/repository/com/google/api/grpc/proto-google-iam-v1/1.0.14/proto-google-iam-v1-1.0.14.jar:/home/alex/.m2/repository/com/google/auth/google-auth-library-oauth2-http/1.1.0/google-auth-library-oauth2-http-1.1.0.jar:/home/alex/.m2/repository/com/google/http-client/google-http-client/1.39.2/google-http-client-1.39.2.jar:/home/alex/.m2/repository/io/opencensus/opencensus-contrib-http-util/0.28.0/opencensus-contrib-http-util-0.28.0.jar:/home/alex/.m2/repository/com/google/http-client/google-http-client-gson/1.39.2/google-http-client-gson-1.39.2.jar:/home/alex/.m2/repository/com/google/code/gson/gson/2.8.8/gson-2.8.8.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-vault-utils/target/classes:/home/alex/.m2/repository/org/springframework/vault/spring-vault-core/2.3.2/spring-vault-core-2.3.2.jar:/home/alex/.m2/repository/org/springframework/spring-web/5.3.11/spring-web-5.3.11.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-properties-loader/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-security-utils/target/classes:/home/alex/Repositories/nifi/nifi-api/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-security-utils-api/target/classes:/home/alex/.m2/repository/at/favre/lib/bcrypt/0.9.0/bcrypt-0.9.0.jar:/home/alex/.m2/repository/at/favre/lib/bytes/1.3.0/bytes-1.3.0.jar:/home/alex/Repositories/nifi/nifi-toolkit/nifi-toolkit-tls/target/classes:/home/alex/.m2/repository/org/bouncycastle/bcpkix-jdk15on/1.69/bcpkix-jdk15on-1.69.jar:/home/alex/.m2/repository/org/bouncycastle/bcutil-jdk15on/1.69/bcutil-jdk15on-1.69.jar:/home/alex/.m2/repository/commons-io/commons-io/2.10.0/commons-io-2.10.0.jar:/home/alex/.m2/repository/org/glassfish/jersey/core/jersey-client/2.33/jersey-client-2.33.jar:/home/alex/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/home/alex/.m2/repository/org/glassfish/jersey/core/jersey-common/2.33/jersey-common-2.33.jar:/home/alex/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/alex/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/home/alex/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/home/alex/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.33/jersey-hk2-2.33.jar:/home/alex/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/home/alex/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/home/alex/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/home/alex/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/home/alex/.m2/repository/org/javassist/javassist/3.25.0-GA/javassist-3.25.0-GA.jar:/home/alex/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.12.3/jackson-databind-2.12.3.jar:/home/alex/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.12.3/jackson-annotations-2.12.3.jar:/home/alex/.m2/repository/org/apache/httpcomponents/httpclient/4.5.5/httpclient-4.5.5.jar:/home/alex/.m2/repository/org/apache/httpcomponents/httpcore/4.4.9/httpcore-4.4.9.jar:/home/alex/.m2/repository/commons-cli/commons-cli/1.4/commons-cli-1.4.jar:/home/alex/.m2/repository/com/github/stefanbirkner/system-rules/1.19.0/system-rules-1.19.0.jar:/home/alex/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core-api/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-nar-utils/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-parameter/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-components/target/classes:/home/alex/Repositories/nifi/nifi-framework-api/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-web-utils/target/classes:/home/alex/.m2/repository/org/quartz-scheduler/quartz/2.3.2/quartz-2.3.2.jar:/home/alex/.m2/repository/com/mchange/c3p0/0.9.5.4/c3p0-0.9.5.4.jar:/home/alex/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/alex/.m2/repository/com/zaxxer/HikariCP-java7/2.4.13/HikariCP-java7-2.4.13.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-expression-language/target/classes:/home/alex/.m2/repository/org/antlr/antlr-runtime/3.5.2/antlr-runtime-3.5.2.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-uuid5/target/classes:/home/alex/.m2/repository/com/jayway/jsonpath/json-path/2.6.0/json-path-2.6.0.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-utils/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-schema-utils/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-repository-models/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-security-kms/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-repository-encryption/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-site-to-site/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster-protocol/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-socket-utils/target/classes:/home/alex/.m2/repository/commons-net/commons-net/3.6/commons-net-3.6.jar:/home/alex/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.12.3/jackson-module-jaxb-annotations-2.12.3.jar:/home/alex/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/home/alex/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-logging-utils/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-client-dto/target/classes:/home/alex/.m2/repository/io/swagger/swagger-annotations/1.6.0/swagger-annotations-1.6.0.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-site-to-site-client/target/classes:/home/alex/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.4/httpasyncclient-4.1.4.jar:/home/alex/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.10/httpcore-nio-4.4.10.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-authorization/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-administration/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-user-actions/target/classes:/home/alex/.m2/repository/org/springframework/spring-aop/5.3.11/spring-aop-5.3.11.jar:/home/alex/.m2/repository/org/aspectj/aspectjweaver/1.9.6/aspectjweaver-1.9.6.jar:/home/alex/.m2/repository/org/springframework/security/spring-security-core/5.5.2/spring-security-core-5.5.2.jar:/home/alex/.m2/repository/org/springframework/security/spring-security-crypto/5.5.2/spring-security-crypto-5.5.2.jar:/home/alex/.m2/repository/org/apache/commons/commons-collections4/4.4/commons-collections4-4.4.jar:/home/alex/.m2/repository/com/h2database/h2/1.4.199/h2-1.4.199.jar:/home/alex/.m2/repository/org/springframework/spring-core/5.3.11/spring-core-5.3.11.jar:/home/alex/.m2/repository/org/springframework/spring-jcl/5.3.11/spring-jcl-5.3.11.jar:/home/alex/.m2/repository/org/springframework/spring-beans/5.3.11/spring-beans-5.3.11.jar:/home/alex/.m2/repository/org/springframework/spring-context/5.3.11/spring-context-5.3.11.jar:/home/alex/.m2/repository/org/springframework/spring-expression/5.3.11/spring-expression-5.3.11.jar:/home/alex/.m2/repository/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:/home/alex/.m2/repository/org/questdb/core/4.2.1/core-4.2.1.jar:/home/alex/Repositories/nifi/nifi-commons/nifi-data-provenance-utils/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-write-ahead-log/target/classes:/home/alex/Repositories/nifi/nifi-commons/nifi-rocksdb-utils/target/classes:/home/alex/.m2/repository/org/rocksdb/rocksdbjni/6.6.4/rocksdbjni-6.6.4.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-flowfile-repo-serialization/target/classes:/home/alex/.m2/repository/org/apache/zookeeper/zookeeper/3.5.9/zookeeper-3.5.9.jar:/home/alex/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.5.9/zookeeper-jute-3.5.9.jar:/home/alex/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/alex/.m2/repository/io/netty/netty-handler/4.1.50.Final/netty-handler-4.1.50.Final.jar:/home/alex/.m2/repository/io/netty/netty-common/4.1.50.Final/netty-common-4.1.50.Final.jar:/home/alex/.m2/repository/io/netty/netty-resolver/4.1.50.Final/netty-resolver-4.1.50.Final.jar:/home/alex/.m2/repository/io/netty/netty-buffer/4.1.50.Final/netty-buffer-4.1.50.Final.jar:/home/alex/.m2/repository/io/netty/netty-transport/4.1.50.Final/netty-transport-4.1.50.Final.jar:/home/alex/.m2/repository/io/netty/netty-codec/4.1.50.Final/netty-codec-4.1.50.Final.jar:/home/alex/.m2/repository/io/netty/netty-transport-native-epoll/4.1.50.Final/netty-transport-native-epoll-4.1.50.Final.jar:/home/alex/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.50.Final/netty-transport-native-unix-common-4.1.50.Final.jar:/home/alex/.m2/repository/org/apache/curator/curator-framework/5.2.0/curator-framework-5.2.0.jar:/home/alex/.m2/repository/org/apache/curator/curator-client/5.2.0/curator-client-5.2.0.jar:/home/alex/.m2/repository/org/apache/curator/curator-recipes/5.2.0/curator-recipes-5.2.0.jar:/home/alex/Repositories/nifi/nifi-registry/nifi-registry-core/nifi-registry-data-model/target/classes:/home/alex/.m2/repository/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/home/alex/.m2/repository/javax/ws/rs/javax.ws.rs-api/2.1/javax.ws.rs-api-2.1.jar:/home/alex/Repositories/nifi/nifi-registry/nifi-registry-core/nifi-registry-revision/nifi-registry-revision-entity-model/target/classes:/home/alex/Repositories/nifi/nifi-registry/nifi-registry-core/nifi-registry-flow-diff/target/classes:/home/alex/Repositories/nifi/nifi-registry/nifi-registry-core/nifi-registry-client/target/classes:/home/alex/Repositories/nifi/nifi-registry/nifi-registry-core/nifi-registry-security-utils/target/classes:/home/alex/.m2/repository/org/glassfish/jersey/media/jersey-media-json-jackson/2.33/jersey-media-json-jackson-2.33.jar:/home/alex/.m2/repository/org/glassfish/jersey/ext/jersey-entity-filtering/2.33/jersey-entity-filtering-2.33.jar:/home/alex/.m2/repository/org/glassfish/jersey/media/jersey-media-multipart/2.33/jersey-media-multipart-2.33.jar:/home/alex/.m2/repository/org/jvnet/mimepull/mimepull/1.9.13/mimepull-1.9.13.jar:/home/alex/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.12.3/jackson-core-2.12.3.jar:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-authorizer/target/classes:/home/alex/Repositories/nifi/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-authorization-providers/target/classes:/home/alex/.m2/repository/com/github/ben-manes/caffeine/caffeine/2.8.1/caffeine-2.8.1.jar:/home/alex/.m2/repository/org/checkerframework/checker-qual/3.1.0/checker-qual-3.1.0.jar:/home/alex/.m2/repository/com/google/errorprone/error_prone_annotations/2.3.4/error_prone_annotations-2.3.4.jar:/home/alex/.m2/repository/org/apache/commons/commons-configuration2/2.7/commons-configuration2-2.7.jar:/home/alex/.m2/repository/org/apache/commons/commons-text/1.8/commons-text-1.8.jar:/home/alex/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/alex/.m2/repository/commons-beanutils/commons-beanutils/1.9.4/commons-beanutils-1.9.4.jar:/home/alex/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/home/alex/.m2/repository/org/spockframework/spock-core/1.3-groovy-2.5/spock-core-1.3-groovy-2.5.jar:/home/alex/.m2/repository/cglib/cglib-nodep/2.2.2/cglib-nodep-2.2.2.jar:/home/alex/.m2/repository/org/xmlunit/xmlunit-core/2.6.3/xmlunit-core-2.6.3.jar:/home/alex/.m2/repository/org/xmlunit/xmlunit-matchers/2.6.3/xmlunit-matchers-2.6.3.jar:/home/alex/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy/2.5.14/groovy-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-ant/2.5.14/groovy-ant-2.5.14.jar:/home/alex/.m2/repository/org/apache/ant/ant/1.9.15/ant-1.9.15.jar:/home/alex/.m2/repository/org/apache/ant/ant-junit/1.9.15/ant-junit-1.9.15.jar:/home/alex/.m2/repository/org/apache/ant/ant-launcher/1.9.15/ant-launcher-1.9.15.jar:/home/alex/.m2/repository/org/apache/ant/ant-antlr/1.9.15/ant-antlr-1.9.15.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-cli-commons/2.5.14/groovy-cli-commons-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-cli-picocli/2.5.14/groovy-cli-picocli-2.5.14.jar:/home/alex/.m2/repository/info/picocli/picocli/4.3.2/picocli-4.3.2.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-console/2.5.14/groovy-console-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-datetime/2.5.14/groovy-datetime-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-docgenerator/2.5.14/groovy-docgenerator-2.5.14.jar:/home/alex/.m2/repository/com/thoughtworks/qdox/qdox/1.12.1/qdox-1.12.1.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-groovydoc/2.5.14/groovy-groovydoc-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-groovysh/2.5.14/groovy-groovysh-2.5.14.jar:/home/alex/.m2/repository/jline/jline/2.14.6/jline-2.14.6.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-jmx/2.5.14/groovy-jmx-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-json/2.5.14/groovy-json-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-jsr223/2.5.14/groovy-jsr223-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-macro/2.5.14/groovy-macro-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-nio/2.5.14/groovy-nio-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-servlet/2.5.14/groovy-servlet-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-sql/2.5.14/groovy-sql-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-swing/2.5.14/groovy-swing-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-templates/2.5.14/groovy-templates-2.5.14.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-test-junit5/2.5.14/groovy-test-junit5-2.5.14.jar:/home/alex/.m2/repository/org/junit/platform/junit-platform-launcher/1.7.2/junit-platform-launcher-1.7.2.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-testng/2.5.14/groovy-testng-2.5.14.jar:/home/alex/.m2/repository/org/testng/testng/6.13.1/testng-6.13.1.jar:/home/alex/.m2/repository/com/beust/jcommander/1.72/jcommander-1.72.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-xml/2.5.14/groovy-xml-2.5.14.jar:/home/alex/.m2/repository/org/slf4j/slf4j-simple/1.7.32/slf4j-simple-1.7.32.jar:/home/alex/.m2/repository/org/slf4j/slf4j-api/1.7.32/slf4j-api-1.7.32.jar:/home/alex/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.7.2/junit-jupiter-api-5.7.2.jar:/home/alex/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/home/alex/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/alex/.m2/repository/org/junit/platform/junit-platform-commons/1.7.2/junit-platform-commons-1.7.2.jar:/home/alex/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.7.2/junit-jupiter-engine-5.7.2.jar:/home/alex/.m2/repository/org/junit/platform/junit-platform-engine/1.7.2/junit-platform-engine-1.7.2.jar:/home/alex/.m2/repository/org/junit/vintage/junit-vintage-engine/5.7.2/junit-vintage-engine-5.7.2.jar:/home/alex/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.7.2/junit-jupiter-params-5.7.2.jar:/home/alex/.m2/repository/org/mockito/mockito-core/3.11.2/mockito-core-3.11.2.jar:/home/alex/.m2/repository/net/bytebuddy/byte-buddy/1.11.3/byte-buddy-1.11.3.jar:/home/alex/.m2/repository/net/bytebuddy/byte-buddy-agent/1.11.3/byte-buddy-agent-1.11.3.jar:/home/alex/.m2/repository/org/objenesis/objenesis/3.2/objenesis-3.2.jar:/home/alex/.m2/repository/org/mockito/mockito-junit-jupiter/3.11.2/mockito-junit-jupiter-3.11.2.jar:/home/alex/.m2/repository/org/codehaus/groovy/groovy-test/2.5.14/groovy-test-2.5.14.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/alex"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-openjdk-amd64/jre"/>
    <property name="basedir" value="/home/alex/Repositories/nifi/nifi-toolkit/nifi-toolkit-encrypt-config"/>
    <property name="file.separator" value="/"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="/home/alex/Repositories/nifi/nifi-toolkit/nifi-toolkit-encrypt-config/target/surefire/surefirebooter8311744955623197704.jar"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="1.8.0_402-8u402-ga-2ubuntu1~22.04-b06"/>
    <property name="java.net.preferIPv4Stack" value="true"/>
    <property name="user.name" value="alex"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="6.5.0-28-generic"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="/home/alex/.m2/repository"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="java.version" value="1.8.0_402"/>
    <property name="user.dir" value="/home/alex/Repositories/nifi/nifi-toolkit/nifi-toolkit-encrypt-config"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Private Build"/>
    <property name="java.vm.version" value="25.402-b06"/>
    <property name="java.specification.maintenance.version" value="5"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="52.0"/>
  </properties>
  <testcase name="testDetermineModeFromArgsReturnsNullOnDecryptWithoutNifiRegistryPresent" classname="org.apache.nifi.toolkit.encryptconfig.EncryptConfigMainTest" time="0.012">
    <system-err><![CDATA[[main] ERROR org.apache.nifi.toolkit.encryptconfig.EncryptConfigMain - The --decrypt flag is only available when running in --nifiRegistry mode and targeting nifi-registry.properties to allow for the inline TLS status check.
]]></system-err>
  </testcase>
  <testcase name="testDetermineModeFromArgsWithNifiRegistryMode" classname="org.apache.nifi.toolkit.encryptconfig.EncryptConfigMainTest" time="0.035"/>
  <testcase name="testShouldPerformFullOperationForNiFiPropertiesAndLoginIdentityProvidersAndAuthorizers" classname="org.apache.nifi.toolkit.encryptconfig.EncryptConfigMainTest" time="0.095">
    <system-out><![CDATA[Tried to exit with status 0.

usage: org.apache.nifi.toolkit.encryptconfig.EncryptConfigMain [-h] [options]

This tool enables easy encryption and decryption of configuration files for NiFi and its sub-projects. Unprotected files can be input to this tool to be
protected by a key in a manner that is understood by NiFi. Protected files, along with a key, can be input to this tool to be unprotected, for troubleshooting
or automation purposes.

 -h,--help           Show usage information (this message)
    --nifiRegistry   Specifies to target NiFi Registry. When this flag is not included, NiFi is the target.

When targeting NiFi:
 -h,--help                                     Show usage information (this message)
 -v,--verbose                                  Sets verbose mode (default false)
 -n,--niFiProperties <file>                    The nifi.properties file containing unprotected config values (will be overwritten unless -o is specified)
 -o,--outputNiFiProperties <file>              The destination nifi.properties file containing protected config values (will not modify input nifi.properties)
 -l,--loginIdentityProviders <file>            The login-identity-providers.xml file containing unprotected config values (will be overwritten unless -i is
                                               specified)
 -i,--outputLoginIdentityProviders <file>      The destination login-identity-providers.xml file containing protected config values (will not modify input
                                               login-identity-providers.xml)
 -a,--authorizers <file>                       The authorizers.xml file containing unprotected config values (will be overwritten unless -u is specified)
 -u,--outputAuthorizers <file>                 The destination authorizers.xml file containing protected config values (will not modify input authorizers.xml)
 -f,--flowXml <file>                           The flow.xml.gz file currently protected with old password (will be overwritten unless -g is specified)
 -g,--outputFlowXml <file>                     The destination flow.xml.gz file containing protected config values (will not modify input flow.xml.gz)
 -b,--bootstrapConf <file>                     The bootstrap.conf file to persist root key and to optionally provide any configuration for the protection
                                               scheme.
 -S,--protectionScheme <protectionScheme>      Selects the protection scheme for encrypted properties.  Valid values are: [AES_GCM, AWS_SECRETSMANAGER, AWS_KMS,
                                               AZURE_KEYVAULT_KEY, AZURE_KEYVAULT_SECRET, GCP_KMS, HASHICORP_VAULT_KV, HASHICORP_VAULT_TRANSIT] (default is
                                               AES_GCM)
 -k,--key <keyhex>                             The raw hexadecimal key to use to encrypt the sensitive properties
 -e,--oldKey <keyhex>                          The old raw hexadecimal key to use during key migration
 -H,--oldProtectionScheme <protectionScheme>   The old protection scheme to use during encryption migration (see --protectionScheme for possible values).
                                               Default is AES_GCM
 -p,--password <password>                      The password from which to derive the key to use to encrypt the sensitive properties
 -w,--oldPassword <password>                   The old password from which to derive the key during migration
 -r,--useRawKey                                If provided, the secure console will prompt for the raw key value in hexadecimal form
 -m,--migrate                                  If provided, the nifi.properties and/or login-identity-providers.xml sensitive properties will be re-encrypted
                                               with the new scheme
 -x,--encryptFlowXmlOnly                       If provided, the properties in flow.xml.gz will be re-encrypted with a new key but the nifi.properties and/or
                                               login-identity-providers.xml files will not be modified
 -s,--propsKey <password|keyhex>               The password or key to use to encrypt the sensitive processor properties in flow.xml.gz
 -A,--newFlowAlgorithm <algorithm>             The algorithm to use to encrypt the sensitive processor properties in flow.xml.gz
 -P,--newFlowProvider <algorithm>              The security provider to use to encrypt the sensitive processor properties in flow.xml.gz
 -c,--translateCli                             Translates the nifi.properties file to a format suitable for the NiFi CLI tool

When targeting NiFi Registry using the --nifiRegistry flag:
 -h,--help                                     Show usage information (this message)
 -v,--verbose                                  Sets verbose mode (default false)
 -p,--password <password>                      Protect the files using a password-derived key. If an argument is not provided to this flag, interactive mode
                                               will be triggered to prompt the user to enter the password.
 -k,--key <keyhex>                             Protect the files using a raw hexadecimal key. If an argument is not provided to this flag, interactive mode will
                                               be triggered to prompt the user to enter the key.
 -S,--protectionScheme <protectionScheme>      Selects the protection scheme for encrypted properties.  Valid values are: [AES_GCM, AWS_SECRETSMANAGER, AWS_KMS,
                                               AZURE_KEYVAULT_KEY, AZURE_KEYVAULT_SECRET, GCP_KMS, HASHICORP_VAULT_KV, HASHICORP_VAULT_TRANSIT] (default is
                                               AES_GCM)
    --oldPassword <password>                   If the input files are already protected using a password-derived key, this specifies the old password so that
                                               the files can be unprotected before re-protecting.
    --oldKey <keyhex>                          If the input files are already protected using a key, this specifies the raw hexadecimal key so that the files
                                               can be unprotected before re-protecting.
 -H,--oldProtectionScheme <protectionScheme>   The old protection scheme to use during encryption migration (see --protectionScheme for possible values).
                                               Default is AES_GCM.
 -b,--bootstrapConf <file>                     The bootstrap.conf file containing no root key or an existing root key, and any other protection scheme
                                               configuration properties. If a new password or key is specified (using -p or -k) and no output bootstrap.conf
                                               file is specified, then this file will be overwritten to persist the new master key.
 -B,--outputBootstrapConf <file>               The destination bootstrap.conf file to persist root key. If specified, the input bootstrap.conf will not be
                                               modified.
 -r,--nifiRegistryProperties <file>            The nifi-registry.properties file containing unprotected config values, overwritten if no output file specified.
 -R,--outputNifiRegistryProperties <file>      The destination nifi-registry.properties file containing protected config values.
 -a,--authorizersXml <file>                    The authorizers.xml file containing unprotected config values, overwritten if no output file specified.
 -A,--outputAuthorizersXml <file>              The destination authorizers.xml file containing protected config values.
 -i,--identityProvidersXml <file>              The identity-providers.xml file containing unprotected config values, overwritten if no output file specified.
 -I,--outputIdentityProvidersXml <file>        The destination identity-providers.xml file containing protected config values.
    --decrypt                                  Can be used with -r to decrypt a previously encrypted NiFi Registry Properties file. Decrypted content is printed
                                               to STDOUT.

]]></system-out>
    <system-err><![CDATA[[main] INFO org.apache.nifi.toolkit.encryptconfig.EncryptConfigMainTest - Original key line from bootstrap.conf: nifi.bootstrap.sensitive.key=
[main] WARN org.apache.nifi.properties.AbstractBootstrapPropertiesLoader - System Property [nifi.properties.file.path] not found: Using Relative Path [conf/nifi.properties]
[main] INFO org.apache.nifi.properties.NiFiPropertiesLoader - Loaded 82 properties from /home/alex/Repositories/nifi/nifi-toolkit/nifi-toolkit-encrypt-config/src/test/resources/nifi_with_sensitive_properties_unprotected.properties
[main] INFO org.apache.nifi.toolkit.encryptconfig.EncryptConfigMainTest - Loaded 82 properties from input file
[main] INFO org.apache.nifi.toolkit.encryptconfig.EncryptConfigMainTest - Original LIP XML content: <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at
      http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!--
    This file lists the login identity providers to use when running securely. In order
    to use a specific provider it must be configured here and it's identifier
    must be specified in the nifi.properties file.
-->
<loginIdentityProviders>
    <!--
        Identity Provider for users logging in with username/password against an LDAP server.
        
        'Authentication Strategy' - How the connection to the LDAP server is authenticated. Possible
            values are ANONYMOUS, SIMPLE, or START_TLS.
        
        'Manager DN' - The DN of the manager that is used to bind to the LDAP server to search for users.
        'Manager Password' - The password of the manager that is used to bind to the LDAP server to
            search for users.
            
        'TLS - Keystore' - Path to the Keystore that is used when connecting to LDAP using START_TLS.
        'TLS - Keystore Password' - Password for the Keystore that is used when connecting to LDAP
            using START_TLS.
        'TLS - Keystore Type' - Type of the Keystore that is used when connecting to LDAP using
            START_TLS (i.e. JKS or PKCS12).
        'TLS - Truststore' - Path to the Truststore that is used when connecting to LDAP using START_TLS.
        'TLS - Truststore Password' - Password for the Truststore that is used when connecting to
            LDAP using START_TLS.
        'TLS - Truststore Type' - Type of the Truststore that is used when connecting to LDAP using
            START_TLS (i.e. JKS or PKCS12).
        'TLS - Client Auth' - Client authentication policy when connecting to LDAP using START_TLS.
            Possible values are REQUIRED, WANT, NONE.
        'TLS - Protocol' - Protocol to use when connecting to LDAP using START_TLS. (i.e. TLS,
            TLSv1.1, TLSv1.2, etc).
        'TLS - Shutdown Gracefully' - Specifies whether the TLS should be shut down gracefully 
            before the target context is closed. Defaults to false.
            
        'Referral Strategy' - Strategy for handling referrals. Possible values are FOLLOW, IGNORE, THROW.
        'Connect Timeout' - Duration of connect timeout. (i.e. 10 secs).
        'Read Timeout' - Duration of read timeout. (i.e. 10 secs).
       
        'Url' - Url of the LDAP servier (i.e. ldap://<hostname>:<port>).
        'User Search Base' - Base DN for searching for users (i.e. CN=Users,DC=example,DC=com).
        'User Search Filter' - Filter for searching for users against the 'User Search Base'.
            (i.e. sAMAccountName={0}). The user specified name is inserted into '{0}'.
            
        'Authentication Expiration' - The duration of how long the user authentication is valid
            for. If the user never logs out, they will be required to log back in following
            this duration.
    -->
    <provider>
        <identifier>ldap-provider</identifier>
        <class>org.apache.nifi.ldap.LdapProvider</class>
        <property name="Authentication Strategy">START_TLS</property>

        <property name="Manager DN">someuser</property>
        <property name="Manager Password">thisIsABadPassword</property>

        <property name="TLS - Keystore"></property>
        <property name="TLS - Keystore Password">thisIsABadPassword</property>
        <property name="TLS - Keystore Type"></property>
        <property name="TLS - Truststore"></property>
        <property name="TLS - Truststore Password">thisIsABadPassword</property>
        <property name="TLS - Truststore Type"></property>
        <property name="TLS - Client Auth"></property>
        <property name="TLS - Protocol"></property>
        <property name="TLS - Shutdown Gracefully"></property>
        
        <property name="Referral Strategy">FOLLOW</property>
        <property name="Connect Timeout">10 secs</property>
        <property name="Read Timeout">10 secs</property>

        <property name="Url"></property>
        <property name="User Search Base"></property>
        <property name="User Search Filter"></property>

        <property name="Authentication Expiration">12 hours</property>
    </provider>

    <!--
        Identity Provider for users logging in with username/password against a Kerberos KDC server.

        'Default Realm' - Default realm to provide when user enters incomplete user principal (i.e. NIFI.APACHE.ORG).
        'Authentication Expiration' - The duration of how long the user authentication is valid for. If the user never logs out, they will be required to log back in following this duration.
    -->
    <!-- To enable the kerberos-provider remove 2 lines. This is 1 of 2.
    <provider>
        <identifier>kerberos-provider</identifier>
        <class>org.apache.nifi.kerberos.KerberosProvider</class>
        <property name="Default Realm">NIFI.APACHE.ORG</property>
        <property name="Authentication Expiration">12 hours</property>
    </provider>
    To enable the kerberos-provider remove 2 lines. This is 2 of 2. -->
</loginIdentityProviders>
[main] INFO org.apache.nifi.toolkit.encryptconfig.EncryptConfigMainTest - Original Authorizers XML content: <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at
      http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!--
    This file lists the userGroupProviders, accessPolicyProviders, and authorizers to use when running securely. In order
    to use a specific authorizer it must be configured here and it's identifier must be specified in the nifi.properties file.
    If the authorizer is a managedAuthorizer, it may need to be configured with an accessPolicyProvider and an userGroupProvider.
    This file allows for configuration of them, but they must be configured in order:

    ...
    all userGroupProviders
    all accessPolicyProviders
    all Authorizers
    ...
-->
<authorizers>

    <!--
        The FileUserGroupProvider will provide support for managing users and groups which is backed by a file
        on the local file system.

        - Users File - The file where the FileUserGroupProvider will store users and groups.

        - Legacy Authorized Users File - The full path to an existing authorized-users.xml that will be automatically
            be used to load the users and groups into the Users File.

        - Initial User Identity [unique key] - The identity of a users and systems to seed the Users File. The name of
            each property must be unique, for example: "Initial User Identity A", "Initial User Identity B",
            "Initial User Identity C" or "Initial User Identity 1", "Initial User Identity 2", "Initial User Identity 3"

            NOTE: Any identity mapping rules specified in nifi.properties will also be applied to the user identities,
            so the values should be the unmapped identities (i.e. full DN from a certificate).
    -->
    <!--
    <userGroupProvider>
        <identifier>file-user-group-provider</identifier>
        <class>org.apache.nifi.authorization.FileUserGroupProvider</class>
        <property name="Users File">./conf/users.xml</property>
        <property name="Legacy Authorized Users File"></property>

        <property name="Initial User Identity 1"></property>
    </userGroupProvider>
    -->

    <!--
        The LdapUserGroupProvider will retrieve users and groups from an LDAP server. The users and groups
        are not configurable.

        'Authentication Strategy' - How the connection to the LDAP server is authenticated. Possible
            values are ANONYMOUS, SIMPLE, LDAPS, or START_TLS.

        'Manager DN' - The DN of the manager that is used to bind to the LDAP server to search for users.
        'Manager Password' - The password of the manager that is used to bind to the LDAP server to
            search for users.

        'TLS - Keystore' - Path to the Keystore that is used when connecting to LDAP using LDAPS or START_TLS.
        'TLS - Keystore Password' - Password for the Keystore that is used when connecting to LDAP
            using LDAPS or START_TLS.
        'TLS - Keystore Type' - Type of the Keystore that is used when connecting to LDAP using
            LDAPS or START_TLS (i.e. JKS or PKCS12).
        'TLS - Truststore' - Path to the Truststore that is used when connecting to LDAP using LDAPS or START_TLS.
        'TLS - Truststore Password' - Password for the Truststore that is used when connecting to
            LDAP using LDAPS or START_TLS.
        'TLS - Truststore Type' - Type of the Truststore that is used when connecting to LDAP using
            LDAPS or START_TLS (i.e. JKS or PKCS12).
        'TLS - Client Auth' - Client authentication policy when connecting to LDAP using LDAPS or START_TLS.
            Possible values are REQUIRED, WANT, NONE.
        'TLS - Protocol' - Protocol to use when connecting to LDAP using LDAPS or START_TLS. (i.e. TLS,
            TLSv1.1, TLSv1.2, etc).
        'TLS - Shutdown Gracefully' - Specifies whether the TLS should be shut down gracefully
            before the target context is closed. Defaults to false.

        'Referral Strategy' - Strategy for handling referrals. Possible values are FOLLOW, IGNORE, THROW.
        'Connect Timeout' - Duration of connect timeout. (i.e. 10 secs).
        'Read Timeout' - Duration of read timeout. (i.e. 10 secs).

        'Url' - Space-separated list of URLs of the LDAP servers (i.e. ldap://<hostname>:<port>).
        'Page Size' - Sets the page size when retrieving users and groups. If not specified, no paging is performed.
        'Sync Interval' - Duration of time between syncing users and groups (i.e. 30 mins). Minimum allowable value is 10 secs.

        'User Search Base' - Base DN for searching for users (i.e. ou=users,o=nifi). Required to search users.
        'User Object Class' - Object class for identifying users (i.e. person). Required if searching users.
        'User Search Scope' - Search scope for searching users (ONE_LEVEL, OBJECT, or SUBTREE). Required if searching users.
        'User Search Filter' - Filter for searching for users against the 'User Search Base' (i.e. (memberof=cn=team1,ou=groups,o=nifi) ). Optional.
        'User Identity Attribute' - Attribute to use to extract user identity (i.e. cn). Optional. If not set, the entire DN is used.
        'User Group Name Attribute' - Attribute to use to define group membership (i.e. memberof). Optional. If not set
            group membership will not be calculated through the users. Will rely on group membership being defined
            through 'Group Member Attribute' if set. The value of this property is the name of the attribute in the user ldap entry that
            associates them with a group. The value of that user attribute could be a dn or group name for instance. What value is expected
            is configured in the 'User Group Name Attribute - Referenced Group Attribute'.
        'User Group Name Attribute - Referenced Group Attribute' - If blank, the value of the attribute defined in 'User Group Name Attribute'
            is expected to be the full dn of the group. If not blank, this property will define the attribute of the group ldap entry that
            the value of the attribute defined in 'User Group Name Attribute' is referencing (i.e. name). Use of this property requires that
            'Group Search Base' is also configured.

        'Group Search Base' - Base DN for searching for groups (i.e. ou=groups,o=nifi). Required to search groups.
        'Group Object Class' - Object class for identifying groups (i.e. groupOfNames). Required if searching groups.
        'Group Search Scope' - Search scope for searching groups (ONE_LEVEL, OBJECT, or SUBTREE). Required if searching groups.
        'Group Search Filter' - Filter for searching for groups against the 'Group Search Base'. Optional.
        'Group Name Attribute' - Attribute to use to extract group name (i.e. cn). Optional. If not set, the entire DN is used.
        'Group Member Attribute' - Attribute to use to define group membership (i.e. member). Optional. If not set
            group membership will not be calculated through the groups. Will rely on group membership being defined
            through 'User Group Name Attribute' if set. The value of this property is the name of the attribute in the group ldap entry that
            associates them with a user. The value of that group attribute could be a dn or memberUid for instance. What value is expected
            is configured in the 'Group Member Attribute - Referenced User Attribute'. (i.e. member: cn=User 1,ou=users,o=nifi vs. memberUid: user1)
        'Group Member Attribute - Referenced User Attribute' - If blank, the value of the attribute defined in 'Group Member Attribute'
            is expected to be the full dn of the user. If not blank, this property will define the attribute of the user ldap entry that
            the value of the attribute defined in 'Group Member Attribute' is referencing (i.e. uid). Use of this property requires that
            'User Search Base' is also configured. (i.e. member: cn=User 1,ou=users,o=nifi vs. memberUid: user1)

        NOTE: Any identity mapping rules specified in nifi.properties will also be applied to the user identities.
            Group names are not mapped.
    -->
    <userGroupProvider>
        <identifier>ldap-user-group-provider</identifier>
        <class>org.apache.nifi.ldap.tenants.LdapUserGroupProvider</class>
        <property name="Authentication Strategy">START_TLS</property>

        <property name="Manager DN">someuser</property>
        <property name="Manager Password">thisIsABadPassword</property>

        <property name="TLS - Keystore"></property>
        <property name="TLS - Keystore Password">thisIsABadPassword</property>
        <property name="TLS - Keystore Type"></property>
        <property name="TLS - Truststore"></property>
        <property name="TLS - Truststore Password">thisIsABadPassword</property>
        <property name="TLS - Truststore Type"></property>
        <property name="TLS - Client Auth"></property>
        <property name="TLS - Protocol"></property>
        <property name="TLS - Shutdown Gracefully"></property>

        <property name="Referral Strategy">FOLLOW</property>
        <property name="Connect Timeout">10 secs</property>
        <property name="Read Timeout">10 secs</property>

        <property name="Url"></property>
        <property name="Page Size"></property>
        <property name="Sync Interval">30 mins</property>

        <property name="User Search Base"></property>
        <property name="User Object Class">person</property>
        <property name="User Search Scope">ONE_LEVEL</property>
        <property name="User Search Filter"></property>
        <property name="User Identity Attribute"></property>
        <property name="User Group Name Attribute"></property>
        <property name="User Group Name Attribute - Referenced Group Attribute"></property>

        <property name="Group Search Base"></property>
        <property name="Group Object Class">group</property>
        <property name="Group Search Scope">ONE_LEVEL</property>
        <property name="Group Search Filter"></property>
        <property name="Group Name Attribute"></property>
        <property name="Group Member Attribute"></property>
        <property name="Group Member Attribute - Referenced User Attribute"></property>
    </userGroupProvider>

    <!--
        The CompositeUserGroupProvider will provide support for retrieving users and groups from multiple sources.

        - User Group Provider [unique key] - The identifier of user group providers to load from. The name of
            each property must be unique, for example: "User Group Provider A", "User Group Provider B",
            "User Group Provider C" or "User Group Provider 1", "User Group Provider 2", "User Group Provider 3"

            NOTE: Any identity mapping rules specified in nifi.properties are not applied in this implementation. This behavior
            would need to be applied by the base implementation.
    -->
    <!-- To enable the composite-user-group-provider remove 2 lines. This is 1 of 2.
    <userGroupProvider>
        <identifier>composite-user-group-provider</identifier>
        <class>org.apache.nifi.authorization.CompositeUserGroupProvider</class>
        <property name="User Group Provider 1"></property>
    </userGroupProvider>
    To enable the composite-user-group-provider remove 2 lines. This is 2 of 2. -->

    <!--
        The CompositeConfigurableUserGroupProvider will provide support for retrieving users and groups from multiple sources.
        Additionally, a single configurable user group provider is required. Users from the configurable user group provider
        are configurable, however users loaded from one of the User Group Provider [unique key] will not be.

        - Configurable User Group Provider - A configurable user group provider.

        - User Group Provider [unique key] - The identifier of user group providers to load from. The name of
            each property must be unique, for example: "User Group Provider A", "User Group Provider B",
            "User Group Provider C" or "User Group Provider 1", "User Group Provider 2", "User Group Provider 3"

            NOTE: Any identity mapping rules specified in nifi.properties are not applied in this implementation. This behavior
            would need to be applied by the base implementation.
    -->
    <!-- To enable the composite-configurable-user-group-provider remove 2 lines. This is 1 of 2.
    <userGroupProvider>
        <identifier>composite-configurable-user-group-provider</identifier>
        <class>org.apache.nifi.authorization.CompositeConfigurableUserGroupProvider</class>
        <property name="Configurable User Group Provider">file-user-group-provider</property>
        <property name="User Group Provider 1"></property>
    </userGroupProvider>
    To enable the composite-configurable-user-group-provider remove 2 lines. This is 2 of 2. -->

    <!--
        The FileAccessPolicyProvider will provide support for managing access policies which is backed by a file
        on the local file system.

        - User Group Provider - The identifier for an User Group Provider defined above that will be used to access
            users and groups for use in the managed access policies.

        - Authorizations File - The file where the FileAccessPolicyProvider will store policies.

        - Initial Admin Identity - The identity of an initial admin user that will be granted access to the UI and
            given the ability to create additional users, groups, and policies. The value of this property could be
            a DN when using certificates or LDAP, or a Kerberos principal. This property will only be used when there
            are no other policies defined. If this property is specified then a Legacy Authorized Users File can not be specified.

            NOTE: Any identity mapping rules specified in nifi.properties will also be applied to the initial admin identity,
            so the value should be the unmapped identity. This identity must be found in the configured User Group Provider.

        - Legacy Authorized Users File - The full path to an existing authorized-users.xml that will be automatically
            converted to the new authorizations model. If this property is specified then an Initial Admin Identity can
            not be specified, and this property will only be used when there are no other users, groups, and policies defined.

            NOTE: Any users in the legacy users file must be found in the configured User Group Provider.

        - Node Identity [unique key] - The identity of a NiFi cluster node. When clustered, a property for each node
            should be defined, so that every node knows about every other node. If not clustered these properties can be ignored.
            The name of each property must be unique, for example for a three node cluster:
            "Node Identity A", "Node Identity B", "Node Identity C" or "Node Identity 1", "Node Identity 2", "Node Identity 3"

            NOTE: Any identity mapping rules specified in nifi.properties will also be applied to the node identities,
            so the values should be the unmapped identities (i.e. full DN from a certificate). This identity must be found
            in the configured User Group Provider.
    -->
    <accessPolicyProvider>
        <identifier>file-access-policy-provider</identifier>
        <class>org.apache.nifi.authorization.FileAccessPolicyProvider</class>
        <property name="User Group Provider">ldap-user-group-provider</property>
        <property name="Authorizations File">./conf/authorizations.xml</property>
        <property name="Initial Admin Identity"></property>
        <property name="Legacy Authorized Users File"></property>

        <property name="Node Identity 1"></property>
    </accessPolicyProvider>

    <!--
        The StandardManagedAuthorizer. This authorizer implementation must be configured with the
        Access Policy Provider which it will use to access and manage users, groups, and policies.
        These users, groups, and policies will be used to make all access decisions during authorization
        requests.

        - Access Policy Provider - The identifier for an Access Policy Provider defined above.
    -->
    <authorizer>
        <identifier>managed-authorizer</identifier>
        <class>org.apache.nifi.authorization.StandardManagedAuthorizer</class>
        <property name="Access Policy Provider">file-access-policy-provider</property>
    </authorizer>

    <!--
        NOTE: This Authorizer has been replaced with the more granular approach configured above with the Standard
        Managed Authorizer. However, it is still available for backwards compatibility reasons.

        The FileAuthorizer is NiFi's provided authorizer and has the following properties:

        - Authorizations File - The file where the FileAuthorizer will store policies.

        - Users File - The file where the FileAuthorizer will store users and groups.

        - Initial Admin Identity - The identity of an initial admin user that will be granted access to the UI and
            given the ability to create additional users, groups, and policies. The value of this property could be
            a DN when using certificates or LDAP, or a Kerberos principal. This property will only be used when there
            are no other users, groups, and policies defined. If this property is specified then a Legacy Authorized
            Users File can not be specified.

            NOTE: Any identity mapping rules specified in nifi.properties will also be applied to the initial admin identity,
            so the value should be the unmapped identity.

        - Legacy Authorized Users File - The full path to an existing authorized-users.xml that will be automatically
            converted to the new authorizations model. If this property is specified then an Initial Admin Identity can
            not be specified, and this property will only be used when there are no other users, groups, and policies defined.

        - Node Identity [unique key] - The identity of a NiFi cluster node. When clustered, a property for each node
            should be defined, so that every node knows about every other node. If not clustered these properties can be ignored.
            The name of each property must be unique, for example for a three node cluster:
            "Node Identity A", "Node Identity B", "Node Identity C" or "Node Identity 1", "Node Identity 2", "Node Identity 3"

            NOTE: Any identity mapping rules specified in nifi.properties will also be applied to the node identities,
            so the values should be the unmapped identities (i.e. full DN from a certificate).
    -->
    <!-- <authorizer>
        <identifier>file-provider</identifier>
        <class>org.apache.nifi.authorization.FileAuthorizer</class>
        <property name="Authorizations File">./conf/authorizations.xml</property>
        <property name="Users File">./conf/users.xml</property>
        <property name="Initial Admin Identity"></property>
        <property name="Legacy Authorized Users File"></property>

        <property name="Node Identity 1"></property>
    </authorizer>
    -->
</authorizers>
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - Handling encryption of nifi.properties
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - Handling encryption of login-identity-providers.xml
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - Handling encryption of authorizers.xml
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool -        bootstrap.conf:               target/tmp/tmp_bootstrap.conf
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - (src)  nifi.properties:              src/test/resources/nifi_with_sensitive_properties_unprotected.properties
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - (dest) nifi.properties:              target/tmp/tmp_nifi.properties
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - (src)  login-identity-providers.xml: src/test/resources/login-identity-providers-populated.xml
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - (dest) login-identity-providers.xml: target/tmp/tmp-lip.xml
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - (src)  authorizers.xml:              src/test/resources/authorizers-populated.xml
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - (dest) authorizers.xml:              target/tmp/tmp-authorizers.xml
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - (src)  flow.xml.gz:                  src/test/resources/flow.xml.gz
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - (dest) flow.xml.gz:                  null
[main] INFO org.apache.nifi.properties.NiFiPropertiesLoader - Loaded 82 properties from /home/alex/Repositories/nifi/nifi-toolkit/nifi-toolkit-encrypt-config/src/test/resources/nifi_with_sensitive_properties_unprotected.properties
[main] INFO org.apache.nifi.properties.NiFiPropertiesLoader - Loaded 82 properties from /home/alex/Repositories/nifi/nifi-toolkit/nifi-toolkit-encrypt-config/src/test/resources/nifi_with_sensitive_properties_unprotected.properties
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - Loaded NiFiProperties instance with 82 properties
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - Loaded login identity providers content (105 lines)
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - No encrypted password property elements found in login-identity-providers.xml
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - Attempting to encrypt property using protection scheme aes/gcm/256
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - Attempting to encrypt property using protection scheme aes/gcm/256
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - Attempting to encrypt property using protection scheme aes/gcm/256
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - Updated XML content: <?xml version="1.0" encoding="UTF-8"?><loginIdentityProviders>
    
    <provider>
        <identifier>ldap-provider</identifier>
        <class>org.apache.nifi.ldap.LdapProvider</class>
        <property name="Authentication Strategy">START_TLS</property>

        <property name="Manager DN">someuser</property>
        <property name="Manager Password" encryption="aes/gcm/256">PLABWQRfEUeJGYCW||1X5E9GpAZUAHKPGdcSq/UIJpVrQyei4siGg62WEvXoJYiA</property>

        <property name="TLS - Keystore"/>
        <property name="TLS - Keystore Password" encryption="aes/gcm/256">H1h+p90okg5vhDsT||t2uFclCXEPnnh9LO/tJKBLoZrooDSTr+qSMtjBC7XGnlUw</property>
        <property name="TLS - Keystore Type"/>
        <property name="TLS - Truststore"/>
        <property name="TLS - Truststore Password" encryption="aes/gcm/256">v9j3KeH37S2sMcbP||wJp8pS/uGIpWJArMgsrrlNK/y5wBf6k72c5XROao5yF0CQ</property>
        <property name="TLS - Truststore Type"/>
        <property name="TLS - Client Auth"/>
        <property name="TLS - Protocol"/>
        <property name="TLS - Shutdown Gracefully"/>
        
        <property name="Referral Strategy">FOLLOW</property>
        <property name="Connect Timeout">10 secs</property>
        <property name="Read Timeout">10 secs</property>

        <property name="Url"/>
        <property name="User Search Base"/>
        <property name="User Search Filter"/>

        <property name="Authentication Expiration">12 hours</property>
    </provider>

    
    
</loginIdentityProviders>

[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - Loaded authorizers content (309 lines)
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - No encrypted password property elements found in authorizers.xml
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - Attempting to encrypt property using protection scheme aes/gcm/256
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - Attempting to encrypt property using protection scheme aes/gcm/256
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - Attempting to encrypt property using protection scheme aes/gcm/256
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - Updated XML content: <?xml version="1.0" encoding="UTF-8"?><authorizers>

    
    

    
    <userGroupProvider>
        <identifier>ldap-user-group-provider</identifier>
        <class>org.apache.nifi.ldap.tenants.LdapUserGroupProvider</class>
        <property name="Authentication Strategy">START_TLS</property>

        <property name="Manager DN">someuser</property>
        <property name="Manager Password" encryption="aes/gcm/256">qPxuXXD7LABjHPNn||P8pvCicHgwZAyp/nlvDT362hRsd+JEBZ2m0D4ue/0GOhwg</property>

        <property name="TLS - Keystore"/>
        <property name="TLS - Keystore Password" encryption="aes/gcm/256">Ghn+R0xa71M1MBlq||5ssKx63OSOoeantPInlGDSRPM3y5R98/RDrRhmfFdZDJ4Q</property>
        <property name="TLS - Keystore Type"/>
        <property name="TLS - Truststore"/>
        <property name="TLS - Truststore Password" encryption="aes/gcm/256">v9veCklqgHw5ogfn||eR7nB4M5CoAsequiUd6YgOM4YjOiA2oq2kixiTb0tshN5Q</property>
        <property name="TLS - Truststore Type"/>
        <property name="TLS - Client Auth"/>
        <property name="TLS - Protocol"/>
        <property name="TLS - Shutdown Gracefully"/>

        <property name="Referral Strategy">FOLLOW</property>
        <property name="Connect Timeout">10 secs</property>
        <property name="Read Timeout">10 secs</property>

        <property name="Url"/>
        <property name="Page Size"/>
        <property name="Sync Interval">30 mins</property>

        <property name="User Search Base"/>
        <property name="User Object Class">person</property>
        <property name="User Search Scope">ONE_LEVEL</property>
        <property name="User Search Filter"/>
        <property name="User Identity Attribute"/>
        <property name="User Group Name Attribute"/>
        <property name="User Group Name Attribute - Referenced Group Attribute"/>

        <property name="Group Search Base"/>
        <property name="Group Object Class">group</property>
        <property name="Group Search Scope">ONE_LEVEL</property>
        <property name="Group Search Filter"/>
        <property name="Group Name Attribute"/>
        <property name="Group Member Attribute"/>
        <property name="Group Member Attribute - Referenced User Attribute"/>
    </userGroupProvider>

    
    

    
    

    
    <accessPolicyProvider>
        <identifier>file-access-policy-provider</identifier>
        <class>org.apache.nifi.authorization.FileAccessPolicyProvider</class>
        <property name="User Group Provider">ldap-user-group-provider</property>
        <property name="Authorizations File">./conf/authorizations.xml</property>
        <property name="Initial Admin Identity"/>
        <property name="Legacy Authorized Users File"/>

        <property name="Node Identity 1"/>
    </accessPolicyProvider>

    
    <authorizer>
        <identifier>managed-authorizer</identifier>
        <class>org.apache.nifi.authorization.StandardManagedAuthorizer</class>
        <property name="Access Policy Provider">file-access-policy-provider</property>
    </authorizer>

    
    
</authorizers>

[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - Protected nifi.security.keyPasswd with aes/gcm/256 -> 	PcmYxXvn4eaJfR/q||WMQPAv5P1D9f/8PFFmBjU0sIa21GkB6cM4kWCWU+mWDxjfMgOA
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - Updated protection key nifi.security.keyPasswd.protected
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - Protected nifi.security.keystorePasswd with aes/gcm/256 -> 	sfN+uqm6EkfVv2Us||Qi1qnLV+ngc8BermedaeypoBWm8QPEijSU1ds4BqUylxYml3T2ZohCw5
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - Updated protection key nifi.security.keystorePasswd.protected
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - Protected nifi.sensitive.props.key with aes/gcm/256 -> 	ojYy+MqdeqtL4V5+||kDvSEaQM9ylo+WugWodgV/LDWA1Y6bXzRjJEfPfA+deOgwmtSdUAaQaTEcRvwQ
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - Updated protection key nifi.sensitive.props.key.protected
[main] INFO org.apache.nifi.properties.ConfigEncryptionTool - Final result: 85 keys including 3 protected keys
[main] ERROR org.apache.nifi.toolkit.encryptconfig.EncryptConfigMain - 
org.junit.contrib.java.lang.system.internal.CheckExitCalled: Tried to exit with status 0.
	at org.junit.contrib.java.lang.system.internal.NoExitSecurityManager.checkExit(NoExitSecurityManager.java:24)
	at java.lang.Runtime.exit(Runtime.java:101)
	at java.lang.System.exit(System.java:987)
	at java_lang_System$exit$1.call(Unknown Source)
	at org.apache.nifi.properties.ConfigEncryptionTool.main(ConfigEncryptionTool.groovy:1505)
	at org.apache.nifi.properties.ConfigEncryptionTool$main.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:127)
	at org.apache.nifi.toolkit.encryptconfig.LegacyMode.run(LegacyMode.groovy:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSite.invoke(PogoMetaMethodSite.java:167)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:70)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:127)
	at org.apache.nifi.toolkit.encryptconfig.EncryptConfigMain.main(EncryptConfigMain.groovy:109)
	at org.apache.nifi.toolkit.encryptconfig.EncryptConfigMain$main$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:127)
	at org.apache.nifi.toolkit.encryptconfig.EncryptConfigMainTest.testShouldPerformFullOperationForNiFiPropertiesAndLoginIdentityProvidersAndAuthorizers(EncryptConfigMainTest.groovy:278)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.contrib.java.lang.system.ExpectedSystemExit$1.evaluate(ExpectedSystemExit.java:130)
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:54)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
[main] INFO org.apache.nifi.toolkit.encryptconfig.EncryptConfigMainTest - Updated nifi.properties:
[main] INFO org.apache.nifi.toolkit.encryptconfig.EncryptConfigMainTest - 

# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Core Properties #
nifi.flow.configuration.file=./target/flow.xml.gz
nifi.flow.configuration.archive.dir=./target/archive/
nifi.flowcontroller.autoResumeState=true
nifi.flowcontroller.graceful.shutdown.period=10 sec
nifi.flowservice.writedelay.interval=2 sec
nifi.administrative.yield.duration=30 sec

nifi.reporting.task.configuration.file=./target/reporting-tasks.xml
nifi.controller.service.configuration.file=./target/controller-services.xml
nifi.templates.directory=./target/templates
nifi.ui.banner.text=UI Banner Text
nifi.ui.autorefresh.interval=30 sec
nifi.nar.library.directory=./target/resources/NiFiProperties/lib/
nifi.nar.library.directory.alt=./target/resources/NiFiProperties/lib2/
nifi.nar.working.directory=./target/work/nar/

# H2 Settings
nifi.database.directory=./target/database_repository
nifi.h2.url.append=;LOCK_TIMEOUT=25000;WRITE_DELAY=0;AUTO_SERVER=FALSE

# FlowFile Repository
nifi.flowfile.repository.directory=./target/test-repo
nifi.flowfile.repository.partitions=1
nifi.flowfile.repository.checkpoint.interval=2 mins
nifi.queue.swap.threshold=20000
nifi.swap.storage.directory=./target/test-repo/swap
nifi.swap.in.period=5 sec
nifi.swap.in.threads=1
nifi.swap.out.period=5 sec
nifi.swap.out.threads=4

# Content Repository
nifi.content.claim.max.appendable.size=10 MB
nifi.content.claim.max.flow.files=100
nifi.content.repository.directory.default=./target/content_repository

# Provenance Repository Properties
nifi.provenance.repository.storage.directory=./target/provenance_repository
nifi.provenance.repository.max.storage.time=24 hours
nifi.provenance.repository.max.storage.size=1 GB
nifi.provenance.repository.rollover.time=30 secs
nifi.provenance.repository.rollover.size=100 MB

# Site to Site properties
nifi.remote.input.socket.port=9990
nifi.remote.input.secure=true

# web properties #
nifi.web.war.directory=./target/lib
nifi.web.http.host=
nifi.web.http.port=
nifi.web.https.host=nifi.nifi.apache.org
nifi.web.https.port=8443
nifi.web.jetty.working.directory=./target/work/jetty

# security properties #
nifi.sensitive.props.key=ojYy+MqdeqtL4V5+||kDvSEaQM9ylo+WugWodgV/LDWA1Y6bXzRjJEfPfA+deOgwmtSdUAaQaTEcRvwQ
nifi.sensitive.props.key.protected=aes/gcm/256
nifi.sensitive.props.algorithm=PBEWITHMD5AND256BITAES-CBC-OPENSSL
nifi.sensitive.props.additional.keys=

nifi.security.keystore=/path/to/keystore.jks
nifi.security.keystoreType=JKS
nifi.security.keystorePasswd=sfN+uqm6EkfVv2Us||Qi1qnLV+ngc8BermedaeypoBWm8QPEijSU1ds4BqUylxYml3T2ZohCw5
nifi.security.keystorePasswd.protected=aes/gcm/256
nifi.security.keyPasswd=PcmYxXvn4eaJfR/q||WMQPAv5P1D9f/8PFFmBjU0sIa21GkB6cM4kWCWU+mWDxjfMgOA
nifi.security.keyPasswd.protected=aes/gcm/256
nifi.security.truststore=
nifi.security.truststoreType=
nifi.security.truststorePasswd=
nifi.security.user.authorizer=

# cluster common properties (cluster manager and nodes must have same values) #
nifi.cluster.protocol.heartbeat.interval=5 sec
nifi.cluster.protocol.is.secure=false
nifi.cluster.protocol.socket.timeout=30 sec
nifi.cluster.protocol.connection.handshake.timeout=45 sec
# if multicast is used, then nifi.cluster.protocol.multicast.xxx properties must be configured #
nifi.cluster.protocol.use.multicast=false
nifi.cluster.protocol.multicast.address=
nifi.cluster.protocol.multicast.port=
nifi.cluster.protocol.multicast.service.broadcast.delay=500 ms
nifi.cluster.protocol.multicast.service.locator.attempts=3
nifi.cluster.protocol.multicast.service.locator.attempts.delay=1 sec

# cluster node properties (only configure for cluster nodes) #
nifi.cluster.is.node=false
nifi.cluster.node.address=
nifi.cluster.node.protocol.port=
nifi.cluster.node.protocol.threads=2
# if multicast is not used, nifi.cluster.node.unicast.xxx must have same values as nifi.cluster.manager.xxx #
nifi.cluster.node.unicast.manager.address=
nifi.cluster.node.unicast.manager.protocol.port=
nifi.cluster.node.unicast.manager.authority.provider.port=

# cluster manager properties (only configure for cluster manager) #
nifi.cluster.is.manager=false
nifi.cluster.manager.address=
nifi.cluster.manager.protocol.port=
nifi.cluster.manager.authority.provider.port=
nifi.cluster.manager.authority.provider.threads=10
nifi.cluster.manager.node.firewall.file=
nifi.cluster.manager.node.event.history.size=10
nifi.cluster.manager.node.api.connection.timeout=30 sec
nifi.cluster.manager.node.api.read.timeout=30 sec
nifi.cluster.manager.node.api.request.threads=10
nifi.cluster.manager.flow.retrieval.delay=5 sec
nifi.cluster.manager.protocol.threads=10
nifi.cluster.manager.safemode.duration=0 sec
[main] INFO org.apache.nifi.properties.NiFiPropertiesLoader - Loaded 85 properties from /home/alex/Repositories/nifi/nifi-toolkit/nifi-toolkit-encrypt-config/target/tmp/tmp_nifi.properties
[main] INFO org.apache.nifi.toolkit.encryptconfig.EncryptConfigMainTest - Updated LIP XML content: <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at
      http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!--
    This file lists the login identity providers to use when running securely. In order
    to use a specific provider it must be configured here and it's identifier
    must be specified in the nifi.properties file.
-->
<loginIdentityProviders>
    <!--
        Identity Provider for users logging in with username/password against an LDAP server.
        
        'Authentication Strategy' - How the connection to the LDAP server is authenticated. Possible
            values are ANONYMOUS, SIMPLE, or START_TLS.
        
        'Manager DN' - The DN of the manager that is used to bind to the LDAP server to search for users.
        'Manager Password' - The password of the manager that is used to bind to the LDAP server to
            search for users.
            
        'TLS - Keystore' - Path to the Keystore that is used when connecting to LDAP using START_TLS.
        'TLS - Keystore Password' - Password for the Keystore that is used when connecting to LDAP
            using START_TLS.
        'TLS - Keystore Type' - Type of the Keystore that is used when connecting to LDAP using
            START_TLS (i.e. JKS or PKCS12).
        'TLS - Truststore' - Path to the Truststore that is used when connecting to LDAP using START_TLS.
        'TLS - Truststore Password' - Password for the Truststore that is used when connecting to
            LDAP using START_TLS.
        'TLS - Truststore Type' - Type of the Truststore that is used when connecting to LDAP using
            START_TLS (i.e. JKS or PKCS12).
        'TLS - Client Auth' - Client authentication policy when connecting to LDAP using START_TLS.
            Possible values are REQUIRED, WANT, NONE.
        'TLS - Protocol' - Protocol to use when connecting to LDAP using START_TLS. (i.e. TLS,
            TLSv1.1, TLSv1.2, etc).
        'TLS - Shutdown Gracefully' - Specifies whether the TLS should be shut down gracefully 
            before the target context is closed. Defaults to false.
            
        'Referral Strategy' - Strategy for handling referrals. Possible values are FOLLOW, IGNORE, THROW.
        'Connect Timeout' - Duration of connect timeout. (i.e. 10 secs).
        'Read Timeout' - Duration of read timeout. (i.e. 10 secs).
       
        'Url' - Url of the LDAP servier (i.e. ldap://<hostname>:<port>).
        'User Search Base' - Base DN for searching for users (i.e. CN=Users,DC=example,DC=com).
        'User Search Filter' - Filter for searching for users against the 'User Search Base'.
            (i.e. sAMAccountName={0}). The user specified name is inserted into '{0}'.
            
        'Authentication Expiration' - The duration of how long the user authentication is valid
            for. If the user never logs out, they will be required to log back in following
            this duration.
    -->
    <provider>
        <identifier>ldap-provider</identifier>
        <class>org.apache.nifi.ldap.LdapProvider</class>
        <property name="Authentication Strategy">START_TLS</property>

        <property name="Manager DN">someuser</property>
        <property encryption="aes/gcm/256" name="Manager Password">PLABWQRfEUeJGYCW||1X5E9GpAZUAHKPGdcSq/UIJpVrQyei4siGg62WEvXoJYiA</property>

        <property name="TLS - Keystore"/>
        <property encryption="aes/gcm/256" name="TLS - Keystore Password">H1h+p90okg5vhDsT||t2uFclCXEPnnh9LO/tJKBLoZrooDSTr+qSMtjBC7XGnlUw</property>
        <property name="TLS - Keystore Type"/>
        <property name="TLS - Truststore"/>
        <property encryption="aes/gcm/256" name="TLS - Truststore Password">v9j3KeH37S2sMcbP||wJp8pS/uGIpWJArMgsrrlNK/y5wBf6k72c5XROao5yF0CQ</property>
        <property name="TLS - Truststore Type"/>
        <property name="TLS - Client Auth"/>
        <property name="TLS - Protocol"/>
        <property name="TLS - Shutdown Gracefully"/>
        
        <property name="Referral Strategy">FOLLOW</property>
        <property name="Connect Timeout">10 secs</property>
        <property name="Read Timeout">10 secs</property>

        <property name="Url"/>
        <property name="User Search Base"/>
        <property name="User Search Filter"/>

        <property name="Authentication Expiration">12 hours</property>
    </provider>


    <!--
        Identity Provider for users logging in with username/password against a Kerberos KDC server.

        'Default Realm' - Default realm to provide when user enters incomplete user principal (i.e. NIFI.APACHE.ORG).
        'Authentication Expiration' - The duration of how long the user authentication is valid for. If the user never logs out, they will be required to log back in following this duration.
    -->
    <!-- To enable the kerberos-provider remove 2 lines. This is 1 of 2.
    <provider>
        <identifier>kerberos-provider</identifier>
        <class>org.apache.nifi.kerberos.KerberosProvider</class>
        <property name="Default Realm">NIFI.APACHE.ORG</property>
        <property name="Authentication Expiration">12 hours</property>
    </provider>
    To enable the kerberos-provider remove 2 lines. This is 2 of 2. -->
</loginIdentityProviders>
[main] INFO org.apache.nifi.toolkit.encryptconfig.EncryptConfigMainTest - Updated Authorizers XML content: <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at
      http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!--
    This file lists the userGroupProviders, accessPolicyProviders, and authorizers to use when running securely. In order
    to use a specific authorizer it must be configured here and it's identifier must be specified in the nifi.properties file.
    If the authorizer is a managedAuthorizer, it may need to be configured with an accessPolicyProvider and an userGroupProvider.
    This file allows for configuration of them, but they must be configured in order:

    ...
    all userGroupProviders
    all accessPolicyProviders
    all Authorizers
    ...
-->
<authorizers>

    <!--
        The FileUserGroupProvider will provide support for managing users and groups which is backed by a file
        on the local file system.

        - Users File - The file where the FileUserGroupProvider will store users and groups.

        - Legacy Authorized Users File - The full path to an existing authorized-users.xml that will be automatically
            be used to load the users and groups into the Users File.

        - Initial User Identity [unique key] - The identity of a users and systems to seed the Users File. The name of
            each property must be unique, for example: "Initial User Identity A", "Initial User Identity B",
            "Initial User Identity C" or "Initial User Identity 1", "Initial User Identity 2", "Initial User Identity 3"

            NOTE: Any identity mapping rules specified in nifi.properties will also be applied to the user identities,
            so the values should be the unmapped identities (i.e. full DN from a certificate).
    -->
    <!--
    <userGroupProvider>
        <identifier>file-user-group-provider</identifier>
        <class>org.apache.nifi.authorization.FileUserGroupProvider</class>
        <property name="Users File">./conf/users.xml</property>
        <property name="Legacy Authorized Users File"></property>

        <property name="Initial User Identity 1"></property>
    </userGroupProvider>
    -->

    <!--
        The LdapUserGroupProvider will retrieve users and groups from an LDAP server. The users and groups
        are not configurable.

        'Authentication Strategy' - How the connection to the LDAP server is authenticated. Possible
            values are ANONYMOUS, SIMPLE, LDAPS, or START_TLS.

        'Manager DN' - The DN of the manager that is used to bind to the LDAP server to search for users.
        'Manager Password' - The password of the manager that is used to bind to the LDAP server to
            search for users.

        'TLS - Keystore' - Path to the Keystore that is used when connecting to LDAP using LDAPS or START_TLS.
        'TLS - Keystore Password' - Password for the Keystore that is used when connecting to LDAP
            using LDAPS or START_TLS.
        'TLS - Keystore Type' - Type of the Keystore that is used when connecting to LDAP using
            LDAPS or START_TLS (i.e. JKS or PKCS12).
        'TLS - Truststore' - Path to the Truststore that is used when connecting to LDAP using LDAPS or START_TLS.
        'TLS - Truststore Password' - Password for the Truststore that is used when connecting to
            LDAP using LDAPS or START_TLS.
        'TLS - Truststore Type' - Type of the Truststore that is used when connecting to LDAP using
            LDAPS or START_TLS (i.e. JKS or PKCS12).
        'TLS - Client Auth' - Client authentication policy when connecting to LDAP using LDAPS or START_TLS.
            Possible values are REQUIRED, WANT, NONE.
        'TLS - Protocol' - Protocol to use when connecting to LDAP using LDAPS or START_TLS. (i.e. TLS,
            TLSv1.1, TLSv1.2, etc).
        'TLS - Shutdown Gracefully' - Specifies whether the TLS should be shut down gracefully
            before the target context is closed. Defaults to false.

        'Referral Strategy' - Strategy for handling referrals. Possible values are FOLLOW, IGNORE, THROW.
        'Connect Timeout' - Duration of connect timeout. (i.e. 10 secs).
        'Read Timeout' - Duration of read timeout. (i.e. 10 secs).

        'Url' - Space-separated list of URLs of the LDAP servers (i.e. ldap://<hostname>:<port>).
        'Page Size' - Sets the page size when retrieving users and groups. If not specified, no paging is performed.
        'Sync Interval' - Duration of time between syncing users and groups (i.e. 30 mins). Minimum allowable value is 10 secs.

        'User Search Base' - Base DN for searching for users (i.e. ou=users,o=nifi). Required to search users.
        'User Object Class' - Object class for identifying users (i.e. person). Required if searching users.
        'User Search Scope' - Search scope for searching users (ONE_LEVEL, OBJECT, or SUBTREE). Required if searching users.
        'User Search Filter' - Filter for searching for users against the 'User Search Base' (i.e. (memberof=cn=team1,ou=groups,o=nifi) ). Optional.
        'User Identity Attribute' - Attribute to use to extract user identity (i.e. cn). Optional. If not set, the entire DN is used.
        'User Group Name Attribute' - Attribute to use to define group membership (i.e. memberof). Optional. If not set
            group membership will not be calculated through the users. Will rely on group membership being defined
            through 'Group Member Attribute' if set. The value of this property is the name of the attribute in the user ldap entry that
            associates them with a group. The value of that user attribute could be a dn or group name for instance. What value is expected
            is configured in the 'User Group Name Attribute - Referenced Group Attribute'.
        'User Group Name Attribute - Referenced Group Attribute' - If blank, the value of the attribute defined in 'User Group Name Attribute'
            is expected to be the full dn of the group. If not blank, this property will define the attribute of the group ldap entry that
            the value of the attribute defined in 'User Group Name Attribute' is referencing (i.e. name). Use of this property requires that
            'Group Search Base' is also configured.

        'Group Search Base' - Base DN for searching for groups (i.e. ou=groups,o=nifi). Required to search groups.
        'Group Object Class' - Object class for identifying groups (i.e. groupOfNames). Required if searching groups.
        'Group Search Scope' - Search scope for searching groups (ONE_LEVEL, OBJECT, or SUBTREE). Required if searching groups.
        'Group Search Filter' - Filter for searching for groups against the 'Group Search Base'. Optional.
        'Group Name Attribute' - Attribute to use to extract group name (i.e. cn). Optional. If not set, the entire DN is used.
        'Group Member Attribute' - Attribute to use to define group membership (i.e. member). Optional. If not set
            group membership will not be calculated through the groups. Will rely on group membership being defined
            through 'User Group Name Attribute' if set. The value of this property is the name of the attribute in the group ldap entry that
            associates them with a user. The value of that group attribute could be a dn or memberUid for instance. What value is expected
            is configured in the 'Group Member Attribute - Referenced User Attribute'. (i.e. member: cn=User 1,ou=users,o=nifi vs. memberUid: user1)
        'Group Member Attribute - Referenced User Attribute' - If blank, the value of the attribute defined in 'Group Member Attribute'
            is expected to be the full dn of the user. If not blank, this property will define the attribute of the user ldap entry that
            the value of the attribute defined in 'Group Member Attribute' is referencing (i.e. uid). Use of this property requires that
            'User Search Base' is also configured. (i.e. member: cn=User 1,ou=users,o=nifi vs. memberUid: user1)

        NOTE: Any identity mapping rules specified in nifi.properties will also be applied to the user identities.
            Group names are not mapped.
    -->
    <userGroupProvider>
        <identifier>ldap-user-group-provider</identifier>
        <class>org.apache.nifi.ldap.tenants.LdapUserGroupProvider</class>
        <property name="Authentication Strategy">START_TLS</property>

        <property name="Manager DN">someuser</property>
        <property encryption="aes/gcm/256" name="Manager Password">qPxuXXD7LABjHPNn||P8pvCicHgwZAyp/nlvDT362hRsd+JEBZ2m0D4ue/0GOhwg</property>

        <property name="TLS - Keystore"/>
        <property encryption="aes/gcm/256" name="TLS - Keystore Password">Ghn+R0xa71M1MBlq||5ssKx63OSOoeantPInlGDSRPM3y5R98/RDrRhmfFdZDJ4Q</property>
        <property name="TLS - Keystore Type"/>
        <property name="TLS - Truststore"/>
        <property encryption="aes/gcm/256" name="TLS - Truststore Password">v9veCklqgHw5ogfn||eR7nB4M5CoAsequiUd6YgOM4YjOiA2oq2kixiTb0tshN5Q</property>
        <property name="TLS - Truststore Type"/>
        <property name="TLS - Client Auth"/>
        <property name="TLS - Protocol"/>
        <property name="TLS - Shutdown Gracefully"/>

        <property name="Referral Strategy">FOLLOW</property>
        <property name="Connect Timeout">10 secs</property>
        <property name="Read Timeout">10 secs</property>

        <property name="Url"/>
        <property name="Page Size"/>
        <property name="Sync Interval">30 mins</property>

        <property name="User Search Base"/>
        <property name="User Object Class">person</property>
        <property name="User Search Scope">ONE_LEVEL</property>
        <property name="User Search Filter"/>
        <property name="User Identity Attribute"/>
        <property name="User Group Name Attribute"/>
        <property name="User Group Name Attribute - Referenced Group Attribute"/>

        <property name="Group Search Base"/>
        <property name="Group Object Class">group</property>
        <property name="Group Search Scope">ONE_LEVEL</property>
        <property name="Group Search Filter"/>
        <property name="Group Name Attribute"/>
        <property name="Group Member Attribute"/>
        <property name="Group Member Attribute - Referenced User Attribute"/>
    </userGroupProvider>


    <!--
        The CompositeUserGroupProvider will provide support for retrieving users and groups from multiple sources.

        - User Group Provider [unique key] - The identifier of user group providers to load from. The name of
            each property must be unique, for example: "User Group Provider A", "User Group Provider B",
            "User Group Provider C" or "User Group Provider 1", "User Group Provider 2", "User Group Provider 3"

            NOTE: Any identity mapping rules specified in nifi.properties are not applied in this implementation. This behavior
            would need to be applied by the base implementation.
    -->
    <!-- To enable the composite-user-group-provider remove 2 lines. This is 1 of 2.
    <userGroupProvider>
        <identifier>composite-user-group-provider</identifier>
        <class>org.apache.nifi.authorization.CompositeUserGroupProvider</class>
        <property name="User Group Provider 1"></property>
    </userGroupProvider>
    To enable the composite-user-group-provider remove 2 lines. This is 2 of 2. -->

    <!--
        The CompositeConfigurableUserGroupProvider will provide support for retrieving users and groups from multiple sources.
        Additionally, a single configurable user group provider is required. Users from the configurable user group provider
        are configurable, however users loaded from one of the User Group Provider [unique key] will not be.

        - Configurable User Group Provider - A configurable user group provider.

        - User Group Provider [unique key] - The identifier of user group providers to load from. The name of
            each property must be unique, for example: "User Group Provider A", "User Group Provider B",
            "User Group Provider C" or "User Group Provider 1", "User Group Provider 2", "User Group Provider 3"

            NOTE: Any identity mapping rules specified in nifi.properties are not applied in this implementation. This behavior
            would need to be applied by the base implementation.
    -->
    <!-- To enable the composite-configurable-user-group-provider remove 2 lines. This is 1 of 2.
    <userGroupProvider>
        <identifier>composite-configurable-user-group-provider</identifier>
        <class>org.apache.nifi.authorization.CompositeConfigurableUserGroupProvider</class>
        <property name="Configurable User Group Provider">file-user-group-provider</property>
        <property name="User Group Provider 1"></property>
    </userGroupProvider>
    To enable the composite-configurable-user-group-provider remove 2 lines. This is 2 of 2. -->

    <!--
        The FileAccessPolicyProvider will provide support for managing access policies which is backed by a file
        on the local file system.

        - User Group Provider - The identifier for an User Group Provider defined above that will be used to access
            users and groups for use in the managed access policies.

        - Authorizations File - The file where the FileAccessPolicyProvider will store policies.

        - Initial Admin Identity - The identity of an initial admin user that will be granted access to the UI and
            given the ability to create additional users, groups, and policies. The value of this property could be
            a DN when using certificates or LDAP, or a Kerberos principal. This property will only be used when there
            are no other policies defined. If this property is specified then a Legacy Authorized Users File can not be specified.

            NOTE: Any identity mapping rules specified in nifi.properties will also be applied to the initial admin identity,
            so the value should be the unmapped identity. This identity must be found in the configured User Group Provider.

        - Legacy Authorized Users File - The full path to an existing authorized-users.xml that will be automatically
            converted to the new authorizations model. If this property is specified then an Initial Admin Identity can
            not be specified, and this property will only be used when there are no other users, groups, and policies defined.

            NOTE: Any users in the legacy users file must be found in the configured User Group Provider.

        - Node Identity [unique key] - The identity of a NiFi cluster node. When clustered, a property for each node
            should be defined, so that every node knows about every other node. If not clustered these properties can be ignored.
            The name of each property must be unique, for example for a three node cluster:
            "Node Identity A", "Node Identity B", "Node Identity C" or "Node Identity 1", "Node Identity 2", "Node Identity 3"

            NOTE: Any identity mapping rules specified in nifi.properties will also be applied to the node identities,
            so the values should be the unmapped identities (i.e. full DN from a certificate). This identity must be found
            in the configured User Group Provider.
    -->
    <accessPolicyProvider>
        <identifier>file-access-policy-provider</identifier>
        <class>org.apache.nifi.authorization.FileAccessPolicyProvider</class>
        <property name="User Group Provider">ldap-user-group-provider</property>
        <property name="Authorizations File">./conf/authorizations.xml</property>
        <property name="Initial Admin Identity"></property>
        <property name="Legacy Authorized Users File"></property>

        <property name="Node Identity 1"></property>
    </accessPolicyProvider>

    <!--
        The StandardManagedAuthorizer. This authorizer implementation must be configured with the
        Access Policy Provider which it will use to access and manage users, groups, and policies.
        These users, groups, and policies will be used to make all access decisions during authorization
        requests.

        - Access Policy Provider - The identifier for an Access Policy Provider defined above.
    -->
    <authorizer>
        <identifier>managed-authorizer</identifier>
        <class>org.apache.nifi.authorization.StandardManagedAuthorizer</class>
        <property name="Access Policy Provider">file-access-policy-provider</property>
    </authorizer>

    <!--
        NOTE: This Authorizer has been replaced with the more granular approach configured above with the Standard
        Managed Authorizer. However, it is still available for backwards compatibility reasons.

        The FileAuthorizer is NiFi's provided authorizer and has the following properties:

        - Authorizations File - The file where the FileAuthorizer will store policies.

        - Users File - The file where the FileAuthorizer will store users and groups.

        - Initial Admin Identity - The identity of an initial admin user that will be granted access to the UI and
            given the ability to create additional users, groups, and policies. The value of this property could be
            a DN when using certificates or LDAP, or a Kerberos principal. This property will only be used when there
            are no other users, groups, and policies defined. If this property is specified then a Legacy Authorized
            Users File can not be specified.

            NOTE: Any identity mapping rules specified in nifi.properties will also be applied to the initial admin identity,
            so the value should be the unmapped identity.

        - Legacy Authorized Users File - The full path to an existing authorized-users.xml that will be automatically
            converted to the new authorizations model. If this property is specified then an Initial Admin Identity can
            not be specified, and this property will only be used when there are no other users, groups, and policies defined.

        - Node Identity [unique key] - The identity of a NiFi cluster node. When clustered, a property for each node
            should be defined, so that every node knows about every other node. If not clustered these properties can be ignored.
            The name of each property must be unique, for example for a three node cluster:
            "Node Identity A", "Node Identity B", "Node Identity C" or "Node Identity 1", "Node Identity 2", "Node Identity 3"

            NOTE: Any identity mapping rules specified in nifi.properties will also be applied to the node identities,
            so the values should be the unmapped identities (i.e. full DN from a certificate).
    -->
    <!-- <authorizer>
        <identifier>file-provider</identifier>
        <class>org.apache.nifi.authorization.FileAuthorizer</class>
        <property name="Authorizations File">./conf/authorizations.xml</property>
        <property name="Users File">./conf/users.xml</property>
        <property name="Initial Admin Identity"></property>
        <property name="Legacy Authorized Users File"></property>

        <property name="Node Identity 1"></property>
    </authorizer>
    -->
</authorizers>
[main] INFO org.apache.nifi.toolkit.encryptconfig.EncryptConfigMainTest - Updated key line: nifi.bootstrap.sensitive.key=0123456789ABCDEFFEDCBA98765432100123456789ABCDEFFEDCBA9876543210
]]></system-err>
  </testcase>
  <testcase name="testDetermineModeFromArgsWithLegacyMode" classname="org.apache.nifi.toolkit.encryptconfig.EncryptConfigMainTest" time="0.001"/>
  <testcase name="testDetermineModeFromArgsWithNifiRegistryDecryptMode" classname="org.apache.nifi.toolkit.encryptconfig.EncryptConfigMainTest" time="0.017"/>
</testsuite>