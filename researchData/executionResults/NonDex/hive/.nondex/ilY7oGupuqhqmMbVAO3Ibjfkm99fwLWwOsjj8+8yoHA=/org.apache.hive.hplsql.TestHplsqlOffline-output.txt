SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/alex/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.13.2/log4j-slf4j-impl-2.13.2.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/alex/.m2/repository/org/slf4j/slf4j-simple/1.7.27/slf4j-simple-1.7.27.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.apache.logging.slf4j.Log4jLoggerFactory]
DEBUG StatusLogger Using ShutdownCallbackRegistry class org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry
DEBUG StatusLogger Took 0,084695 seconds to load 248 plugins from sun.misc.Launcher$AppClassLoader@330bedb4
DEBUG StatusLogger PluginManager 'Converter' found 46 plugins
DEBUG StatusLogger Starting OutputStreamManager SYSTEM_OUT.false.false-1
DEBUG StatusLogger Starting LoggerContext[name=330bedb4, org.apache.logging.log4j.core.LoggerContext@710c2b53]...
DEBUG StatusLogger Reconfiguration started for context[name=330bedb4] at URI null (org.apache.logging.log4j.core.LoggerContext@710c2b53) with optional ClassLoader: null
DEBUG StatusLogger PluginManager 'ConfigurationFactory' found 6 plugins
DEBUG StatusLogger Using configurationFactory org.apache.logging.log4j.core.config.ConfigurationFactory$Factory@45d84a20
TRACE StatusLogger Trying to find [hive-log4j2.properties] using context class loader sun.misc.Launcher$AppClassLoader@330bedb4.
DEBUG StatusLogger Apache Log4j Core 2.13.2 initializing configuration org.apache.logging.log4j.core.config.properties.PropertiesConfiguration@333d4a8c
DEBUG StatusLogger Installed 2 script engines
DEBUG StatusLogger Oracle Nashorn version: 1.8.0_402, language: ECMAScript, threading: Not Thread Safe, compile: true, names: [nashorn, Nashorn, js, JS, JavaScript, javascript, ECMAScript, ecmascript], factory class: jdk.nashorn.api.scripting.NashornScriptEngineFactory
DEBUG StatusLogger Groovy Scripting Engine version: 2.0, language: Groovy, threading: MULTITHREADED, compile: true, names: [groovy, Groovy], factory class: org.codehaus.groovy.jsr223.GroovyScriptEngineFactory
INFO StatusLogger Scanning for classes in '/home/alex/Repositories/hive/ql/target/classes/org/apache/hadoop/hive/ql/log' matching criteria annotated with @Plugin
DEBUG StatusLogger Checking to see if class org.apache.hadoop.hive.ql.log.SlidingFilenameRolloverStrategy matches criteria annotated with @Plugin
DEBUG StatusLogger Checking to see if class org.apache.hadoop.hive.ql.log.PidFilePatternConverter matches criteria annotated with @Plugin
DEBUG StatusLogger Checking to see if class org.apache.hadoop.hive.ql.log.LogDivertAppenderForTest matches criteria annotated with @Plugin
DEBUG StatusLogger Checking to see if class org.apache.hadoop.hive.ql.log.HiveEventCounter matches criteria annotated with @Plugin
DEBUG StatusLogger Checking to see if class org.apache.hadoop.hive.ql.log.LogDivertAppender$NameFilter matches criteria annotated with @Plugin
DEBUG StatusLogger Checking to see if class org.apache.hadoop.hive.ql.log.NullAppender matches criteria annotated with @Plugin
DEBUG StatusLogger Checking to see if class org.apache.hadoop.hive.ql.log.syslog.SyslogParser matches criteria annotated with @Plugin
DEBUG StatusLogger Checking to see if class org.apache.hadoop.hive.ql.log.syslog.SyslogInputFormat matches criteria annotated with @Plugin
DEBUG StatusLogger Checking to see if class org.apache.hadoop.hive.ql.log.syslog.SyslogInputFormat$Location matches criteria annotated with @Plugin
DEBUG StatusLogger Checking to see if class org.apache.hadoop.hive.ql.log.syslog.SyslogStorageHandler matches criteria annotated with @Plugin
DEBUG StatusLogger Checking to see if class org.apache.hadoop.hive.ql.log.syslog.SyslogSerDe matches criteria annotated with @Plugin
DEBUG StatusLogger Checking to see if class org.apache.hadoop.hive.ql.log.HushableRandomAccessFileAppender matches criteria annotated with @Plugin
DEBUG StatusLogger Checking to see if class org.apache.hadoop.hive.ql.log.LogDivertAppender matches criteria annotated with @Plugin
DEBUG StatusLogger Checking to see if class org.apache.hadoop.hive.ql.log.HiveEventCounter$1 matches criteria annotated with @Plugin
DEBUG StatusLogger Checking to see if class org.apache.hadoop.hive.ql.log.HushableRandomAccessFileAppender$1 matches criteria annotated with @Plugin
DEBUG StatusLogger Checking to see if class org.apache.hadoop.hive.ql.log.HiveEventCounter$EventCounts matches criteria annotated with @Plugin
DEBUG StatusLogger Checking to see if class org.apache.hadoop.hive.ql.log.SlidingFilenameRolloverStrategy$1 matches criteria annotated with @Plugin
DEBUG StatusLogger Checking to see if class org.apache.hadoop.hive.ql.log.LogDivertAppenderForTest$TestFilter matches criteria annotated with @Plugin
INFO StatusLogger Scanning for classes in '/home/alex/Repositories/hive/common/target/classes/org/apache/hadoop/hive/ql/log' matching criteria annotated with @Plugin
DEBUG StatusLogger Checking to see if class org.apache.hadoop.hive.ql.log.PerfLogger matches criteria annotated with @Plugin
DEBUG StatusLogger Took 0,021767 seconds to load 7 plugins from package org.apache.hadoop.hive.ql.log
DEBUG StatusLogger PluginManager 'Core' found 130 plugins
DEBUG StatusLogger PluginManager 'Level' found 0 plugins
DEBUG StatusLogger Building Plugin[name=property, class=org.apache.logging.log4j.core.config.Property].
TRACE StatusLogger TypeConverterRegistry initializing.
DEBUG StatusLogger PluginManager 'TypeConverter' found 26 plugins
DEBUG StatusLogger createProperty(name="hive.log.file", value="hive.log")
DEBUG StatusLogger Building Plugin[name=property, class=org.apache.logging.log4j.core.config.Property].
DEBUG StatusLogger createProperty(name="hive.log.dir", value="/home/alex/Repositories/hive/hplsql/target/tmp/alex")
DEBUG StatusLogger Building Plugin[name=property, class=org.apache.logging.log4j.core.config.Property].
DEBUG StatusLogger createProperty(name="hive.log.level", value="INFO")
DEBUG StatusLogger Building Plugin[name=property, class=org.apache.logging.log4j.core.config.Property].
DEBUG StatusLogger createProperty(name="hive.root.logger", value="DRFA")
DEBUG StatusLogger Building Plugin[name=property, class=org.apache.logging.log4j.core.config.Property].
DEBUG StatusLogger createProperty(name="hive.perflogger.log.level", value="INFO")
DEBUG StatusLogger Building Plugin[name=properties, class=org.apache.logging.log4j.core.config.PropertiesPlugin].
DEBUG StatusLogger configureSubstitutor(={hive.log.file=hive.log, hive.log.dir=/home/alex/Repositories/hive/hplsql/target/tmp/alex, hive.log.level=INFO, hive.root.logger=DRFA, hive.perflogger.log.level=INFO}, Configuration(HiveLog4j2))
DEBUG StatusLogger PluginManager 'Lookup' found 17 plugins
DEBUG StatusLogger Building Plugin[name=logger, class=org.apache.logging.log4j.core.config.LoggerConfig].
DEBUG StatusLogger createLogger(additivity="true", level="WARN", name="org.apache.zookeeper.server.NIOServerCnxn", includeLocation="null", ={}, ={}, Configuration(HiveLog4j2), Filter=null)
DEBUG StatusLogger Building Plugin[name=logger, class=org.apache.logging.log4j.core.config.LoggerConfig].
DEBUG StatusLogger createLogger(additivity="true", level="WARN", name="org.apache.zookeeper.ClientCnxnSocketNIO", includeLocation="null", ={}, ={}, Configuration(HiveLog4j2), Filter=null)
DEBUG StatusLogger Building Plugin[name=logger, class=org.apache.logging.log4j.core.config.LoggerConfig].
DEBUG StatusLogger createLogger(additivity="true", level="ERROR", name="DataNucleus", includeLocation="null", ={}, ={}, Configuration(HiveLog4j2), Filter=null)
DEBUG StatusLogger Building Plugin[name=logger, class=org.apache.logging.log4j.core.config.LoggerConfig].
DEBUG StatusLogger createLogger(additivity="true", level="ERROR", name="Datastore", includeLocation="null", ={}, ={}, Configuration(HiveLog4j2), Filter=null)
DEBUG StatusLogger Building Plugin[name=logger, class=org.apache.logging.log4j.core.config.LoggerConfig].
DEBUG StatusLogger createLogger(additivity="true", level="ERROR", name="JPOX", includeLocation="null", ={}, ={}, Configuration(HiveLog4j2), Filter=null)
DEBUG StatusLogger Building Plugin[name=logger, class=org.apache.logging.log4j.core.config.LoggerConfig].
DEBUG StatusLogger createLogger(additivity="true", level="INFO", name="org.apache.hadoop.hive.ql.log.PerfLogger", includeLocation="null", ={}, ={}, Configuration(HiveLog4j2), Filter=null)
DEBUG StatusLogger Building Plugin[name=logger, class=org.apache.logging.log4j.core.config.LoggerConfig].
DEBUG StatusLogger createLogger(additivity="true", level="INFO", name="com.amazonaws", includeLocation="null", ={}, ={}, Configuration(HiveLog4j2), Filter=null)
DEBUG StatusLogger Building Plugin[name=logger, class=org.apache.logging.log4j.core.config.LoggerConfig].
DEBUG StatusLogger createLogger(additivity="true", level="INFO", name="org.apache.http", includeLocation="null", ={}, ={}, Configuration(HiveLog4j2), Filter=null)
DEBUG StatusLogger Building Plugin[name=AppenderRef, class=org.apache.logging.log4j.core.config.AppenderRef].
DEBUG StatusLogger createAppenderRef(ref="DRFA", level="null", Filter=null)
DEBUG StatusLogger Building Plugin[name=root, class=org.apache.logging.log4j.core.config.LoggerConfig$RootLogger].
DEBUG StatusLogger createLogger(additivity="null", level="INFO", includeLocation="null", ={DRFA}, ={}, Configuration(HiveLog4j2), Filter=null)
DEBUG StatusLogger Building Plugin[name=loggers, class=org.apache.logging.log4j.core.config.LoggersPlugin].
DEBUG StatusLogger createLoggers(={org.apache.zookeeper.server.NIOServerCnxn, org.apache.zookeeper.ClientCnxnSocketNIO, DataNucleus, Datastore, JPOX, org.apache.hadoop.hive.ql.log.PerfLogger, com.amazonaws, org.apache.http, root})
DEBUG StatusLogger Building Plugin[name=layout, class=org.apache.logging.log4j.core.layout.PatternLayout].
DEBUG StatusLogger PatternLayout$Builder(header="null", charset="null", PatternSelector=null, Configuration(HiveLog4j2), Replace=null, noConsoleNoAnsi="null", disableAnsi="null", footer="null", alwaysWriteExceptions="null", pattern="%d{ISO8601} %5p [%t] %c{2}: %m%n")
DEBUG StatusLogger PluginManager 'Converter' found 46 plugins
DEBUG StatusLogger Building Plugin[name=appender, class=org.apache.logging.log4j.core.appender.ConsoleAppender].
DEBUG StatusLogger ConsoleAppender$Builder(target="SYSTEM_ERR", follow="null", direct="null", bufferedIo="null", immediateFlush="null", bufferSize="null", ignoreExceptions="null", Configuration(HiveLog4j2), name="console", PatternLayout(%d{ISO8601} %5p [%t] %c{2}: %m%n), ={}, Filter=null)
DEBUG StatusLogger Starting OutputStreamManager SYSTEM_ERR.false.false
DEBUG StatusLogger Building Plugin[name=layout, class=org.apache.logging.log4j.core.layout.PatternLayout].
DEBUG StatusLogger PatternLayout$Builder(disableAnsi="null", Configuration(HiveLog4j2), charset="null", alwaysWriteExceptions="null", PatternSelector=null, footer="null", pattern="%d{ISO8601} %5p [%t] %c{2}: %m%n", noConsoleNoAnsi="null", Replace=null, header="null")
DEBUG StatusLogger Building Plugin[name=TimeBasedTriggeringPolicy, class=org.apache.logging.log4j.core.appender.rolling.TimeBasedTriggeringPolicy].
DEBUG StatusLogger TimeBasedTriggeringPolicy$Builder(interval="1", modulate="true", maxRandomDelay="null")
DEBUG StatusLogger Building Plugin[name=Policies, class=org.apache.logging.log4j.core.appender.rolling.CompositeTriggeringPolicy].
DEBUG StatusLogger createPolicy(={TimeBasedTriggeringPolicy(nextRolloverMillis=0, interval=1, modulate=true)})
DEBUG StatusLogger Building Plugin[name=DefaultRolloverStrategy, class=org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy].
DEBUG StatusLogger DefaultRolloverStrategy$Builder(stopCustomActionsOnError="null", ={}, min="null", tempCompressedFilePattern="null", compressionLevel="null", fileIndex="null", max="30", Configuration(HiveLog4j2))
DEBUG StatusLogger Building Plugin[name=appender, class=org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender].
DEBUG StatusLogger RollingRandomAccessFileAppender$Builder(DefaultRolloverStrategy(DefaultRolloverStrategy(min=1, max=30, useMax=true)), Policies(CompositeTriggeringPolicy(policies=[TimeBasedTriggeringPolicy(nextRolloverMillis=0, interval=1, modulate=true)])), fileGroup="null", advertise="null", append="null", advertiseURI="null", filePermissions="null", fileName="/home/alex/Repositories/hive/hplsql/target/tmp/alex/hive.log", filePattern="/home/alex/Repositories/hive/hplsql/target/tmp/alex/hive.log.%d{yyyy-MM-dd}", fileOwner="null", bufferSize="null", immediateFlush="null", bufferedIo="null", PatternLayout(%d{ISO8601} %5p [%t] %c{2}: %m%n), name="DRFA", ignoreExceptions="null", Configuration(HiveLog4j2), ={}, Filter=null)
TRACE StatusLogger RandomAccessFile /home/alex/Repositories/hive/hplsql/target/tmp/alex/hive.log seek to 0
DEBUG StatusLogger Starting RollingRandomAccessFileManager /home/alex/Repositories/hive/hplsql/target/tmp/alex/hive.log
DEBUG StatusLogger PluginManager 'FileConverter' found 3 plugins
DEBUG StatusLogger Setting prev file time to 2024-04-24T06:43:07.306-0700
DEBUG StatusLogger Initializing triggering policy CompositeTriggeringPolicy(policies=[TimeBasedTriggeringPolicy(nextRolloverMillis=0, interval=1, modulate=true)])
DEBUG StatusLogger Initializing triggering policy TimeBasedTriggeringPolicy(nextRolloverMillis=0, interval=1, modulate=true)
TRACE StatusLogger PatternProcessor.getNextTime returning 2024/04/25-00:00:00.000, nextFileTime=2024/04/24-00:00:00.000, prevFileTime=1969/12/31-16:00:00.000, current=2024/04/24-06:43:21.600, freq=DAILY
TRACE StatusLogger PatternProcessor.getNextTime returning 2024/04/25-00:00:00.000, nextFileTime=2024/04/24-00:00:00.000, prevFileTime=2024/04/24-00:00:00.000, current=2024/04/24-06:43:21.601, freq=DAILY
DEBUG StatusLogger Building Plugin[name=appenders, class=org.apache.logging.log4j.core.config.AppendersPlugin].
DEBUG StatusLogger createAppenders(={console, DRFA})
DEBUG StatusLogger Configuration org.apache.logging.log4j.core.config.properties.PropertiesConfiguration@333d4a8c initialized
DEBUG StatusLogger Starting configuration org.apache.logging.log4j.core.config.properties.PropertiesConfiguration@333d4a8c
DEBUG StatusLogger Started configuration org.apache.logging.log4j.core.config.properties.PropertiesConfiguration@333d4a8c OK.
TRACE StatusLogger Stopping org.apache.logging.log4j.core.config.DefaultConfiguration@687e99d8...
TRACE StatusLogger DefaultConfiguration notified 1 ReliabilityStrategies that config will be stopped.
TRACE StatusLogger DefaultConfiguration stopping root LoggerConfig.
TRACE StatusLogger DefaultConfiguration notifying ReliabilityStrategies that appenders will be stopped.
TRACE StatusLogger DefaultConfiguration stopping remaining Appenders.
DEBUG StatusLogger Shutting down OutputStreamManager SYSTEM_OUT.false.false-1
DEBUG StatusLogger OutputStream closed
DEBUG StatusLogger Shut down OutputStreamManager SYSTEM_OUT.false.false-1, all resources released: true
DEBUG StatusLogger Appender DefaultConsole-1 stopped with status true
TRACE StatusLogger DefaultConfiguration stopped 1 remaining Appenders.
TRACE StatusLogger DefaultConfiguration cleaning Appenders from 1 LoggerConfigs.
DEBUG StatusLogger Stopped org.apache.logging.log4j.core.config.DefaultConfiguration@687e99d8 OK
TRACE StatusLogger Reregistering MBeans after reconfigure. Selector=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector@4c550889
TRACE StatusLogger Reregistering context (1/1): '330bedb4' org.apache.logging.log4j.core.LoggerContext@710c2b53
TRACE StatusLogger Unregistering but no MBeans found matching 'org.apache.logging.log4j2:type=330bedb4'
TRACE StatusLogger Unregistering but no MBeans found matching 'org.apache.logging.log4j2:type=330bedb4,component=StatusLogger'
TRACE StatusLogger Unregistering but no MBeans found matching 'org.apache.logging.log4j2:type=330bedb4,component=ContextSelector'
TRACE StatusLogger Unregistering but no MBeans found matching 'org.apache.logging.log4j2:type=330bedb4,component=Loggers,name=*'
TRACE StatusLogger Unregistering but no MBeans found matching 'org.apache.logging.log4j2:type=330bedb4,component=Appenders,name=*'
TRACE StatusLogger Unregistering but no MBeans found matching 'org.apache.logging.log4j2:type=330bedb4,component=AsyncAppenders,name=*'
TRACE StatusLogger Unregistering but no MBeans found matching 'org.apache.logging.log4j2:type=330bedb4,component=AsyncLoggerRingBuffer'
TRACE StatusLogger Unregistering but no MBeans found matching 'org.apache.logging.log4j2:type=330bedb4,component=Loggers,name=*,subtype=RingBuffer'
DEBUG StatusLogger Registering MBean org.apache.logging.log4j2:type=330bedb4
DEBUG StatusLogger Registering MBean org.apache.logging.log4j2:type=330bedb4,component=StatusLogger
DEBUG StatusLogger Registering MBean org.apache.logging.log4j2:type=330bedb4,component=ContextSelector
DEBUG StatusLogger Registering MBean org.apache.logging.log4j2:type=330bedb4,component=Loggers,name=org.apache.hadoop.hive.ql.log.PerfLogger
DEBUG StatusLogger Registering MBean org.apache.logging.log4j2:type=330bedb4,component=Loggers,name=
DEBUG StatusLogger Registering MBean org.apache.logging.log4j2:type=330bedb4,component=Loggers,name=org.apache.zookeeper.server.NIOServerCnxn
DEBUG StatusLogger Registering MBean org.apache.logging.log4j2:type=330bedb4,component=Loggers,name=JPOX
DEBUG StatusLogger Registering MBean org.apache.logging.log4j2:type=330bedb4,component=Loggers,name=com.amazonaws
DEBUG StatusLogger Registering MBean org.apache.logging.log4j2:type=330bedb4,component=Loggers,name=DataNucleus
DEBUG StatusLogger Registering MBean org.apache.logging.log4j2:type=330bedb4,component=Loggers,name=org.apache.zookeeper.ClientCnxnSocketNIO
DEBUG StatusLogger Registering MBean org.apache.logging.log4j2:type=330bedb4,component=Loggers,name=Datastore
DEBUG StatusLogger Registering MBean org.apache.logging.log4j2:type=330bedb4,component=Loggers,name=org.apache.http
DEBUG StatusLogger Registering MBean org.apache.logging.log4j2:type=330bedb4,component=Appenders,name=console
DEBUG StatusLogger Registering MBean org.apache.logging.log4j2:type=330bedb4,component=Appenders,name=DRFA
TRACE StatusLogger Using default SystemClock for timestamps.
DEBUG StatusLogger org.apache.logging.log4j.core.util.SystemClock does not support precise timestamps.
TRACE StatusLogger Using DummyNanoClock for nanosecond timestamps.
DEBUG StatusLogger Reconfiguration complete for context[name=330bedb4] at URI /home/alex/Repositories/hive/common/target/classes/hive-log4j2.properties (org.apache.logging.log4j.core.LoggerContext@710c2b53) with optional ClassLoader: null
DEBUG StatusLogger Shutdown hook enabled. Registering a new one.
DEBUG StatusLogger LoggerContext[name=330bedb4, org.apache.logging.log4j.core.LoggerContext@710c2b53] started OK.
Configuration file: file:/home/alex/Repositories/hive/hplsql/target/classes/hplsql-site.xml
Parser tree: (program (block (stmt (create_table_stmt create table (table_name (qident (ident i1))) (create_table_definition ( (create_table_columns (create_table_columns_item (column_name (qident (ident c1))) (dtype int2)) , (create_table_columns_item (column_name (qident (ident c2))) (dtype int4)) , (create_table_columns_item (column_name (qident (ident c3))) (dtype int8))) ))))) <EOF>)
Ln:1 Not executed - offline mode set
Configuration file: file:/home/alex/Repositories/hive/hplsql/target/classes/hplsql-site.xml
Parser tree: (program (block (stmt (create_table_stmt CREATE TABLE (table_name (qident (ident tab))) (create_table_preoptions (create_table_preoptions_item , (create_table_preoptions_td_item NO LOG)) (create_table_preoptions_item , (create_table_preoptions_td_item NO FALLBACK))) (create_table_definition ( (create_table_columns (create_table_columns_item (column_name (qident (ident SOURCE_ID))) (dtype INT)) , (create_table_columns_item (column_name (qident (ident RUN_ID))) (dtype INT)) , (create_table_columns_item (column_name (qident (ident STATUS))) (dtype CHAR)) , (create_table_columns_item (column_name (qident (ident LOAD_START))) (dtype timestamp) (dtype_len ( 0 ))) , (create_table_columns_item (column_name (qident (ident LOAD_END))) (dtype timestamp) (dtype_len ( 0 )))) )))) (stmt (semicolon_stmt ;)) (stmt (create_table_stmt CREATE TABLE (table_name (qident (ident ctl))) (create_table_preoptions (create_table_preoptions_item , (create_table_preoptions_td_item NO LOG)) (create_table_preoptions_item , (create_table_preoptions_td_item NO FALLBACK))) (create_table_definition AS ( (select_stmt (fullselect_stmt (fullselect_stmt_item (subselect_stmt SELECT (select_list (select_list_item (expr (expr_dot (expr_dot_property_access (ident EBC) . (ident SOURCE_ID))))) , (select_list_item (expr (expr_agg_window_func MAX ( (expr (expr_dot (expr_dot_property_access (ident EBC) . (ident RUN_ID)))) ))) (select_list_alias AS (qident (ident RUN_ID)))) , (select_list_item (expr (expr_dot (expr_dot_property_access (ident EBC) . (ident STATUS))))) , (select_list_item (expr (expr_dot (expr_dot_property_access (ident EBC) . (ident LOAD_START))))) , (select_list_item (expr (expr_dot (expr_dot_property_access (ident EBC) . (ident LOAD_END)))))) (from_clause FROM (from_table_clause (from_table_name_clause (table_name (qident (ident EBC)))))) (where_clause WHERE (bool_expr (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_dot (expr_dot_property_access (ident EBC) . (ident SOURCE_ID)))) (bool_expr_binary_operator =) (expr (expr_atom (int_number 451)))))) (bool_expr_logical_operator AND) (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_dot (expr_dot_property_access (ident EBC) . (ident STATUS)))) (bool_expr_binary_operator =) (expr (expr_atom (string 'R')))))))) (group_by_clause GROUP BY (expr (expr_atom (int_number 1))) , (expr (expr_atom (int_number 3))) , (expr (expr_atom (int_number 4))) , (expr (expr_atom (int_number 5)))))))) )))) (stmt (semicolon_stmt ;)) (stmt (create_local_temp_table_stmt CREATE SET VOLATILE TABLE (qident (ident ctl2)) (create_table_preoptions (create_table_preoptions_item , (create_table_preoptions_td_item NO LOG)) (create_table_preoptions_item , (create_table_preoptions_td_item NO FALLBACK))) (create_table_definition AS ( (select_stmt (fullselect_stmt (fullselect_stmt_item (subselect_stmt SELECT (select_list (select_list_item (expr (expr_dot (expr_dot_property_access (ident EBC) . (ident SOURCE_ID))))) , (select_list_item (expr (expr_agg_window_func MAX ( (expr (expr_dot (expr_dot_property_access (ident EBC) . (ident RUN_ID)))) ))) (select_list_alias AS (qident (ident RUN_ID)))) , (select_list_item (expr (expr_dot (expr_dot_property_access (ident EBC) . (ident STATUS))))) , (select_list_item (expr (expr_dot (expr_dot_property_access (ident EBC) . (ident LOAD_START))))) , (select_list_item (expr (expr_dot (expr_dot_property_access (ident EBC) . (ident LOAD_END)))))) (from_clause FROM (from_table_clause (from_table_name_clause (table_name (qident (ident EBC)))))) (where_clause WHERE (bool_expr (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_dot (expr_dot_property_access (ident EBC) . (ident SOURCE_ID)))) (bool_expr_binary_operator =) (expr (expr_atom (int_number 451)))))) (bool_expr_logical_operator AND) (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_dot (expr_dot_property_access (ident EBC) . (ident STATUS)))) (bool_expr_binary_operator =) (expr (expr_atom (string 'R')))))))) (group_by_clause GROUP BY (expr (expr_atom (int_number 1))) , (expr (expr_atom (int_number 3))) , (expr (expr_atom (int_number 4))) , (expr (expr_atom (int_number 5)))))))) ) (create_table_options (create_table_options_item (create_table_options_td_item WITH DATA)) (create_table_options_item (create_table_options_td_item PRIMARY INDEX ( (qident (ident LOAD_START)) , (qident (ident LOAD_END)) ))) (create_table_options_item ON COMMIT PRESERVE ROWS))))) (stmt (semicolon_stmt ;))) <EOF>)
Ln:1 Not executed - offline mode set
Ln:10 Not executed - offline mode set
Not executed - offline mode set
Configuration file: file:/home/alex/Repositories/hive/hplsql/target/classes/hplsql-site.xml
Parser tree: (program (block (stmt (select_stmt (fullselect_stmt (fullselect_stmt_item (subselect_stmt SELECT (select_list (select_list_item (expr (expr_atom (qident (ident branch_code))))) , (select_list_item (expr (expr_atom (qident (ident branch_no))))) , (select_list_item (expr (expr_atom (qident (ident c_no))))) , (select_list_item (expr (expr_atom (qident (ident cd_type)))))) (from_clause FROM (from_table_clause (from_table_name_clause (table_name (qident (ident EMPLOYEE)))))) (where_clause WHERE (bool_expr (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_atom (qident (ident S_CODE)))) (bool_expr_binary_operator =) (expr (expr_atom (string 'C')))))) (bool_expr_logical_operator AND) (bool_expr (bool_expr_atom (bool_expr_unary (bool_expr_single_in (expr ( (expr (expr_atom (qident (ident branch_no)))) )) NOT IN ( (select_stmt (fullselect_stmt (fullselect_stmt_item (subselect_stmt SELECT (select_list (select_list_item (expr (expr_atom (qident (ident branch_code)))))) (from_clause FROM (from_table_clause (from_table_name_clause (table_name (qident (ident DEPARTMENT)))))) (where_clause WHERE (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_atom (qident (ident branch_code)))) (bool_expr_binary_operator =) (expr (expr_atom (string 'ABC'))))))))))) ))))))) (qualify_clause QUALIFY (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_agg_window_func ROW_NUMBER ( ) (expr_func_over_clause OVER ( (expr_func_partition_by_clause PARTITION BY (expr (expr_atom (qident (ident c_no))))) (order_by_clause ORDER BY (expr (expr_atom (qident (ident cd_type))))) )))) (bool_expr_binary_operator =) (expr (expr_atom (int_number 1))))))))))))) <EOF>)
Configuration file: file:/home/alex/Repositories/hive/hplsql/target/classes/hplsql-site.xml
Parser tree: (program (block (stmt (use_stmt USE (expr (expr_atom (qident (ident [mic.gr])))))) GO (stmt (assignment_stmt SET (set_session_option (set_mssql_session_option ANSI_NULLS ON)))) GO (stmt (assignment_stmt SET (set_session_option (set_mssql_session_option QUOTED_IDENTIFIER ON)))) GO (stmt (assignment_stmt SET (set_session_option (set_mssql_session_option ANSI_PADDING ON)))) GO (stmt (create_table_stmt CREATE TABLE (table_name (qident (ident [dbo]) . (ident [downloads]))) (create_table_definition ( (create_table_columns (create_table_columns_item (column_name (qident (ident [id]))) (dtype (qident (ident [int]))) (create_table_column_inline_cons IDENTITY ( 1 , 1 )) (create_table_column_inline_cons NOT NULL)) , (create_table_columns_item (column_name (qident (ident [fileName]))) (dtype (qident (ident [char]))) (dtype_len ( 255 )) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident [fileType]))) (dtype (qident (ident [char]))) (dtype_len ( 10 )) (dtype_attr NULL)) , (create_table_columns_item (column_name (qident (ident [downloads]))) (dtype (qident (ident [int]))) (dtype_attr NULL)) , (create_table_columns_item (column_name (qident (ident [fromDate]))) (dtype (qident (ident [char]))) (dtype_len ( 40 )) (dtype_attr NULL)) , (create_table_columns_item (column_name (qident (ident [untilDate]))) (dtype (qident (ident [char]))) (dtype_len ( 40 )) (dtype_attr NULL)) , (create_table_columns_item CONSTRAINT (qident (ident [PK_downloads])) (create_table_column_cons PRIMARY KEY CLUSTERED ( (qident (ident [id])) ASC ) (index_storage_clause (index_mssql_storage_clause WITH ( (qident (ident PAD_INDEX)) = (qident (ident (non_reserved_words OFF))) , (qident (ident STATISTICS_NORECOMPUTE)) = (qident (ident (non_reserved_words OFF))) , (qident (ident IGNORE_DUP_KEY)) = (qident (ident (non_reserved_words OFF))) , (qident (ident ALLOW_ROW_LOCKS)) = (qident (ident (non_reserved_words ON))) , (qident (ident ALLOW_PAGE_LOCKS)) = (qident (ident (non_reserved_words ON))) ) (create_table_options_mssql_item ON (qident (ident [PRIMARY])))))))) ) (create_table_options (create_table_options_item (create_table_options_mssql_item ON (qident (ident [PRIMARY])))))))) GO (stmt (assignment_stmt SET (set_session_option (set_mssql_session_option ANSI_PADDING OFF)))) GO (stmt (alter_table_stmt ALTER TABLE (table_name (qident (ident [dbo]) . (ident [downloads]))) (alter_table_item (alter_table_add_constraint ADD CONSTRAINT (qident (ident [DF_downloads_downloads])) (alter_table_add_constraint_item DEFAULT (expr ( (expr (expr_atom (int_number 0))) )) FOR (qident (ident [downloads]))))))) GO) <EOF>)
Ln:1 Not executed - offline mode set
Ln:14 Not executed - offline mode set
Configuration file: file:/home/alex/Repositories/hive/hplsql/target/classes/hplsql-site.xml
Parser tree: (program (block (stmt (create_table_stmt CREATE TABLE (table_name (qident (ident "ABCDEF_ABI"))) (create_table_definition ( (create_table_columns (create_table_columns_item (column_name (qident (ident "ABI_CCANT_POSTN_SK"))) (dtype INT) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "LAT_DATE"))) (dtype DATE) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "LAT_TIME"))) (dtype TIMESTAMP) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "LAT_ACTION"))) (dtype CHAR) (dtype_len ( 2 )) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "ROW_ID"))) (dtype VARCHAR) (dtype_len ( 15 )) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "CREATED"))) (dtype TIMESTAMP) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "CREATED_BY"))) (dtype VARCHAR) (dtype_len ( 15 )) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "LAST_UPD"))) (dtype TIMESTAMP) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "LAST_UPD_BY"))) (dtype VARCHAR) (dtype_len ( 15 )) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "MODIFICATION_NUM"))) (dtype DECIMAL) (dtype_len ( 10 , 0 )) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "ASGN_DNRM_FLG"))) (dtype CHAR) (dtype_len ( 1 ))) , (create_table_columns_item (column_name (qident (ident "ROLE_CD"))) (dtype VARCHAR) (dtype_len ( 30 ))) , (create_table_columns_item (column_name (qident (ident "STATUS"))) (dtype VARCHAR) (dtype_len ( 30 ))) , (create_table_columns_item (column_name (qident (ident "BD_LAST_UPD"))) (dtype TIMESTAMP)) , (create_table_columns_item (column_name (qident (ident "BD_LAST_UPD_SRC"))) (dtype VARCHAR) (dtype_len ( 50 ))) , (create_table_columns_item (column_name (qident (ident "ABCDEF_CNT"))) (dtype INT) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "ABCDEF_IND"))) (dtype CHAR) (dtype_len ( 1 )) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "ABCDEF_TYP_CD"))) (dtype CHAR) (dtype_len ( 1 )) (dtype_attr NOT NULL) (create_table_column_inline_cons (dtype_default WITH DEFAULT))) , (create_table_columns_item (column_name (qident (ident "PRE_LKO_MAPNG_ID"))) (dtype INT) (dtype_attr NOT NULL) (create_table_column_inline_cons (dtype_default WITH DEFAULT (expr (expr_atom (int_number 0)))))) , (create_table_columns_item (column_name (qident (ident "CR_BY_MAPNG_ID"))) (dtype INT) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "DW_CR_TMSP"))) (dtype TIMESTAMP) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "WRK_FLOW_RUN_ID"))) (dtype INT) (dtype_attr NOT NULL))) ) (create_table_options (create_table_options_item (create_table_options_db2_item COMPRESS YES)) (create_table_options_item (create_table_options_db2_item WITH RESTRICT ON DROP)) (create_table_options_item (create_table_options_db2_item DISTRIBUTE BY HASH ( (qident (ident "ABI_CCANT_POSTN_SK")) ))) (create_table_options_item (create_table_options_db2_item IN (qident (ident "WFDTS2_16K")))) (create_table_options_item (create_table_options_db2_item INDEX IN (qident (ident "WFDIX2_16K")))))))) (stmt (semicolon_stmt ;)) (stmt (create_table_stmt CREATE TABLE (table_name (qident (ident "ABCDEF_ABI_ACT"))) (create_table_definition ( (create_table_columns (create_table_columns_item (column_name (qident (ident "ABI_ACT_CONTACT_SK"))) (dtype INT) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "LAT_DATE"))) (dtype DATE) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "LAT_TIME"))) (dtype TIMESTAMP) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "LAT_ACTION"))) (dtype CHAR) (dtype_len ( 2 )) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "ROW_ID"))) (dtype VARCHAR) (dtype_len ( 15 )) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "ABCDEF_IND"))) (dtype CHAR) (dtype_len ( 1 )) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "ABCDEF_TYP_CD"))) (dtype CHAR) (dtype_len ( 1 )) (dtype_attr NOT NULL) (create_table_column_inline_cons (dtype_default WITH DEFAULT))) , (create_table_columns_item (column_name (qident (ident "PRE_LKO_MAPNG_ID"))) (dtype INT) (dtype_attr NOT NULL) (create_table_column_inline_cons (dtype_default WITH DEFAULT (expr (expr_atom (int_number 0)))))) , (create_table_columns_item (column_name (qident (ident "BD_LAST_UPD_SRC"))) (dtype VARCHAR) (dtype_len ( 50 ))) , (create_table_columns_item (column_name (qident (ident "UPD_BY_MAPNG_ID"))) (dtype INT) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "WRK_FLOW_RUN_ID"))) (dtype INT) (dtype_attr NOT NULL))) ) (create_table_options (create_table_options_item (create_table_options_db2_item COMPRESS YES)) (create_table_options_item (create_table_options_db2_item WITH RESTRICT ON DROP)) (create_table_options_item (create_table_options_db2_item DISTRIBUTE BY HASH ( (qident (ident "ABI_ACT_CONTACT_SK")) ))) (create_table_options_item (create_table_options_db2_item IN (qident (ident "WFDTS2_16K")))) (create_table_options_item (create_table_options_db2_item INDEX IN (qident (ident "WFDIX2_16K")))))))) (stmt (semicolon_stmt ;)) (stmt (create_table_stmt CREATE TABLE (table_name (qident (ident "ABCDEF_ABI_EMP"))) (create_table_definition ( (create_table_columns (create_table_columns_item (column_name (qident (ident "ABI_ACT_EMP_SK"))) (dtype INT) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "LAT_DATE"))) (dtype DATE) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "LAT_TIME"))) (dtype TIMESTAMP) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "LAT_ACTION"))) (dtype CHAR) (dtype_len ( 2 )) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "ABCDEF_CNT"))) (dtype INT) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "ABCDEF_IND"))) (dtype CHAR) (dtype_len ( 1 )) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "ABCDEF_TYP_CD"))) (dtype CHAR) (dtype_len ( 1 )) (dtype_attr NOT NULL) (create_table_column_inline_cons (dtype_default WITH DEFAULT))) , (create_table_columns_item (column_name (qident (ident "PRE_LKO_MAPNG_ID"))) (dtype INT) (dtype_attr NOT NULL) (create_table_column_inline_cons (dtype_default WITH DEFAULT (expr (expr_atom (int_number 0)))))) , (create_table_columns_item (column_name (qident (ident "DW_CR_TMSP"))) (dtype TIMESTAMP) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "CR_BY_MAPNG_ID"))) (dtype INT) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "DW_UPD_TMSP"))) (dtype TIMESTAMP) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "UPD_BY_MAPNG_ID"))) (dtype INT) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident "WRK_FLOW_RUN_ID"))) (dtype INT) (dtype_attr NOT NULL))) ) (create_table_options (create_table_options_item (create_table_options_db2_item COMPRESS YES)) (create_table_options_item (create_table_options_db2_item WITH RESTRICT ON DROP)) (create_table_options_item (create_table_options_db2_item DISTRIBUTE BY HASH ( (qident (ident "ABI_ACT_EMP_SK")) ))) (create_table_options_item (create_table_options_db2_item IN (qident (ident "WFDTS2_16K")))) (create_table_options_item (create_table_options_db2_item INDEX IN (qident (ident "WFDIX2_16K")))))))) (stmt (semicolon_stmt ;))) <EOF>)
Ln:6 Not executed - offline mode set
Ln:39 Not executed - offline mode set
Ln:60 Not executed - offline mode set
Configuration file: file:/home/alex/Repositories/hive/hplsql/target/classes/hplsql-site.xml
Parser tree: (program (block (stmt (create_table_stmt CREATE TABLE (table_name (qident (ident ora_t1))) (create_table_definition ( (create_table_columns (create_table_columns_item (column_name (qident (ident n1))) (dtype NUMBER) (dtype_len ( 3 , 0 ))) , (create_table_columns_item (column_name (qident (ident v1))) (dtype VARCHAR2) (dtype_len ( 10 )))) )))) (stmt (semicolon_stmt ;)) (stmt (create_table_stmt CREATE TABLE (table_name (qident (ident "USER") . (ident "EMP"))) (create_table_definition ( (create_table_columns (create_table_columns_item (column_name (qident (ident "EMPNO"))) (dtype NUMBER) (dtype_len ( 4 , 0 ))) , (create_table_columns_item (column_name (qident (ident "ENAME"))) (dtype VARCHAR2) (dtype_len ( 10 BYTE ))) , (create_table_columns_item (column_name (qident (ident "JOB"))) (dtype VARCHAR2) (dtype_len ( 9 BYTE ))) , (create_table_columns_item (column_name (qident (ident "MGR"))) (dtype NUMBER) (dtype_len ( 4 , 0 ))) , (create_table_columns_item (column_name (qident (ident "HIREDATE"))) (dtype DATE)) , (create_table_columns_item (column_name (qident (ident "SAL"))) (dtype NUMBER) (dtype_len ( 7 , 2 ))) , (create_table_columns_item (column_name (qident (ident "COMM"))) (dtype NUMBER) (dtype_len ( 7 , 2 ))) , (create_table_columns_item (column_name (qident (ident "DEPTNO"))) (dtype NUMBER) (dtype_len ( 2 , 0 )))) ) (create_table_options (create_table_options_item (create_table_options_ora_item SEGMENT CREATION IMMEDIATE)) (create_table_options_item (create_table_options_ora_item PCTFREE 10)) (create_table_options_item (create_table_options_ora_item PCTUSED 40)) (create_table_options_item (create_table_options_ora_item INITRANS 1)) (create_table_options_item (create_table_options_ora_item MAXTRANS 255)) (create_table_options_item (create_table_options_ora_item NOCOMPRESS)) (create_table_options_item (create_table_options_ora_item LOGGING)) (create_table_options_item (create_table_options_ora_item STORAGE ( (qident (ident INITIAL)) 65536 (qident (ident NEXT)) 1048576 (qident (ident MINEXTENTS)) 1 (qident (ident MAXEXTENTS)) 2147483645 (qident (ident PCTINCREASE)) 0 (qident (ident FREELISTS)) 1 (qident (ident FREELIST)) (qident (ident GROUPS)) 1 (qident (ident BUFFER_POOL)) (qident (ident (non_reserved_words DEFAULT))) (qident (ident FLASH_CACHE)) (qident (ident (non_reserved_words DEFAULT))) (qident (ident CELL_FLASH_CACHE)) (qident (ident (non_reserved_words DEFAULT))) ))) (create_table_options_item (create_table_options_ora_item TABLESPACE (qident (ident "USERS")))))))) (stmt (semicolon_stmt ;)) (stmt (create_table_stmt CREATE TABLE (table_name (qident (ident (non_reserved_words language)))) (create_table_definition ( (create_table_columns (create_table_columns_item (column_name (qident (ident id))) (dtype NUMBER) (dtype_len ( 7 )) (dtype_attr NOT NULL) (create_table_column_inline_cons PRIMARY KEY)) , (create_table_columns_item (column_name (qident (ident cd))) (dtype CHAR) (dtype_len ( 2 )) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident description))) (dtype VARCHAR2) (dtype_len ( 50 )))) )))) (stmt (semicolon_stmt ;)) (stmt (create_table_stmt CREATE TABLE (table_name (qident (ident author))) (create_table_definition ( (create_table_columns (create_table_columns_item (column_name (qident (ident id))) (dtype NUMBER) (dtype_len ( 7 )) (dtype_attr NOT NULL) (create_table_column_inline_cons PRIMARY KEY)) , (create_table_columns_item (column_name (qident (ident first_name))) (dtype VARCHAR2) (dtype_len ( 50 ))) , (create_table_columns_item (column_name (qident (ident last_name))) (dtype VARCHAR2) (dtype_len ( 50 )) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident date_of_birth))) (dtype DATE)) , (create_table_columns_item (column_name (qident (ident year_of_birth))) (dtype NUMBER) (dtype_len ( 7 ))) , (create_table_columns_item (column_name (qident (ident distinguished))) (dtype NUMBER) (dtype_len ( 1 )))) )))) (stmt (semicolon_stmt ;)) (stmt (create_table_stmt CREATE TABLE (table_name (qident (ident book))) (create_table_definition ( (create_table_columns (create_table_columns_item (column_name (qident (ident id))) (dtype NUMBER) (dtype_len ( 7 )) (dtype_attr NOT NULL) (create_table_column_inline_cons PRIMARY KEY)) , (create_table_columns_item (column_name (qident (ident author_id))) (dtype NUMBER) (dtype_len ( 7 )) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident (non_reserved_words title)))) (dtype VARCHAR2) (dtype_len ( 400 )) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident published_in))) (dtype NUMBER) (dtype_len ( 7 )) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident language_id))) (dtype NUMBER) (dtype_len ( 7 )) (dtype_attr NOT NULL)) , (create_table_columns_item CONSTRAINT (qident (ident fk_book_author)) (create_table_column_cons FOREIGN KEY ( (qident (ident author_id)) ) REFERENCES (table_name (qident (ident author))) ( (qident (ident id)) ))) , (create_table_columns_item CONSTRAINT (qident (ident fk_book_language)) (create_table_column_cons FOREIGN KEY ( (qident (ident language_id)) ) REFERENCES (table_name (qident (ident (non_reserved_words language)))) ( (qident (ident id)) )))) )))) (stmt (semicolon_stmt ;)) (stmt (create_table_stmt CREATE TABLE (table_name (qident (ident book_store))) (create_table_definition ( (create_table_columns (create_table_columns_item (column_name (qident (ident name))) (dtype VARCHAR2) (dtype_len ( 400 )) (dtype_attr NOT NULL) (create_table_column_inline_cons UNIQUE))) )))) (stmt (semicolon_stmt ;)) (stmt (create_table_stmt CREATE TABLE (table_name (qident (ident book_to_book_store))) (create_table_definition ( (create_table_columns (create_table_columns_item (column_name (qident (ident name))) (dtype VARCHAR2) (dtype_len ( 400 )) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident book_id))) (dtype INTEGER) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident stock))) (dtype INTEGER)) , (create_table_columns_item (create_table_column_cons PRIMARY KEY ( (qident (ident name)) , (qident (ident book_id)) ))) , (create_table_columns_item CONSTRAINT (qident (ident fk_b2bs_book_store)) (create_table_column_cons FOREIGN KEY ( (qident (ident name)) ) REFERENCES (table_name (qident (ident book_store))) ( (qident (ident name)) ) (create_table_fk_action ON DELETE CASCADE))) , (create_table_columns_item CONSTRAINT (qident (ident fk_b2bs_book)) (create_table_column_cons FOREIGN KEY ( (qident (ident book_id)) ) REFERENCES (table_name (qident (ident book))) ( (qident (ident id)) ) (create_table_fk_action ON DELETE CASCADE)))) )))) (stmt (semicolon_stmt ;))) <EOF>)
Ln:1 Not executed - offline mode set
Ln:6 Not executed - offline mode set
Ln:21 Not executed - offline mode set
Ln:26 Not executed - offline mode set
Ln:34 Not executed - offline mode set
Ln:43 Not executed - offline mode set
Ln:46 Not executed - offline mode set
Configuration file: file:/home/alex/Repositories/hive/hplsql/target/classes/hplsql-site.xml
Parser tree: (program (block (stmt (create_table_stmt CREATE TABLE (table_name (qident (ident tbl))) (create_table_definition LIKE (table_name (qident (ident tbl2)))))) (stmt (semicolon_stmt ;))) <EOF>)
Ln:1 Not executed - offline mode set
Configuration file: file:/home/alex/Repositories/hive/hplsql/target/classes/hplsql-site.xml
Parser tree: (program (block (stmt (select_stmt (fullselect_stmt (fullselect_stmt_item (subselect_stmt select (select_list (select_list_item (expr (expr_func (ident coalesce) ( (expr_func_params (func_param (expr (expr (expr_agg_window_func max ( (expr (expr_atom (qident (ident info_id)))) ))) + (expr (expr_atom (int_number 1))))) , (func_param (expr (expr_atom (int_number 0))))) ))))) (into_clause into (ident NextID)) (from_clause from (from_table_clause (from_table_name_clause (table_name (qident (ident sproc_info)))))) (select_options (select_options_item with rr use and keep exclusive locks))))))) (stmt (semicolon_stmt ;)) (stmt (select_stmt (fullselect_stmt (fullselect_stmt_item (subselect_stmt select (select_list (select_list_item (expr (expr_atom (qident (ident cd))))) , (select_list_item (expr (expr (expr_atom (qident (ident cd)))) + (expr (expr (expr_atom (qident (ident inc)))) (interval_item days)))) , (select_list_item (expr (expr (expr (expr_atom (qident (ident cd)))) - (expr (expr (expr_atom (qident (ident inc)))) (interval_item days))) + (expr (expr (expr_func (ident coalesce) ( (expr_func_params (func_param (expr (expr_atom (qident (ident inc))))) , (func_param (expr (expr_atom (int_number 0))))) ))) (interval_item days))))) (from_clause from (from_table_clause (from_subselect_clause ( (select_stmt (fullselect_stmt (fullselect_stmt_item (subselect_stmt select (select_list (select_list_item (expr (expr_atom (date_literal date (string '2015-09-02')))) (select_list_alias as (qident (ident cd)))) , (select_list_item (expr (expr_atom (int_number 3))) (select_list_alias as (qident (ident inc))))) (from_clause from (from_table_clause (from_table_name_clause (table_name (qident (ident sysibm) . (ident sysdummy1)))))))))) ))))))))) (stmt (semicolon_stmt ;))) <EOF>)
Configuration file: file:/home/alex/Repositories/hive/hplsql/target/classes/hplsql-site.xml
Parser tree: (program (block (stmt (map_object_stmt MAP OBJECT (ident ua) TO (ident user_age) AT (ident mysqlconn))) (stmt (semicolon_stmt ;)) (stmt (insert_stmt INSERT INTO (table_name (qident (ident ua))) (insert_stmt_cols ( (qident (ident id)) , (qident (ident age)) )) (insert_stmt_rows VALUES (insert_stmt_row ( (expr (expr_atom (int_number 22))) , (expr (expr_atom (int_number 33))) ))))) (stmt (semicolon_stmt ;))) <EOF>)
Ln:2 Not executed - offline mode set
Configuration file: file:/home/alex/Repositories/hive/hplsql/target/classes/hplsql-site.xml
Parser tree: (program (block (stmt (create_table_stmt CREATE TABLE (table_name (qident (ident mssql_t1))) (create_table_definition ( (create_table_columns (create_table_columns_item (column_name (qident (ident d1))) (dtype DATETIME)) , (create_table_columns_item (column_name (qident (ident nc1))) (dtype NCHAR) (dtype_len ( 10 ))) , (create_table_columns_item (column_name (qident (ident n1))) (dtype NUMERIC) (dtype_len ( 3 , 0 ))) , (create_table_columns_item (column_name (qident (ident n2))) (dtype NUMERIC) (dtype_len ( 3 ))) , (create_table_columns_item (column_name (qident (ident n3))) (dtype NUMERIC)) , (create_table_columns_item (column_name (qident (ident v1))) (dtype VARCHAR) (dtype_len ( MAX ))) , (create_table_columns_item (column_name (qident (ident nv1))) (dtype NVARCHAR) (dtype_len ( 10 ))) , (create_table_columns_item (column_name (qident (ident nv2))) (dtype NVARCHAR) (dtype_len ( MAX )))) )))) (stmt (semicolon_stmt ;)) (stmt (create_table_stmt CREATE TABLE (table_name (qident (ident [mssql_t2]))) (create_table_definition ( (create_table_columns (create_table_columns_item (column_name (qident (ident [i1]))) (dtype (qident (ident [INT]))) (create_table_column_inline_cons IDENTITY ( 1 , 1 )) (create_table_column_inline_cons NOT NULL)) , (create_table_columns_item (column_name (qident (ident [v1]))) (dtype (qident (ident [VARCHAR]))) (dtype_len ( 350 )) (dtype_attr NULL)) , (create_table_columns_item (column_name (qident (ident [v2]))) (dtype (qident (ident [VARCHAR]))) (dtype_len ( max )) (dtype_attr NULL)) , (create_table_columns_item (column_name (qident (ident [b1]))) (dtype (qident (ident [BIT]))) (dtype_attr NULL)) , (create_table_columns_item (column_name (qident (ident [d1]))) (dtype (qident (ident [DATETIME]))) (dtype_attr NULL)) , (create_table_columns_item CONSTRAINT (qident (ident [PK_i1])) (create_table_column_cons PRIMARY KEY CLUSTERED ( (qident (ident [i1])) ASC ) (index_storage_clause (index_mssql_storage_clause WITH ( (qident (ident PAD_INDEX)) = (qident (ident (non_reserved_words OFF))) , (qident (ident STATISTICS_NORECOMPUTE)) = (qident (ident (non_reserved_words OFF))) , (qident (ident IGNORE_DUP_KEY)) = (qident (ident (non_reserved_words OFF))) , (qident (ident ALLOW_ROW_LOCKS)) = (qident (ident (non_reserved_words ON))) , (qident (ident ALLOW_PAGE_LOCKS)) = (qident (ident (non_reserved_words ON))) ) (create_table_options_mssql_item ON (qident (ident [PRIMARY])))))))) ) (create_table_options (create_table_options_item (create_table_options_mssql_item ON (qident (ident [PRIMARY])))) (create_table_options_item (create_table_options_mssql_item TEXTIMAGE_ON (qident (ident [PRIMARY])))))))) (stmt (semicolon_stmt ;)) (stmt (assignment_stmt SET (set_session_option (set_mssql_session_option ANSI_NULLS ON)))) GO (stmt (assignment_stmt SET (set_session_option (set_mssql_session_option QUOTED_IDENTIFIER ON)))) GO (stmt (assignment_stmt SET (set_session_option (set_mssql_session_option ANSI_PADDING ON)))) GO (stmt (create_table_stmt CREATE TABLE (table_name (qident (ident [default]) . (ident [mssql_t3]))) (create_table_definition ( (create_table_columns (create_table_columns_item (column_name (qident (ident [v1]))) (dtype (qident (ident [VARCHAR]))) (dtype_len ( 50 )) (dtype_attr NOT NULL)) , (create_table_columns_item (column_name (qident (ident [s2]))) (dtype (qident (ident [SMALLINT]))) (dtype_attr NULL)) , (create_table_columns_item (column_name (qident (ident [sd1]))) (dtype (qident (ident [SMALLDATETIME]))) (dtype_attr NULL)) , (create_table_columns_item (column_name (qident (ident [i1]))) (dtype (qident (ident [INT]))) (dtype_attr NULL)) , (create_table_columns_item (column_name (qident (ident [v2]))) (dtype (qident (ident [VARCHAR]))) (dtype_len ( 100 )) (dtype_attr NULL)) , (create_table_columns_item CONSTRAINT (qident (ident [PK_v1])) (create_table_column_cons PRIMARY KEY CLUSTERED ( (qident (ident [v1])) ASC ) (index_storage_clause (index_mssql_storage_clause WITH ( (qident (ident PAD_INDEX)) = (qident (ident (non_reserved_words OFF))) , (qident (ident STATISTICS_NORECOMPUTE)) = (qident (ident (non_reserved_words OFF))) , (qident (ident IGNORE_DUP_KEY)) = (qident (ident (non_reserved_words OFF))) , (qident (ident ALLOW_ROW_LOCKS)) = (qident (ident (non_reserved_words ON))) , (qident (ident ALLOW_PAGE_LOCKS)) = (qident (ident (non_reserved_words ON))) ) (create_table_options_mssql_item ON (qident (ident [PRIMARY])))))))) ) (create_table_options (create_table_options_item (create_table_options_mssql_item ON (qident (ident [PRIMARY])))))))) GO (stmt (assignment_stmt SET (set_session_option (set_mssql_session_option ANSI_PADDING OFF)))) GO) <EOF>)
Ln:1 Not executed - offline mode set
Ln:12 Not executed - offline mode set
Ln:31 Not executed - offline mode set
Configuration file: file:/home/alex/Repositories/hive/hplsql/target/classes/hplsql-site.xml
Parser tree: (program (block (stmt (create_table_stmt CREATE TABLE IF NOT EXISTS (table_name (qident (ident `users`))) (create_table_definition ( (create_table_columns (create_table_columns_item (column_name (qident (ident `id`))) (dtype int) (dtype_len ( 11 )) (dtype_attr NOT NULL) (create_table_column_inline_cons AUTO_INCREMENT)) , (create_table_columns_item (column_name (qident (ident `name`))) (dtype (qident (ident text))) (dtype_attr NOT NULL)) , (create_table_columns_item (create_table_column_cons PRIMARY KEY ( (qident (ident `id`)) )))) ) (create_table_options (create_table_options_item (create_table_options_mysql_item ENGINE = (expr (expr_atom (qident (ident MyISAM)))))) (create_table_options_item (create_table_options_mysql_item DEFAULT CHARSET = (expr (expr_atom (qident (ident latin1)))))) (create_table_options_item (create_table_options_mysql_item COMMENT = (expr (expr_atom (string 'users table'))))) (create_table_options_item (create_table_options_mysql_item AUTO_INCREMENT = (expr (expr_atom (int_number 20))))))))) (stmt (semicolon_stmt ;))) <EOF>)
Ln:1 Not executed - offline mode set
Configuration file: file:/home/alex/Repositories/hive/hplsql/target/classes/hplsql-site.xml
Parser tree: (program (block (stmt (delete_stmt DELETE FROM (table_name (qident (ident TEST1_DB) . (ident WK_WRK))) ALL)) (stmt (semicolon_stmt ;))) <EOF>)
Ln:1 Not executed - offline mode set
Configuration file: file:/home/alex/Repositories/hive/hplsql/target/classes/hplsql-site.xml
Parser tree: (program (block (stmt (create_table_stmt CREATE TABLE (table_name (qident (ident "default") . (ident "AUDIT_LOGS"))) (create_table_definition ( (create_table_columns (create_table_columns_item (column_name (qident (ident "RUN_ID"))) (dtype VARCHAR2) (dtype_len ( 36 )) (dtype_attr NOT NULL) (create_table_column_inline_cons ENABLE)) , (create_table_columns_item (column_name (qident (ident "FILE_NAME"))) (dtype VARCHAR2) (dtype_len ( 255 )) (dtype_attr NOT NULL) (create_table_column_inline_cons ENABLE)) , (create_table_columns_item (column_name (qident (ident "RUN_DATE"))) (dtype DATE) (dtype_attr NOT NULL) (create_table_column_inline_cons ENABLE)) , (create_table_columns_item CONSTRAINT (qident (ident "AUDIT_LOGS_PK")) (create_table_column_cons PRIMARY KEY ( (qident (ident "RUN_ID")) ) ENABLE))) )))) (stmt (semicolon_stmt ;))) <EOF>)
Ln:1 Not executed - offline mode set
Configuration file: file:/home/alex/Repositories/hive/hplsql/target/classes/hplsql-site.xml
Parser tree: (program (block (stmt (select_stmt (fullselect_stmt (fullselect_stmt_item (subselect_stmt SELECT (select_list (select_list_item (select_list_asterisk *))) (from_clause FROM (from_table_clause (from_table_name_clause (table_name (qident (ident a)))))) (where_clause where (bool_expr (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_atom (int_number 1))) (bool_expr_binary_operator =) (expr (expr_atom (int_number 1)))))) (bool_expr_logical_operator and) (bool_expr (bool_expr_atom (bool_expr_unary not exists ( (select_stmt (fullselect_stmt (fullselect_stmt_item (subselect_stmt select (select_list (select_list_item (select_list_asterisk *))) (from_clause from (from_table_clause (from_table_name_clause (table_name (qident (ident b)))))))))) ))))))))))) (stmt (select_stmt (fullselect_stmt (fullselect_stmt_item (subselect_stmt SELECT (select_list (select_list_item (select_list_asterisk *))) (from_clause FROM (from_table_clause (from_table_name_clause (table_name (qident (ident a)))))) (where_clause where (bool_expr (bool_expr_atom (bool_expr_unary not exists ( (select_stmt (fullselect_stmt (fullselect_stmt_item (subselect_stmt select (select_list (select_list_item (select_list_asterisk *))) (from_clause from (from_table_clause (from_table_name_clause (table_name (qident (ident b)))))))))) )))))))))) (stmt (semicolon_stmt ;)) (stmt (select_stmt (fullselect_stmt (fullselect_stmt_item (subselect_stmt SELECT (select_list (select_list_item (select_list_asterisk *))) (from_clause FROM (from_table_clause (from_table_name_clause (table_name (qident (ident tab)))))) (where_clause WHERE (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_atom (qident (ident FILE_DATE)))) (bool_expr_binary_operator >) (expr ( (select_stmt (fullselect_stmt (fullselect_stmt_item (subselect_stmt SELECT (select_list (select_list_item (expr (expr_agg_window_func MAX ( (expr (expr_atom (qident (ident FILE_DATE)))) ))) (select_list_alias AS (qident (ident MX_C_FILE_DT))))) (from_clause FROM (from_table_clause (from_table_name_clause (table_name (qident (ident tab)))))) (where_clause WHERE (bool_expr (bool_expr (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_atom (qident (ident FLAG)))) (bool_expr_binary_operator =) (expr (expr_atom (string 'C')))))) (bool_expr_logical_operator AND) (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_atom (qident (ident IND)))) (bool_expr_binary_operator =) (expr (expr_atom (string 'C'))))))) (bool_expr_logical_operator AND) (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_atom (qident (ident FILE_DATE)))) (bool_expr_binary_operator <) (expr ( (select_stmt (fullselect_stmt (fullselect_stmt_item (subselect_stmt SELECT (select_list (select_list_item (expr (expr_spec_func CAST ( (expr (expr_atom (qident (ident LOAD_START)))) AS (dtype DATE) ))))) (from_clause FROM (from_table_clause (from_table_name_clause (table_name (qident (ident tab)))))) (where_clause WHERE (bool_expr (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_atom (qident (ident SOURCE_ID)))) (bool_expr_binary_operator =) (expr (expr_atom (int_number 451)))))) (bool_expr_logical_operator AND) (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_atom (qident (ident BATCH)))) (bool_expr_binary_operator =) (expr (expr_atom (string 'R')))))))))))) ))))))))))) ))))))))))) (stmt (semicolon_stmt ;)) (stmt (select_stmt (fullselect_stmt (fullselect_stmt_item (subselect_stmt SELECT (select_list (select_list_item (select_list_asterisk *))) (from_clause FROM (from_table_clause (from_table_name_clause (table_name (qident (ident DLTA_POC))))) (from_join_clause (from_join_type_clause LEFT OUTER JOIN) (from_table_clause (from_table_name_clause (table_name (qident (ident TEST3_DB) . (ident TET))) (from_alias_clause (qident (ident ORG))))) ON (bool_expr (bool_expr (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_dot (expr_dot_property_access (ident DLTA_POC) . (ident YS_NO)))) (bool_expr_binary_operator =) (expr (expr_dot (expr_dot_property_access (ident ORG) . (ident EM_CODE_A))))))) (bool_expr_logical_operator AND) (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_dot (expr_dot_property_access (ident DLTA_POC) . (ident AREA_NO)))) (bool_expr_binary_operator =) (expr (expr_dot (expr_dot_property_access (ident ORG) . (ident AREA_CODE_2)))))))) (bool_expr_logical_operator AND) (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_dot (expr_dot_property_access (ident DLTA_POC) . (ident GNT_POC)))) (bool_expr_binary_operator =) (expr (expr_dot (expr_dot_property_access (ident ORG) . (ident GEN_CD))))))))) (from_join_clause (from_join_type_clause LEFT OUTER JOIN) (from_table_clause (from_table_name_clause (table_name (qident (ident TEST) . (ident (non_reserved_words LOCATION)))) (from_alias_clause (qident (ident LOC))))) ON (bool_expr (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_dot (expr_dot_property_access (ident DLTA_POC) . (ident SE_KEY_POC)))) (bool_expr_binary_operator =) (expr (expr_dot (expr_dot_property_access (ident LOC) . (ident LOC_ID))))))) (bool_expr_logical_operator AND) (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_dot (expr_dot_property_access (ident LOC) . (ident LOCATION_END_DT)))) (bool_expr_binary_operator =) (expr (expr_atom (date_literal DATE (string '9999-12-31'))))))))))))))) (stmt (semicolon_stmt ;)) (stmt (select_stmt (fullselect_stmt (fullselect_stmt_item (subselect_stmt SELECT (select_list (select_list_item (select_list_asterisk *))) (from_clause FROM (from_table_clause (from_table_name_clause (table_name (qident (ident a)))))) (where_clause WHERE (bool_expr NOT ( (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_atom (int_number 1))) (bool_expr_binary_operator =) (expr (expr_atom (int_number 2)))))) ))))))))) <EOF>)
Configuration file: file:/home/alex/Repositories/hive/hplsql/target/classes/hplsql-site.xml
Parser tree: (program (block (stmt (update_stmt UPDATE (update_table (table_name (qident (ident tab))) (qident (ident T))) SET (update_assignment (assignment_stmt_item (assignment_stmt_single_item ( (ident c1) ) = (expr (expr_spec_func TRIM ( (expr (expr_atom (qident (ident c1)))) )))))) (where_clause WHERE (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_dot (expr_dot_property_access (ident T) . (ident c2)))) (bool_expr_binary_operator =) (expr (expr_atom (string 'A'))))))))) (stmt (semicolon_stmt ;)) (stmt (update_stmt UPDATE (update_table (table_name (qident (ident tab))) (qident (ident T))) SET (update_assignment (assignment_stmt_item (assignment_stmt_single_item (ident c1) = (expr (expr_spec_func TRIM ( (expr (expr_atom (qident (ident c1)))) )))))) (where_clause WHERE (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_dot (expr_dot_property_access (ident T) . (ident c2)))) (bool_expr_binary_operator =) (expr (expr_atom (string 'A'))))))))) (stmt (semicolon_stmt ;)) (stmt (update_stmt UPDATE (update_table (table_name (qident (ident tab)))) SET (update_assignment (assignment_stmt_item (assignment_stmt_single_item (ident c1) = (expr (expr_atom (string '0011')))))) (where_clause WHERE (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_atom (qident (ident c1)))) (bool_expr_binary_operator =) (expr (expr_atom (string '0021'))))))))) (stmt (semicolon_stmt ;)) (stmt (update_stmt UPDATE (update_table (table_name (qident (ident tab))) (qident (ident T))) SET (update_assignment (assignment_stmt_item (assignment_stmt_single_item (ident c1) = (expr (expr_spec_func TRIM ( (expr (expr_atom (qident (ident c1)))) ))))) , (assignment_stmt_item (assignment_stmt_single_item (ident c3) = (expr (expr_spec_func TRIM ( (expr (expr_atom (qident (ident c3)))) )))))) (where_clause WHERE (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_dot (expr_dot_property_access (ident T) . (ident col2)))) (bool_expr_binary_operator =) (expr (expr_atom (string 'A'))))))))) (stmt (semicolon_stmt ;)) (stmt (update_stmt UPDATE (update_table (table_name (qident (ident tab))) (qident (ident T))) SET (update_assignment (assignment_stmt_item (assignment_stmt_multiple_item ( (ident c1) , (ident c3) ) = ( (expr (expr_spec_func TRIM ( (expr (expr_atom (qident (ident c1)))) ))) , (expr (expr_spec_func TRIM ( (expr (expr_atom (qident (ident c3)))) ))) )))) (where_clause WHERE (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_dot (expr_dot_property_access (ident T) . (ident col2)))) (bool_expr_binary_operator =) (expr (expr_atom (string 'A'))))))))) (stmt (semicolon_stmt ;)) (stmt (update_stmt UPDATE (update_table (table_name (qident (ident tab))) (qident (ident T))) SET (update_assignment (assignment_stmt_item (assignment_stmt_select_item ( (ident c1) , (ident c2) , (ident c3) , (ident c4) ) = ( (select_stmt (fullselect_stmt (fullselect_stmt_item (subselect_stmt SELECT (select_list (select_list_item (expr (expr_atom (qident (ident c1))))) , (select_list_item (expr (expr_atom (qident (ident c2))))) , (select_list_item (expr (expr_spec_func TRIM ( (expr (expr_atom (qident (ident c3)))) )))) , (select_list_item (expr (expr_atom (qident (ident c4)))))) (from_clause FROM (from_table_clause (from_table_name_clause (table_name (qident (ident tab2))) (from_alias_clause (qident (ident C)))))) (where_clause WHERE (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_dot (expr_dot_property_access (ident C) . (ident c1)))) (bool_expr_binary_operator =) (expr (expr_dot (expr_dot_property_access (ident T) . (ident c1)))))))))))) )))) (where_clause WHERE (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_dot (expr_dot_property_access (ident T) . (ident c2)))) (bool_expr_binary_operator =) (expr (expr_atom (string 'A'))))))))) (stmt (semicolon_stmt ;)) (stmt (update_stmt UPDATE (update_table (table_name (qident (ident tab))) (qident (ident T))) SET (update_assignment (assignment_stmt_item (assignment_stmt_single_item ( (ident c1) ) = (expr ( (select_stmt (fullselect_stmt (fullselect_stmt_item (subselect_stmt SELECT (select_list (select_list_item (expr (expr_atom (qident (ident c1)))))) (from_clause FROM (from_table_clause (from_table_name_clause (table_name (qident (ident tab2))) (from_alias_clause (qident (ident C)))))) (where_clause WHERE (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_dot (expr_dot_property_access (ident C) . (ident c1)))) (bool_expr_binary_operator =) (expr (expr_dot (expr_dot_property_access (ident T) . (ident c1)))))))))))) ))))) (where_clause WHERE (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_dot (expr_dot_property_access (ident T) . (ident c2)))) (bool_expr_binary_operator =) (expr (expr_atom (string 'a'))))))))) (stmt (semicolon_stmt ;)) (stmt (update_stmt UPDATE (update_table (table_name (qident (ident tab))) (qident (ident T))) SET (update_assignment (assignment_stmt_item (assignment_stmt_single_item (ident c1) = (expr ( (select_stmt (fullselect_stmt (fullselect_stmt_item (subselect_stmt SELECT (select_list (select_list_item (expr (expr_atom (qident (ident c1)))))) (from_clause FROM (from_table_clause (from_table_name_clause (table_name (qident (ident tab2))) (from_alias_clause (qident (ident C)))))) (where_clause WHERE (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_dot (expr_dot_property_access (ident C) . (ident c1)))) (bool_expr_binary_operator =) (expr (expr_dot (expr_dot_property_access (ident T) . (ident c1)))))))))))) ))))) (where_clause WHERE (bool_expr (bool_expr_atom (bool_expr_binary (expr (expr_dot (expr_dot_property_access (ident T) . (ident c2)))) (bool_expr_binary_operator =) (expr (expr_atom (string 'a'))))))))) (stmt (semicolon_stmt ;))) <EOF>)
Ln:1 Not executed - offline mode set
Ln:3 Not executed - offline mode set
Ln:7 Not executed - offline mode set
Ln:9 Not executed - offline mode set
Ln:11 Not executed - offline mode set
Ln:15 Not executed - offline mode set
Ln:25 Not executed - offline mode set
Ln:30 Not executed - offline mode set
