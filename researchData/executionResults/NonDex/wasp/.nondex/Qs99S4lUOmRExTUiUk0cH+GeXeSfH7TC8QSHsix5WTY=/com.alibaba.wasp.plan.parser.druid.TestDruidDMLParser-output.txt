24/04/23 19:46:54 DEBUG druid.DruidParser: Parsing SQL CREATE TABLE User { Required Int64 user_id; Required String name; Optional DOUBLE value; }  primary key(user_id),  entity group root, entity group key(user_id);
24/04/23 19:46:54 DEBUG druid.DruidDDLParser: CreateTablePlan CreateTablePlan [table=CREATE TABLE User { 
  REQUIRED INT64 user_id COLUMNFAMILY d;
  REQUIRED STRING name COLUMNFAMILY d;
  OPTIONAL DOUBLE value COLUMNFAMILY d;
} 
PRIMARY KEY(user_id),
ENTITY GROUP ROOT,
ENTITY GROUP KEY(user_id);
, splitKeys=null]
24/04/23 19:46:54 DEBUG druid.DruidParser: Parsing SQL CREATE TABLE Photo { Required Int64 user_id columnfamily cf comment 'aaa';  Required Int32 photo_id comment 'child primary key';  Optional Int64 time; Optional String full_url;  Optional String thumbnail_url; Optional string tag; Optional DATETIME date; Optional Int32 int32Type; }  primary key(user_id,photo_id),  in table User,  Entity Group Key(user_id) references User; 
24/04/23 19:46:54 DEBUG druid.DruidDDLParser: CreateTablePlan CreateTablePlan [table=CREATE TABLE Photo { 
  REQUIRED INT64 user_id COLUMNFAMILY cf;
  REQUIRED INT32 photo_id COLUMNFAMILY d;
  OPTIONAL INT64 time COLUMNFAMILY d;
  OPTIONAL STRING full_url COLUMNFAMILY d;
  OPTIONAL STRING thumbnail_url COLUMNFAMILY d;
  OPTIONAL STRING tag COLUMNFAMILY d;
  OPTIONAL DATETIME date COLUMNFAMILY d;
  OPTIONAL INT32 int32Type COLUMNFAMILY d;
} 
PRIMARY KEY(user_id, photo_id, ),
 IN TABLE User,
 ENTITY GROUP KEY(user_id) REFERENCES User;
, splitKeys=null]
CREATE TABLE User { 
  REQUIRED INT64 user_id COLUMNFAMILY d;
  REQUIRED STRING name COLUMNFAMILY d;
} 
PRIMARY KEY(user_id),
ENTITY GROUP ROOT,
ENTITY GROUP KEY(user_id);



CREATE TABLE Photo { 
  REQUIRED INT64 user_id COLUMNFAMILY d;
  REQUIRED INT32 photo_id COLUMNFAMILY d;
  REQUIRED INT64 time COLUMNFAMILY d;
  REQUIRED STRING full_url COLUMNFAMILY d;
  OPTIONAL STRING thumbnail_url COLUMNFAMILY d;
  REPEATED STRING tag COLUMNFAMILY d;
} 
PRIMARY KEY(user_id, photo_id, ),
 IN TABLE User,
 ENTITY GROUP KEY(user_id) REFERENCES User;

24/04/23 19:46:54 DEBUG druid.DruidParser: Parsing SQL CREATE TABLE User { Required Int64 user_id; Required String name; Optional DOUBLE value; }  primary key(user_id),  entity group root, entity group key(user_id);
24/04/23 19:46:54 DEBUG druid.DruidDDLParser: CreateTablePlan CreateTablePlan [table=CREATE TABLE User { 
  REQUIRED INT64 user_id COLUMNFAMILY d;
  REQUIRED STRING name COLUMNFAMILY d;
  OPTIONAL DOUBLE value COLUMNFAMILY d;
} 
PRIMARY KEY(user_id),
ENTITY GROUP ROOT,
ENTITY GROUP KEY(user_id);
, splitKeys=null]
24/04/23 19:46:54 DEBUG druid.DruidParser: Parsing SQL CREATE TABLE Photo { Required Int64 user_id columnfamily cf comment 'aaa';  Required Int32 photo_id comment 'child primary key';  Optional Int64 time; Optional String full_url;  Optional String thumbnail_url; Optional string tag; Optional DATETIME date; Optional Int32 int32Type; }  primary key(user_id,photo_id),  in table User,  Entity Group Key(user_id) references User; 
24/04/23 19:46:54 DEBUG druid.DruidDDLParser: CreateTablePlan CreateTablePlan [table=CREATE TABLE Photo { 
  REQUIRED INT64 user_id COLUMNFAMILY cf;
  REQUIRED INT32 photo_id COLUMNFAMILY d;
  OPTIONAL INT64 time COLUMNFAMILY d;
  OPTIONAL STRING full_url COLUMNFAMILY d;
  OPTIONAL STRING thumbnail_url COLUMNFAMILY d;
  OPTIONAL STRING tag COLUMNFAMILY d;
  OPTIONAL DATETIME date COLUMNFAMILY d;
  OPTIONAL INT32 int32Type COLUMNFAMILY d;
} 
PRIMARY KEY(user_id, photo_id, ),
 IN TABLE User,
 ENTITY GROUP KEY(user_id) REFERENCES User;
, splitKeys=null]
24/04/23 19:46:54 DEBUG druid.DruidParser: Parsing SQL UPDATE User SET name = 'Mike' WHERE user_id = 123;
24/04/23 19:46:54 DEBUG druid.DruidDMLParser: UPDATE SQL From clause User
24/04/23 19:46:54 DEBUG druid.DruidDMLParser: UPDATE SQL where user_id = 123
24/04/23 19:46:54 DEBUG druid.DruidDMLParser: UpdatePlan UpdatePlan [actions=[UpdateAction [primayKey=[0, 0, 0, 0, 0, 0, 0, 123], tableName=User, columns=[ColumnAction [tableName=User, familyName=d, columnName=name, value=[77, 105, 107, 101], isIndex=false]]]]]
24/04/23 19:46:54 DEBUG druid.DruidParser: Parsing SQL UPDATE Photo SET date = NOW() WHERE user_id = 123 and photo_id=123;
24/04/23 19:46:54 DEBUG druid.DruidDMLParser: UPDATE SQL From clause Photo
24/04/23 19:46:54 DEBUG druid.DruidDMLParser: UPDATE SQL where user_id = 123 AND photo_id = 123
24/04/23 19:46:54 DEBUG druid.DruidDMLParser: UpdatePlan UpdatePlan [actions=[UpdateAction [primayKey=[0, 0, 0, 0, 0, 0, 0, 123, 0, 0, 0, 0, 123], tableName=Photo, columns=[ColumnAction [tableName=Photo, familyName=d, columnName=date, value=[0, 0, 1, -113, 12, 72, 72, -61], isIndex=false]]]]]
24/04/23 19:46:54 DEBUG druid.DruidParser: Parsing SQL CREATE TABLE User { Required Int64 user_id; Required String name; Optional DOUBLE value; }  primary key(user_id),  entity group root, entity group key(user_id);
24/04/23 19:46:54 DEBUG druid.DruidDDLParser: CreateTablePlan CreateTablePlan [table=CREATE TABLE User { 
  REQUIRED INT64 user_id COLUMNFAMILY d;
  REQUIRED STRING name COLUMNFAMILY d;
  OPTIONAL DOUBLE value COLUMNFAMILY d;
} 
PRIMARY KEY(user_id),
ENTITY GROUP ROOT,
ENTITY GROUP KEY(user_id);
, splitKeys=null]
24/04/23 19:46:54 DEBUG druid.DruidParser: Parsing SQL CREATE TABLE Photo { Required Int64 user_id columnfamily cf comment 'aaa';  Required Int32 photo_id comment 'child primary key';  Optional Int64 time; Optional String full_url;  Optional String thumbnail_url; Optional string tag; Optional DATETIME date; Optional Int32 int32Type; }  primary key(user_id,photo_id),  in table User,  Entity Group Key(user_id) references User; 
24/04/23 19:46:54 DEBUG druid.DruidDDLParser: CreateTablePlan CreateTablePlan [table=CREATE TABLE Photo { 
  REQUIRED INT64 user_id COLUMNFAMILY cf;
  REQUIRED INT32 photo_id COLUMNFAMILY d;
  OPTIONAL INT64 time COLUMNFAMILY d;
  OPTIONAL STRING full_url COLUMNFAMILY d;
  OPTIONAL STRING thumbnail_url COLUMNFAMILY d;
  OPTIONAL STRING tag COLUMNFAMILY d;
  OPTIONAL DATETIME date COLUMNFAMILY d;
  OPTIONAL INT32 int32Type COLUMNFAMILY d;
} 
PRIMARY KEY(user_id, photo_id, ),
 IN TABLE User,
 ENTITY GROUP KEY(user_id) REFERENCES User;
, splitKeys=null]
24/04/23 19:46:54 DEBUG druid.DruidParser: Parsing SQL DELETE FROM User WHERE user_id = 123;
24/04/23 19:46:54 DEBUG druid.DruidDMLParser: UPDATE SQL From clause User
24/04/23 19:46:54 DEBUG druid.DruidDMLParser: UPDATE SQL where user_id = 123
24/04/23 19:46:54 DEBUG druid.DruidDMLParser: DeletePlan DeletePlan [actions=[DeleteAction [tableName=User, primayKey=[0, 0, 0, 0, 0, 0, 0, 123]]]]
24/04/23 19:46:54 DEBUG druid.DruidParser: Parsing SQL CREATE TABLE User { Required Int64 user_id; Required String name; Optional DOUBLE value; }  primary key(user_id),  entity group root, entity group key(user_id);
24/04/23 19:46:54 DEBUG druid.DruidDDLParser: CreateTablePlan CreateTablePlan [table=CREATE TABLE User { 
  REQUIRED INT64 user_id COLUMNFAMILY d;
  REQUIRED STRING name COLUMNFAMILY d;
  OPTIONAL DOUBLE value COLUMNFAMILY d;
} 
PRIMARY KEY(user_id),
ENTITY GROUP ROOT,
ENTITY GROUP KEY(user_id);
, splitKeys=null]
24/04/23 19:46:54 DEBUG druid.DruidParser: Parsing SQL CREATE TABLE Photo { Required Int64 user_id columnfamily cf comment 'aaa';  Required Int32 photo_id comment 'child primary key';  Optional Int64 time; Optional String full_url;  Optional String thumbnail_url; Optional string tag; Optional DATETIME date; Optional Int32 int32Type; }  primary key(user_id,photo_id),  in table User,  Entity Group Key(user_id) references User; 
24/04/23 19:46:54 DEBUG druid.DruidDDLParser: CreateTablePlan CreateTablePlan [table=CREATE TABLE Photo { 
  REQUIRED INT64 user_id COLUMNFAMILY cf;
  REQUIRED INT32 photo_id COLUMNFAMILY d;
  OPTIONAL INT64 time COLUMNFAMILY d;
  OPTIONAL STRING full_url COLUMNFAMILY d;
  OPTIONAL STRING thumbnail_url COLUMNFAMILY d;
  OPTIONAL STRING tag COLUMNFAMILY d;
  OPTIONAL DATETIME date COLUMNFAMILY d;
  OPTIONAL INT32 int32Type COLUMNFAMILY d;
} 
PRIMARY KEY(user_id, photo_id, ),
 IN TABLE User,
 ENTITY GROUP KEY(user_id) REFERENCES User;
, splitKeys=null]
24/04/23 19:46:54 DEBUG druid.DruidParser: Parsing SQL Insert into User(user_id,name,value) values(1,'binlijin',1.);
24/04/23 19:46:54 DEBUG druid.DruidDMLParser: INSERT SQL TableSource User
24/04/23 19:46:54 DEBUG druid.DruidDMLParser: From table User
24/04/23 19:46:54 DEBUG druid.DruidDMLParser:  SQLInsertItem user_id
24/04/23 19:46:54 DEBUG druid.DruidDMLParser:  SQLInsertItem name
24/04/23 19:46:54 DEBUG druid.DruidDMLParser:  SQLInsertItem value
24/04/23 19:46:54 DEBUG druid.DruidDMLParser: INSERT SQL Insert columns [user_id, name, value]
24/04/23 19:46:54 DEBUG druid.DruidDMLParser: INSERT SQL Insert Values List [ VALUES (1, 'binlijin', 1)]
24/04/23 19:46:54 DEBUG druid.DruidDMLParser: InsertPlan InsertPlan [actions=[InsertAction [tableName=User, primayKey=[0, 0, 0, 0, 0, 0, 0, 1], columns=[ColumnAction [tableName=User, familyName=d, columnName=user_id, value=[0, 0, 0, 0, 0, 0, 0, 1], isIndex=false], ColumnAction [tableName=User, familyName=d, columnName=name, value=[98, 105, 110, 108, 105, 106, 105, 110], isIndex=false], ColumnAction [tableName=User, familyName=d, columnName=value, value=[63, -16, 0, 0, 0, 0, 0, 0], isIndex=false]]]]]
24/04/23 19:46:54 DEBUG druid.DruidParser: Parsing SQL Insert into Photo(user_id,photo_id, time, full_url) values(1,1000,10000, 'dads');
24/04/23 19:46:54 DEBUG druid.DruidDMLParser: INSERT SQL TableSource Photo
24/04/23 19:46:54 DEBUG druid.DruidDMLParser: From table Photo
24/04/23 19:46:54 DEBUG druid.DruidDMLParser:  SQLInsertItem user_id
24/04/23 19:46:54 DEBUG druid.DruidDMLParser:  SQLInsertItem photo_id
24/04/23 19:46:54 DEBUG druid.DruidDMLParser:  SQLInsertItem time
24/04/23 19:46:54 DEBUG druid.DruidDMLParser:  SQLInsertItem full_url
24/04/23 19:46:54 DEBUG druid.DruidDMLParser: INSERT SQL Insert columns [user_id, photo_id, time, full_url]
24/04/23 19:46:54 DEBUG druid.DruidDMLParser: INSERT SQL Insert Values List [ VALUES (1, 1000, 10000, 'dads')]
24/04/23 19:46:54 DEBUG druid.DruidDMLParser: InsertPlan InsertPlan [actions=[InsertAction [tableName=Photo, primayKey=[0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3, -24], columns=[ColumnAction [tableName=Photo, familyName=cf, columnName=user_id, value=[0, 0, 0, 0, 0, 0, 0, 1], isIndex=false], ColumnAction [tableName=Photo, familyName=d, columnName=photo_id, value=[0, 0, 3, -24], isIndex=false], ColumnAction [tableName=Photo, familyName=d, columnName=time, value=[0, 0, 0, 0, 0, 0, 39, 16], isIndex=false], ColumnAction [tableName=Photo, familyName=d, columnName=full_url, value=[100, 97, 100, 115], isIndex=false]]]]]
24/04/23 19:46:54 DEBUG druid.DruidParser: Parsing SQL Insert into Photo(user_id,photo_id,time,full_url,date) values(1,1000,10000,'dads',NOW());
24/04/23 19:46:54 DEBUG druid.DruidDMLParser: INSERT SQL TableSource Photo
24/04/23 19:46:54 DEBUG druid.DruidDMLParser: From table Photo
24/04/23 19:46:54 DEBUG druid.DruidDMLParser:  SQLInsertItem user_id
24/04/23 19:46:54 DEBUG druid.DruidDMLParser:  SQLInsertItem photo_id
24/04/23 19:46:54 DEBUG druid.DruidDMLParser:  SQLInsertItem time
24/04/23 19:46:54 DEBUG druid.DruidDMLParser:  SQLInsertItem full_url
24/04/23 19:46:54 DEBUG druid.DruidDMLParser:  SQLInsertItem date
24/04/23 19:46:54 DEBUG druid.DruidDMLParser: INSERT SQL Insert columns [user_id, photo_id, time, full_url, date]
24/04/23 19:46:54 DEBUG druid.DruidDMLParser: INSERT SQL Insert Values List [ VALUES (1, 1000, 10000, 'dads', NOW())]
24/04/23 19:46:54 DEBUG druid.DruidDMLParser: InsertPlan InsertPlan [actions=[InsertAction [tableName=Photo, primayKey=[0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3, -24], columns=[ColumnAction [tableName=Photo, familyName=cf, columnName=user_id, value=[0, 0, 0, 0, 0, 0, 0, 1], isIndex=false], ColumnAction [tableName=Photo, familyName=d, columnName=photo_id, value=[0, 0, 3, -24], isIndex=false], ColumnAction [tableName=Photo, familyName=d, columnName=time, value=[0, 0, 0, 0, 0, 0, 39, 16], isIndex=false], ColumnAction [tableName=Photo, familyName=d, columnName=full_url, value=[100, 97, 100, 115], isIndex=false], ColumnAction [tableName=Photo, familyName=d, columnName=date, value=[0, 0, 1, -113, 12, 72, 72, -34], isIndex=false]]]]]
