{"id":"1715951427655-56bf6153-0e58-49ac-93a2-68bb034515dd","testOrder":["org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated","org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientConfigClientBootstrapConfigurationTests.onWhenRequested","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndGenericPrimaryPortNameConfiguredShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredGenericPrimaryPortNameShouldReturnFirstPortAndLogWarning","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredPrimaryPortNameInLabelShouldReturnFirstPortAndLogWarning","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndPrimaryPortNameConfiguredWithLabelShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutAnyConfigurationShouldPickTheFirstPort","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedOrHttpsPortShouldFallBackToHttpPort","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedShouldFallBackToHttpsPort","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutEndpointsShouldBeSkipped","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutPortsShouldBeSkipped","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithNotReadyAddressesIncludedShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithoutReadyAddressesShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryInstancesWithServiceLabels","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryWithServiceLabels","org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttp","org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttps","org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated","org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork"],"results":{"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutPortsShouldBeSkipped":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutPortsShouldBeSkipped","result":"PASS","time":7.22205E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork","result":"PASS","time":0.001054326,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork","result":"PASS","time":0.001945765,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork","result":"PASS","time":0.002327194,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredPrimaryPortNameInLabelShouldReturnFirstPortAndLogWarning":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredPrimaryPortNameInLabelShouldReturnFirstPortAndLogWarning","result":"PASS","time":0.001495868,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedOrHttpsPortShouldFallBackToHttpPort":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedOrHttpsPortShouldFallBackToHttpPort","result":"PASS","time":0.001226215,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredGenericPrimaryPortNameShouldReturnFirstPortAndLogWarning":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredGenericPrimaryPortNameShouldReturnFirstPortAndLogWarning","result":"PASS","time":0.001339723,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryInstancesWithServiceLabels":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryInstancesWithServiceLabels","result":"PASS","time":0.001692322,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttp":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttp","result":"PASS","time":0.005994193,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndPrimaryPortNameConfiguredWithLabelShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndPrimaryPortNameConfiguredWithLabelShouldWork","result":"PASS","time":0.001055047,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutEndpointsShouldBeSkipped":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutEndpointsShouldBeSkipped","result":"PASS","time":7.81997E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated","result":"PASS","time":0.204904305,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndGenericPrimaryPortNameConfiguredShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndGenericPrimaryPortNameConfiguredShouldWork","result":"PASS","time":0.00238444,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientConfigClientBootstrapConfigurationTests.onWhenRequested":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientConfigClientBootstrapConfigurationTests.onWhenRequested","result":"PASS","time":0.265798219,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork","result":"PASS","time":0.033364499,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithoutReadyAddressesShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithoutReadyAddressesShouldWork","result":"PASS","time":0.08353968,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttps":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttps","result":"PASS","time":2.13312E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutAnyConfigurationShouldPickTheFirstPort":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutAnyConfigurationShouldPickTheFirstPort","result":"PASS","time":0.001515075,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedShouldFallBackToHttpsPort":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedShouldFallBackToHttpsPort","result":"PASS","time":8.93059E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork","result":"PASS","time":0.002533506,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated","result":"PASS","time":0.003691041,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork","result":"PASS","time":9.37242E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork","result":"PASS","time":0.007165601,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithNotReadyAddressesIncludedShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithNotReadyAddressesIncludedShouldWork","result":"PASS","time":0.001410305,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryWithServiceLabels":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryWithServiceLabels","result":"PASS","time":0.001085742,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork","result":"PASS","time":0.003376592,"stackTrace":[]}}}