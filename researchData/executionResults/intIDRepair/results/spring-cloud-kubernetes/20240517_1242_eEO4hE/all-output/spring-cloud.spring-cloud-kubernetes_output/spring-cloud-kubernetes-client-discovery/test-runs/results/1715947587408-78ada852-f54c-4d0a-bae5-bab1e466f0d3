{"id":"1715947587408-78ada852-f54c-4d0a-bae5-bab1e466f0d3","testOrder":["org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientConfigClientBootstrapConfigurationTests.onWhenRequested","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithoutReadyAddressesShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryInstancesWithServiceLabels","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredGenericPrimaryPortNameShouldReturnFirstPortAndLogWarning","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndPrimaryPortNameConfiguredWithLabelShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredPrimaryPortNameInLabelShouldReturnFirstPortAndLogWarning","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutPortsShouldBeSkipped","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutEndpointsShouldBeSkipped","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedOrHttpsPortShouldFallBackToHttpPort","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndGenericPrimaryPortNameConfiguredShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryWithServiceLabels","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutAnyConfigurationShouldPickTheFirstPort","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedShouldFallBackToHttpsPort","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithNotReadyAddressesIncludedShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork","org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttps","org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttp","org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated","org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated"],"results":{"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutPortsShouldBeSkipped":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutPortsShouldBeSkipped","result":"PASS","time":0.00123032,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork","result":"PASS","time":0.001606041,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork","result":"PASS","time":0.001591789,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork","result":"PASS","time":0.003086081,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredPrimaryPortNameInLabelShouldReturnFirstPortAndLogWarning":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredPrimaryPortNameInLabelShouldReturnFirstPortAndLogWarning","result":"PASS","time":0.001627019,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedOrHttpsPortShouldFallBackToHttpPort":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedOrHttpsPortShouldFallBackToHttpPort","result":"PASS","time":0.001553691,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredGenericPrimaryPortNameShouldReturnFirstPortAndLogWarning":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndMisconfiguredGenericPrimaryPortNameShouldReturnFirstPortAndLogWarning","result":"PASS","time":0.001839874,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryInstancesWithServiceLabels":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryInstancesWithServiceLabels","result":"PASS","time":0.002714363,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttp":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttp","result":"PASS","time":1.08141E-4,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndPrimaryPortNameConfiguredWithLabelShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndPrimaryPortNameConfiguredWithLabelShouldWork","result":"PASS","time":0.002056233,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutEndpointsShouldBeSkipped":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithoutEndpointsShouldBeSkipped","result":"PASS","time":0.001063386,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated","result":"PASS","time":0.009570724,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndGenericPrimaryPortNameConfiguredShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndGenericPrimaryPortNameConfiguredShouldWork","result":"PASS","time":0.003727412,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientConfigClientBootstrapConfigurationTests.onWhenRequested":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesDiscoveryClientConfigClientBootstrapConfigurationTests.onWhenRequested","result":"PASS","time":1.388230851,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork","result":"PASS","time":0.129736989,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithoutReadyAddressesShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithoutReadyAddressesShouldWork","result":"PASS","time":0.156765028,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttps":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesServiceInstanceTests.schemeIsHttps","result":"PASS","time":0.007172613,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutAnyConfigurationShouldPickTheFirstPort":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutAnyConfigurationShouldPickTheFirstPort","result":"PASS","time":0.001444408,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedShouldFallBackToHttpsPort":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.instanceWithMultiplePortsAndWithoutPrimaryPortNameSpecifiedShouldFallBackToHttpsPort","result":"PASS","time":0.001646486,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientTests.testDiscoveryGetInstanceOneNamespaceShouldWork","result":"PASS","time":0.002026431,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesOneNamespaceShouldWork","result":"PASS","time":0.001330234,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated":{"name":"org.springframework.cloud.kubernetes.client.discovery.reactive.KubernetesInformerReactiveDiscoveryClientAutoConfigurationTests.kubernetesDiscoveryClientCreated","result":"PASS","time":0.004989185,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetServicesAllNamespaceShouldWork","result":"PASS","time":0.008634594,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithNotReadyAddressesIncludedShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceWithNotReadyAddressesIncludedShouldWork","result":"PASS","time":0.001586927,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryWithServiceLabels":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryWithServiceLabels","result":"PASS","time":0.001791819,"stackTrace":[]},"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork":{"name":"org.springframework.cloud.kubernetes.client.discovery.KubernetesInformerDiscoveryClientTests.testDiscoveryGetInstanceAllNamespaceShouldWork","result":"PASS","time":0.006824137,"stackTrace":[]}}}