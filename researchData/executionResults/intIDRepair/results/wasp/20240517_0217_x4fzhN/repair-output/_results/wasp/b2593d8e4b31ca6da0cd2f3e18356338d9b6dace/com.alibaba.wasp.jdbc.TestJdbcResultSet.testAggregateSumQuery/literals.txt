START CLASSLITERALS

CLASSNAME
java.lang.String

LITERALS
String:"wasp.client.retries.number"
String:"create index test_index on test(column3);"
String:"create index test_index2 on test(column2);"
String:"create index test_index3 on test(column1,column3);"
String:"create index test_index4 on test(column1,column3,column4,column5);"
String:"create index test_index5 on test(column4) storing (column4);"
String:"create index test_index6 on test(column1,column2,column3);"
String:"create index test on test(column4, column5)"
String:"com.alibaba.wasp.jdbc.Driver"
String:"test"
String:"READ_MODEL"
String:"Insert into test(column1,column2,column3) values (123,456,'binlijin');"
String:"select column1,column2,column3 from test where column1=123 and column2=456"
String:"column1"
String:"column2"
String:"binlijin"
String:"column3"
String:"insert into test (column1,column2,column3) values(1,21,'binlijin2')"
String:"select column1,column2,column3 from test where column1=1 and column3='binlijin2'"
String:"select column1,column2,column3 from test where column2 = -222"
String:"select substr(column3, 1, 1) from test where column1=1 and column3='binlijin'"
String:"Insert into test(column1,column2,column3) values (2,1,'binlijin');"
String:"select column3 as y from test where column1=2 and column3='binlijin'"
String:"y"
String:"CREATE TABLE test(ID INT PRIMARY KEY)"
String:"INSERT INTO test SELECT X FROM SYSTEM_RANGE(1, 200)"
String:"SELECT * FROM test ORDER BY ID"
String:"DROP TABLE test"
String:"SELECT * FROM SYSTEM_RANGE(1, 100)"
String:"CREATE TABLE test(ID INT, NAME VARCHAR(10))"
String:"INSERT INTO test VALUES(1, 'Hello'), (2, 'WorldPeace')"
String:"SELECT SUBSTR(NAME, 12, 4) FROM test"
String:"SELECT SUBSTR(NAME, 2) FROM test"
String:"SELECT SUBSTR(NAME, ID) FROM test"
String:"SELECT SUBSTR(NAME, 2, 4) FROM test"
String:"SELECT SUBSTR(NAME, 8, 4) FROM test"
String:"SELECT SUBSTR(NAME, 7, 4) FROM test"
String:"SELECT SUBSTR(NAME, 3, ID*0) FROM test"
String:"Insert into test(column1,column2,column3) values (3031,11,'binlijin3031');"
String:"SELECT column1,column2,column3 FROM test where column1=3031 and column3='binlijin3031'"
String:"test INT"
String:"INSERT INTO test (column1,column2,column3) VALUES(31,-1, 'testInt')"
String:"INSERT INTO test (column1,column2,column3) VALUES(32,0, 'testInt')"
String:"INSERT INTO test (column1,column2,column3) VALUES(33,1, 'testInt')"
String:"INSERT INTO test (column1,column2,column3) VALUES(34,2147483647, 'testInt')"
String:"INSERT INTO test (column1,column2,column3) VALUES(35,-2147483648, 'testInt')"
String:"INSERT INTO test (column1,column2,column3) VALUES(36,0, 'testInt')"
String:"INSERT INTO test (column1,column2,column3) VALUES(37,0, 'testInt')"
String:"SELECT column1,column2,column3 FROM test where column3='testInt' ORDER BY column1"
String:"default fetch size="
String:"COLUMN2"
String:"Column2"
String:"COLUMN1"
String:"Column1"
String:"colUMN1"
String:"-1"
String:"0"
String:"35"
String:"36"
String:"test VARCHAR"
String:"INSERT INTO test (column1,column2,column3) VALUES(1,10,'')"
String:"INSERT INTO test (column1,column2,column3) VALUES(2,10,' ')"
String:"INSERT INTO test (column1,column2,column3) VALUES(3,10,'  ')"
String:"INSERT INTO test (column1,column2,column3) VALUES(4,10,'')"
String:"INSERT INTO test (column1,column2,column3) VALUES(5,10,'Hi')"
String:"INSERT INTO test (column1,column2,column3) VALUES(6,10,' Hi ')"
String:"INSERT INTO test (column1,column2,column3) VALUES(7,10,'Joe''s')"
String:"INSERT INTO test (column1,column2,column3) VALUES(8,10,'{escape}')"
String:"INSERT INTO test (column1,column2,column3) VALUES(9,10,'\n')"
String:"INSERT INTO test (column1,column2,column3) VALUES(10,10,'\'')"
String:"INSERT INTO test (column1,column2,column3) VALUES(11,10,'\%')"
String:"INSERT INTO test (column1,column2,column3) VALUES(12,10,'\%')"
String:"SELECT column1,column2,column3 FROM test where column2=10 ORDER BY column1"
String:"Value: <"
String:"> (should be: <>)"
String:"> (should be: < >)"
String:"> (should be: <  >)"
String:"> (should be: <null>)"
String:"> (should be: <Hi>)"
String:"Hi"
String:"> (should be: < Hi >)"
String:"> (should be: <Joe's>)"
String:"Joe's"
String:"> (should be: <{escape}>)"
String:"{escape}"
String:"> (should be: <\n>)"
String:"> (should be: <\'>)"
String:"'"
String:"> (should be: <\%>)"
String:"%"
String:"test DECIMAL"
String:"INSERT INTO test (column1,column5,column2,column3) VALUES(21,-1,9,'testDecimal')"
String:"INSERT INTO test (column1,column5,column2,column3) VALUES(22,.0,9,'testDecimal')"
String:"INSERT INTO test (column1,column5,column2,column3) VALUES(23,1.0,9,'testDecimal')"
String:"INSERT INTO test (column1,column5,column2,column3) VALUES(24,12345678.89,9,'testDecimal')"
String:"INSERT INTO test (column1,column5,column2,column3) VALUES(25,99999998.99,9,'testDecimal')"
String:"INSERT INTO test (column1,column5,column2,column3) VALUES(26,-99999998.99,9,'testDecimal')"
String:"INSERT INTO test (column1,column5,column2,column3) VALUES(27,-99999998.99,9,'testDecimal')"
String:"SELECT column1,column5 FROM test where column3='testDecimal' ORDER BY column1"
String:"-1.00"
String:"0.00"
String:"1.00"
String:"12345678.89"
String:"99999998.99"
String:"-99999998.99"
String:"test DOUBLE - FLOAT"
String:"INSERT INTO test (column1,column5,column4,column2,column3) VALUES(11, -1, -1, 2, 'testDoubleFloat')"
String:"INSERT INTO test (column1,column5,column4,column2,column3) VALUES(12,.0, .0, 2, 'testDoubleFloat')"
String:"INSERT INTO test (column1,column5,column4,column2,column3) VALUES(13, 1., 1., 2, 'testDoubleFloat')"
String:"INSERT INTO test (column1,column5,column4,column2,column3) VALUES(14, 12345678.89, 12345678.89, 2, 'testDoubleFloat')"
String:"INSERT INTO test (column1,column5,column4,column2,column3) VALUES(15, 99999999.99, 99999999.99, 2, 'testDoubleFloat')"
String:"INSERT INTO test (column1,column5,column4,column2,column3) VALUES(16, -99999999.99, -99999999.99, 2, 'testDoubleFloat')"
String:"INSERT INTO test (column1,column5,column4,column2,column3) VALUES(17, -99999999.99, -99999999.99, 2, 'testDoubleFloat')"
String:"SELECT column1,column5,column4 FROM test where column3='testDoubleFloat'  ORDER BY column1"
String:"test DATETIME"
String:"INSERT INTO test (column1,column6,column2,column3) VALUES (1,'2011-11-11 0:0:0', 13, 'testDatetime')"
String:"INSERT INTO test (column1,column6,column2,column3) VALUES (2,'2002-02-02 02:02:02', 13, 'testDatetime')"
String:"INSERT INTO test (column1,column6,column2,column3) VALUES (3,'1800-01-01 0:0:0', 13, 'testDatetime')"
String:"INSERT INTO test (column1,column6,column2,column3) VALUES (4,'9999-12-31 23:59:59', 13, 'testDatetime')"
String:"INSERT INTO test (column1,column6,column2,column3) VALUES (5,'9999-12-31 23:59:59', 13, 'testDatetime')"
String:"SELECT column1,column6 FROM test where column3='testDatetime' ORDER BY column1"
String:"Date:"
String:"Time:"
String:"Timestamp:"
String:"Date ms:"
String:"Time ms:"
String:"Timestamp ms:"
String:"1970 ms:"
String:"1970-01-01 00:00:00.0"
String:"2011-11-11 00:00:00.0"
String:"2011-11-11"
String:"00:00:00"
String:"2011-11-11 00:00:00"
String:"COLUMN6"
String:"2002-02-02"
String:"02:02:02"
String:"2002-02-02 02:02:02.0"
String:"1800-01-01"
String:"column6"
String:"1800-01-01 00:00:00.0"
String:"9999-12-31"
String:"Column6"
String:"23:59:59"
String:"9999-12-31 23:59:59.0"
String:"INSERT INTO test (column1,column2,column3) VALUES (1, 81001, 'testInAndNotIn')"
String:"INSERT INTO test (column1,column2,column3) VALUES (1, 81002, 'testInAndNotIn')"
String:"INSERT INTO test (column1,column2,column3) VALUES (1, 81003, 'testInAndNotIn')"
String:"INSERT INTO test (column1,column2,column3) VALUES (1, 81004, 'testInAndNotIn')"
String:"SELECT column1,column2 FROM test where column2 in (81002,81004)"
String:"INSERT INTO test (column1,column2,column3) VALUES (1, 1001, 'testGreatEqAndLessEq')"
String:"INSERT INTO test (column1,column2,column3) VALUES (1, 1002, 'testGreatEqAndLessEq')"
String:"INSERT INTO test (column1,column2,column3) VALUES (1, 1003, 'testGreatEqAndLessEq')"
String:"INSERT INTO test (column1,column2,column3) VALUES (1, 1004, 'testGreatEqAndLessEq')"
String:"SELECT column1,column2 FROM test where column2 > 1001"
String:"SELECT column1,column2 FROM test where column2 >= 1001"
String:"SELECT column1,column2 FROM test where column2 < 1004"
String:"SELECT column1,column2 FROM test where column2 <= 1004"
String:"INSERT INTO test (column1,column2,column3) VALUES (1, -2001, 'testLessNegativeValue')"
String:"INSERT INTO test (column1,column2,column3) VALUES (1, 2001, 'testLessNegativeValue')"
String:"SELECT column1,column2 FROM test where column2 < 3001"
String:"SELECT column1,column2 FROM test where column2 = -2001"
String:"SELECT column1,column2 FROM test where column2 = 2001"
String:"INSERT INTO test (column1,column2,column3) VALUES (1, 30001, 'testSelectForUpdateLock')"
String:"SELECT * FROM test WHERE column1=1 and column2=30001 for update"
String:"UPDATE test SET column3='testSelectForUpdateLock2' WHERE column1=1 and column2=30001"
String:"SELECT * FROM test WHERE column1=1 and column2=30001"
String:"testSelectForUpdateLock2"
String:"UPDATE test SET column3='testSelectForUpdateLock00' WHERE column1=1 and column2=30001"
String:"testSelectForUpdateLock00"
String:"User"
String:"Photo"
String:"Insert into User(user_id,name) values(1,'testTransaction');"
String:"Insert into Photo(user_id,photo_id,tag) values(1,1,'tag');"
String:"SELECT * FROM User WHERE user_id=1"
String:"name"
String:"SELECT * FROM Photo WHERE user_id=1 and photo_id=1"
String:"tag"
String:"INSERT INTO test (column1,column2,column3,column4) VALUES (1, 68001, 'testSelectNotOnlyIndex', 1)"
String:"INSERT INTO test (column1,column2,column3,column4) VALUES (1, 68002, 'testSelectNotOnlyIndex', 2)"
String:"SELECT column1,column2 FROM test where column1=1 and column3 = 'testSelectNotOnlyIndex'"
String:"SELECT column1,column2 FROM test where column1=1 and column3 = 'testSelectNotOnlyIndex' and column4=1"
String:"SELECT column1,column2 FROM test where column1=1 and column3 = 'testSelectNotOnlyIndex' and column4=2"
String:"SELECT column1,column2 FROM test where column1=1 and column3 = 'testSelectNotOnlyIndex' and column4>1"
String:"SELECT column1,column2 FROM test where column1=1 and column3 = 'testSelectNotOnlyIndex' and column4<=2"
String:"INSERT INTO test (column1,column2,column3,column4,column5) VALUES (1, 69001, 'testIndexLeftMatch', 1,1)"
String:"INSERT INTO test (column1,column2,column3,column4,column5) VALUES (1, 69002, 'testIndexLeftMatch', 1,2)"
String:"SELECT column1,column2 FROM test where column1=1 and column3 = 'testIndexLeftMatch' and column4=1"
String:"INSERT INTO test (column1,column2,column3,column4,column5) VALUES (1, 70001, 'testAggregateCountQuery', 1,1)"
String:"INSERT INTO test (column1,column2,column3,column4,column5) VALUES (1, 70002, 'testAggregateCountQuery', 1,2)"
String:"INSERT INTO test (column1,column2,column3,column4,column5) VALUES (1, 70003, 'testAggregateCountQuery', 1,3)"
String:"SELECT count(column1) FROM test where column1=1 and column3 = 'testAggregateQuery'"
String:"COUNT"
String:"INSERT INTO test (column1,column2,column3,column4,column5) VALUES (1, 71001, 'testAggregateSumQuery', 1,1)"
String:"INSERT INTO test (column1,column2,column3,column4,column5) VALUES (1, 71002, 'testAggregateSumQuery', 1,2)"
String:"INSERT INTO test (column1,column2,column3,column4,column5) VALUES (1, 71003, 'testAggregateSumQuery', 1,3)"
String:"SELECT sum(column5) FROM test where column1=1 and column3 = 'testAggregateSumQuery'"
String:"SUM"
String:"INSERT INTO test (column1,column2,column3,column4) VALUES (1, 72001, 'testStoringQuery', 1)"
String:"SELECT column4 FROM test where column4=1"
String:"column4"
String:"INSERT INTO test (column1,column2,column3) VALUES (1, 73001, 'testQueryLimit')"
String:"INSERT INTO test (column1,column2,column3) VALUES (1, 73002, 'testQueryLimit')"
String:"INSERT INTO test (column1,column2,column3) VALUES (1, 73003, 'testQueryLimit')"
String:"SELECT column2 FROM test where column1=1 and column3 = 'testQueryLimit' limit 1"
String:"CREATE TABLE if not exists test {REQUIRED INT64 user_id ; OPTIONAL STRING name; } PRIMARY KEY(user_id), ENTITY GROUP ROOT, ENTITY GROUP KEY(user_id);"
String:"INSERT INTO test (column1,column2,column3,column4,column5) VALUES (1, 74001, 'testIndexNameSameWithTableName', 1,1)"
String:"SELECT column2 FROM test where column4=1 and column5=1"
String:"INSERT INTO test (column1,column2,column3) VALUES (1, 75001, 'testIndexContainPrimaryKey')"
String:"SELECT column2 FROM test where column1=1 and column2=75001 and column3='testIndexContainPrimaryKey'"
String:"ALTER TABLE testRenameTable RENAME testRenameTable1"
String:"CREATE TABLE user123{REQUIRED INT64 user_id;REQUIRED INT64 photo_id;}PRIMARY KEY(user_id),ENTITY GROUP ROOT,ENTITY GROUP KEY(user_id),PARTITION BY RANGE('A', 'Z', 4);"
String:"user123"
String:"create index test_index on user123(photo_id);"
String:"INSERT INTO user123 (user_id, photo_id) VALUES (1, 1)"
String:"INSERT INTO user123 (user_id, photo_id) VALUES (2, 2)"
String:"INSERT INTO user123 (user_id, photo_id) VALUES (3, 3)"
String:"INSERT INTO user123 (user_id, photo_id) VALUES (4, 4)"
String:"H"
String:"INSERT INTO user123 (user_id, photo_id) VALUES (5, 5)"
String:"select * from user123 where photo_id=5"
String:"user_id"
String:"INSERT INTO user123 (user_id, photo_id) VALUES (6, 6)"
String:"select * from user123 where photo_id=6"
String:"test DATETIME with Calendar"
String:"CREATE TABLE test(ID INT PRIMARY KEY, D DATE, T TIME, TS TIMESTAMP)"
String:"INSERT INTO test VALUES(?, ?, ?, ?)"
String:"2001-02-03"
String:"regular offset ="
String:"other ="
String:"04:05:06"
String:"2007-08-09 10:11:12.131415"
String:"2101-02-03"
String:"14:05:06"
String:"2107-08-09 10:11:12.131415"
String:"ID"
String:"D"
String:"T"
String:"TS"
String:"should be: null"
String:"BigDecimal i="
String:"bd="
String:"; i1="
String:"bd1="
String:"test_child"

END CLASSLITERALS
