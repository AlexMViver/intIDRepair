[TIME]: 0:00:00.220063
=== SEARCH CLASSPATH ENTRY: /home/alex/Repositories/intIDRepair/toolRepos/ODRepair/experiments/_downloads/visualee
=== de.strullerbaumann.visualee.examiner.cdi.ExaminerObservesTest String Literals: =============
My test sourcecode
public void onEscalationBrowserRequest(@Observes Escalation escalation) {
SnapshotEscalator
public void escalate(@Observes @Severity(Severity.Level.HEARTBEAT) Snapshot current) {
List<Script> scripts = this.scripting.activeScripts();
try {
Bindings binding = this.scriptEngine.createBindings();
binding.put("current", current);
Snapshot recent = this.recentSnapshots.get(current.getInstanceName());
binding.put("previous", recent);
long start = System.currentTimeMillis();
} catch (Exception e) {
throw new IllegalStateException("Exception during script evaluation: " + e, e);
}
}

Snapshot
BrowserWindow
public void onToDoChange(@Observes(during = TransactionPhase.AFTER_SUCCESS) @ChangeEvent(ChangeEvent.Type.CREATION) ToDo todo) throws EncodeException {
List<Script> scripts = this.scripting.activeScripts();
try {
Bindings binding = this.scriptEngine.createBindings();
} catch (Exception e) {
throw new IllegalStateException("Exception during script evaluation: " + e, e);
}
}

ToDo
public void escalate(@Observes(notifyObserver=IF_EXISTS) @Severity(Severity.Level.HEARTBEAT) Snapshot current) {
}

public void escalate(@Observes(during=BEFORE_COMPLETION) @Severity(Severity.Level.HEARTBEAT) Snapshot current) {
}

==================================
=== de.strullerbaumann.visualee.filter.boundary.FilterContainer String Literals: =============
Filtered 
 because of 
==================================
